From: <Saved by Microsoft Internet Explorer 5>
Subject: Spreadsheet::WriteExcel - Write to a cross-platform Excel binary file.
Date: Tue, 16 May 2006 09:22:04 +0300
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_000F_01C678CA.322BB550"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.2869

This is a multi-part message in MIME format.

------=_NextPart_000_000F_01C678CA.322BB550
Content-Type: text/html;
	charset="windows-1251"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/WriteExcel/doc/WriteExcel.html

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Spreadsheet::WriteExcel - Write to a cross-platform =
Excel binary file.</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dwindows-1251"><LINK=20
rev=3Dmade href=3D"mailto:">
<STYLE type=3Dtext/css>PRE {
	FONT-SIZE: 10pt; COLOR: #0066cc; FONT-FAMILY: courier new, sans-serif
}
CODE {
	FONT-SIZE: 10pt; COLOR: #0066cc; FONT-FAMILY: courier new, sans-serif
}
</STYLE>

<META content=3D"MSHTML 6.00.2900.2873" name=3DGENERATOR></HEAD>
<BODY><!-- INDEX BEGIN -->
<UL>
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#NAME">NAME</A>=20

  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#VERSION">VERSION</A>=20

  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#SYNOPSIS">SYNOPSIS</A>=20

  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#DESCRIPTION">DESCRIPTION</A>=20

  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#QUICK_START">QUICK=20
  START</A>=20
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#WORKBOOK_METHODS">WORKBOOK=20
  METHODS</A>=20
  <UL>
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#new_">new()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#close_">close()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_tempdir_">set_tempdir()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#addworksheet_sheetname_">addworksheet($she=
etname)</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#addformat_properties_">addformat(%properti=
es)</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_custom_color_index_red_">set_custom_co=
lor($index,=20
    $red, $green, $blue)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_palette_xl5_">set_palette_xl5()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#sheets_">sheets()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_1904_">set_1904()</A>=20
    </LI></UL>
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#WORKSHEET_METHODS">WORKSHEET=20
  METHODS</A>=20
  <UL>
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Cell_notation">Cell=20
    notation</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#write_row_column_token_fo">write($row,=20
    $column, $token, $format)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#write_number_row_column_num">write_number(=
$row,=20
    $column, $number, $format)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#write_string_row_column_str">write_string(=
$row,=20
    $column, $string, $format)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#write_formula_row_column_fo">write_formula=
($row,=20
    $column, $formula, $format)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#write_blank_row_column_form">write_blank($=
row,=20
    $column, $format)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#write_row_row_column_array_">write_row($ro=
w,=20
    $column, $array_ref, $format)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#write_col_row_column_array_">write_col($ro=
w,=20
    $column, $array_ref, $format)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#write_url_row_col_url_str">write_url($row,=
=20
    $col, $url, $string, $format)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#write_url_range_row1_col1_r">write_url_ran=
ge($row1,=20
    $col1, $row2, $col2, $url, $string, $format)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#insert_bitmap_row_col_filen">insert_bitmap=
($row,=20
    $col, $filename, $x, $y, $scale_x, $scale_y)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#get_name_">get_name()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#activate_">activate()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#select_">select()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_first_sheet_">set_first_sheet()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#protect_password_">protect($password)</A> =


    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_selection_first_row_first">set_selecti=
on($first_row,=20
    $first_col, $last_row, $last_col)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_row_row_height_format_">set_row($row, =

    $height, $format)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_column_first_col_last_col">set_column(=
$first_col,=20
    $last_col, $width, $format, $hidden)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#freeze_panes_row_col_top_ro">freeze_panes(=
$row,=20
    $col, $top_row, $left_col)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#thaw_panes_y_x_top_row_le">thaw_panes($y, =

    $x, $top_row, $left_col)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#merge_cells_first_row_first_c">merge_cells=
($first_row,=20
    $first_col, $last_row, $last_col)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_zoom_scale_">set_zoom($scale)</A>=20
    </LI></UL>
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#PAGE_SET_UP_METHODS">PAGE=20
  SET-UP METHODS</A>=20
  <UL>
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_landscape_">set_landscape()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_portrait_">set_portrait()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_paper_index_">set_paper($index)</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#center_horizontally_">center_horizontally(=
)</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#center_vertically_">center_vertically()</A=
>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_margins_inches_">set_margins($inches)<=
/A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_header_string_margin_">set_header($str=
ing,=20
    $margin)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_footer_">set_footer()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#repeat_rows_first_row_last_ro">repeat_rows=
($first_row,=20
    $last_row)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#repeat_columns_first_col_last">repeat_colu=
mns($first_col,=20
    $last_col)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#hide_gridlines_option_">hide_gridlines($op=
tion)</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#print_row_col_headers_">print_row_col_head=
ers()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#print_area_first_row_first_co">print_area(=
$first_row,=20
    $first_col, $last_row, $last_col)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#fit_to_pages_width_height_">fit_to_pages($=
width,=20
    $height)</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_print_scale_scale_">set_print_scale($s=
cale)</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_h_pagebreaks_breaks_">http://search.cp=
an.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/WriteExcel/doc/WriteExce=
l.html#set_h_pagebreaks_breaks_</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_v_pagebreaks_breaks_">http://search.cp=
an.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/WriteExcel/doc/WriteExce=
l.html#set_v_pagebreaks_breaks_</A>=20
    </LI></UL>
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#CELL_FORMATTING">CELL=20
  FORMATTING</A>=20
  <UL>
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Creating_and_using_a_Format_obje">Creating=
=20
    and using a Format object</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Format_methods_and_Format_proper">Format=20
    methods and Format properties</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Working_with_formats">Working=20
    with formats</A> </LI></UL>
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#FORMAT_METHODS">FORMAT=20
  METHODS</A>=20
  <UL>
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_properties_properties_">set_properties=
(%properties)</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_font_fontname_">set_font($fontname)</A=
>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_size_">set_size()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_color_">set_color()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_bold_">set_bold()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_italic_">set_italic()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_underline_">set_underline()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_strikeout_">set_strikeout()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_script_">set_script()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_outline_">set_outline()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_shadow_">set_shadow()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_num_format_">set_num_format()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_locked_">set_locked()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_hidden_">set_hidden()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_align_">set_align()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_merge_">set_merge()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_text_wrap_">set_text_wrap()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_rotation_">set_rotation()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_text_justlast_">set_text_justlast()</A=
>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_pattern_">set_pattern()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_fg_color_">set_fg_color()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_border_">set_border()</A>=20

    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#set_border_color_">set_border_color()</A> =


    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#copy_format_">copy($format)</A>=20
    </LI></UL>
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#COLOURS_IN_EXCEL">COLOURS=20
  IN EXCEL</A>=20
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#DATES_IN_EXCEL">DATES=20
  IN EXCEL</A>=20
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#FORMULAS_AND_FUNCTIONS_IN_EXCEL">FORMULAS =

  AND FUNCTIONS IN EXCEL</A>=20
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#EXAMPLES">EXAMPLES</A>=20

  <UL>
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Example_1">Example=20
    1</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Example_2">Example=20
    2</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Example_3">Example=20
    3</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Example_4">Example=20
    4</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Example_5">Example=20
    5</A>=20
    <LI><A=20
    =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Additional_Examples">Additional=20
    Examples</A> </LI></UL>
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#LIMITATIONS">LIMITATIONS</A>=20

  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#REQUIREMENTS">REQUIREMENTS</A>=20

  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#PORTABILITY">PORTABILITY</A>=20

  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#DIAGNOSTICS">DIAGNOSTICS</A>=20

  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#THE_EXCEL_BINARY_FORMAT">THE=20
  EXCEL BINARY FORMAT</A>=20
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#WRITING_EXCEL_FILES">WRITING=20
  EXCEL FILES</A>=20
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#READING_EXCEL_FILES">READING=20
  EXCEL FILES</A>=20
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#BUGS">BUGS</A>=20

  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#TO_DO">TO=20
  DO</A>=20
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#SEE_ALSO">SEE=20
  ALSO</A>=20
  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#ACKNOWLEDGEMENTS">ACKNOWLEDGEMENTS</A>=20

  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#AUTHOR">AUTHOR</A>=20

  <LI><A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#COPYRIGHT">COPYRIGHT</A>=20
  </LI></UL><!-- INDEX END -->
<HR>

<P>
<H1><A name=3DNAME>NAME</A></H1>
<P>Spreadsheet::WriteExcel - Write to a cross-platform Excel binary =
file. </P>
<P>
<HR>

<H1><A name=3DVERSION>VERSION</A></H1>
<P>This document refers to version 0.37 of Spreadsheet::WriteExcel, =
released=20
April 29, 2002. </P>
<P>
<HR>

<H1><A name=3DSYNOPSIS>SYNOPSIS</A></H1>
<P>To write a string, a formatted string, a number and a formula to the =
first=20
worksheet in an Excel workbook called perl.xls: </P>
<P><PRE>    use Spreadsheet::WriteExcel;
</PRE>
<P></P>
<P><PRE>    # Create a new Excel workbook
    my $workbook =3D Spreadsheet::WriteExcel-&gt;new("perl.xls");
</PRE>
<P></P>
<P><PRE>    # Add a worksheet
    $worksheet =3D $workbook-&gt;addworksheet();
</PRE>
<P></P>
<P><PRE>    #  Add and define a format
    $format =3D $workbook-&gt;addformat(); # Add a format
    $format-&gt;set_bold();
    $format-&gt;set_color('red');
    $format-&gt;set_align('center');
</PRE>
<P></P>
<P><PRE>    # Write a formatted and unformatted string, row and column =
notation.
    $col =3D $row =3D 0;
    $worksheet-&gt;write($row, $col, "Hi Excel!", $format);
    $worksheet-&gt;write(1,    $col, "Hi Excel!");
</PRE>
<P></P>
<P><PRE>    # Write a number and a formula using A1 notation
    $worksheet-&gt;write('A3', 1.2345);
    $worksheet-&gt;write('A4', '=3DSIN(PI()/4)');
</PRE>
<P></P>
<P>
<HR>

<H1><A name=3DDESCRIPTION>DESCRIPTION</A></H1>
<P>The Spreadsheet::WriteExcel module can be used to create a =
cross-platform=20
Excel binary file. Multiple worksheets can be added to a workbook and =
formatting=20
can be applied to cells. Text, numbers, formulas, hyperlinks and images =
can be=20
written to the cells. </P>
<P>The Excel file produced by this module is compatible with Excel 5, =
95, 97,=20
2000 and 2002. </P>
<P>The module will work on the majority of Windows, UNIX and Macintosh=20
platforms. Generated files are also compatible with the Linux/UNIX =
spreadsheet=20
applications Gnumeric and OpenOffice. </P>
<P>This module cannot be used to write to an existing Excel file. </P>
<P>
<HR>

<H1><A name=3DQUICK_START>QUICK START</A></H1>
<P>Spreadsheet::WriteExcel tries to provide an interface to as many of =
Excel's=20
features as possible. As a result there is a lot of documentation to =
accompany=20
the interface and it can be difficult at first glance to see what it =
important=20
and what is not. So for those of you who prefer to assemble Ikea =
furniture first=20
and then read the instructions, here are three easy steps: </P>
<P>1. Create a new Excel <EM>workbook</EM> (i.e. file) using =
<CODE>new()</CODE>.=20
</P>
<P>2. Add a <EM>worksheet</EM> to the new workbook using=20
<CODE>addworksheet()</CODE>. </P>
<P>3. Write to the worksheet using <CODE>write()</CODE>. </P>
<P>Like this: </P>
<P><PRE>    use Spreadsheet::WriteExcel;                            # =
Step 0
</PRE>
<P></P>
<P><PRE>    $workbook  =3D Spreadsheet::WriteExcel-&gt;new("perl.xls");  =
# Step 1
    $worksheet =3D $workbook-&gt;addworksheet();                 # Step =
2
    $worksheet-&gt;write('A1', "Hi Excel!");                   # Step 3
</PRE>
<P></P>
<P>This will create an Excel file called <CODE>perl.xls</CODE> with a =
single=20
worksheet and the text <CODE>"Hi Excel!"</CODE> in the relevant cell. =
And that's=20
it. Okay, so there is actually a zeroth step as well, but <CODE>use=20
module</CODE> goes without saying. There are also more than 20 examples =
that=20
come with the distribution and which you can use to get you started. See =
<A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#EXAMPLES">EXAMPLES</A>.=20
</P>
<P>Those of you who read the instructions first and assemble the =
furniture=20
afterwards will know how to proceed. ;-) </P>
<P>
<HR>

<H1><A name=3DWORKBOOK_METHODS>WORKBOOK METHODS</A></H1>
<P>The Spreadsheet::WriteExcel module provides an object oriented =
interface to a=20
new Excel workbook. The following methods are available through a new =
workbook.=20
</P>
<P><PRE>    new()
    close()
    set_tempdir()
    addworksheet()
    set_custom_color()
    set_palette_xl5()
    addformat()
    sheets()
    set_1904()
</PRE>
<P></P>
<P>If you are unfamiliar with object oriented interfaces or the way that =
they=20
are implemented in Perl have a look at <CODE>perlobj</CODE> and=20
<CODE>perltoot</CODE> in the main Perl documentation. </P>
<P>
<HR>

<H2><A name=3Dnew_>new()</A></H2>
<P>A new Excel workbook is created using the <CODE>new()</CODE> =
constructor=20
which accepts either a filename or a filehandle as a parameter. The =
following=20
example creates a new Excel file based on a filename: </P>
<P><PRE>    my $workbook  =3D =
Spreadsheet::WriteExcel-&gt;new('filename.xls');
    my $worksheet =3D $workbook-&gt;addworksheet();
    $worksheet-&gt;write(0, 0, "Hi Excel!");
</PRE>
<P></P>
<P>Here are some other examples of using <CODE>new()</CODE> with =
filenames: </P>
<P><PRE>    my $workbook1 =3D =
Spreadsheet::WriteExcel-&gt;new($filename);
    my $workbook2 =3D =
Spreadsheet::WriteExcel-&gt;new("/tmp/filename.xls");
    my $workbook3 =3D =
Spreadsheet::WriteExcel-&gt;new("c:\\tmp\\filename.xls");
    my $workbook4 =3D =
Spreadsheet::WriteExcel-&gt;new('c:\tmp\filename.xls');
</PRE>
<P></P>
<P>The last two examples demonstrates how to create a file on DOS or =
Windows=20
where it is necessary to either escape the directory separator =
<CODE>\</CODE> or=20
to use single quotes to ensure that it isn't interpolated. For more =
information=20
see <CODE>perlfaq5: Why can't I use "C:\temp\foo" in DOS paths?</CODE>. =
</P>
<P>The <CODE>new()</CODE> constructor returns a Spreadsheet::WriteExcel =
object=20
that you can use to add worksheets and store data. It should be noted =
that=20
although <CODE>my</CODE> is not specifically required it defines the =
scope of=20
the new workbook variable and, in the majority of cases, ensures that =
the=20
workbook is closed properly without explicitly calling the =
<CODE>close()</CODE>=20
method. </P>
<P>If the file cannot be created, due to file permissions or some other =
reason,=20
<CODE>new</CODE> will return <CODE>undef</CODE>. Therefore, it is good =
practice=20
to check the return value of <CODE>new</CODE> before proceeding. As =
usual the=20
Perl variable <CODE>$!</CODE> will be set if there is a file creation =
error. You=20
will also see one of the warning messages detailed in <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#DIAGNOSTICS">DIAGNOSTICS</A>:=20
</P>
<P><PRE>    my $workbook  =3D =
Spreadsheet::WriteExcel-&gt;new('protected.xls');
    die "Problems creating new Excel file: $!" unless defined $workbook;
</PRE>
<P></P>
<P>You can also pass a valid filehandle to the <CODE>new()</CODE> =
constructor.=20
For example in a CGI program you could do something like this: </P>
<P><PRE>    binmode(STDOUT);
    my $workbook  =3D Spreadsheet::WriteExcel-&gt;new(\*STDOUT);
</PRE>
<P></P>
<P>The requirement for <CODE>binmode()</CODE> is explained below. </P>
<P>For CGI programs you can also use the special Perl filename =
<CODE>'-'</CODE>=20
which will redirect the output to STDOUT: </P>
<P><PRE>    my $workbook  =3D Spreadsheet::WriteExcel-&gt;new('-');
</PRE>
<P></P>
<P>See also, the <CODE>cgi.pl</CODE> program in the =
<CODE>examples</CODE>=20
directory of the distro. However, this special case will not work in=20
<CODE>mod_perl</CODE> programs where you will have to do something like =
the=20
following: </P>
<P><PRE>    tie *XLS, 'Apache';
    binmode(XLS);
    my $workbook  =3D Spreadsheet::WriteExcel-&gt;new(\*XLS);
</PRE>
<P></P>
<P>Filehandles can also be useful if you want to stream an Excel file =
over a=20
socket or if you want to store an Excel file in a tied scalar. For some =
examples=20
of using filehandles with Spreadsheet::WriteExcel see the=20
<CODE>filehandle.pl</CODE> program in the <CODE>examples</CODE> =
directory of the=20
distro. </P>
<P>Note about the requirement for <CODE>binmode()</CODE>: An Excel file =
is=20
comprised of binary data. Therefore, if you are using a filehandle you =
should=20
ensure that you <CODE>binmode()</CODE> it prior to passing it to=20
<CODE>new()</CODE>.You can safely do this regardless of whether your =
platform=20
requires it or not. For more information about <CODE>binmode()</CODE> =
see=20
<CODE>perlfunc</CODE> and <CODE>perlopentut</CODE> in the main Perl=20
documentation. It is equally important to note that you do not need to=20
<CODE>binmode()</CODE> a filename. In fact it would cause an error.=20
Spreadsheet::WriteExcel performs the <CODE>binmode()</CODE> internally =
when it=20
converts the filename to a filehandle. </P>
<P>
<HR>

<H2><A name=3Dclose_>close()</A></H2>
<P>The <CODE>close()</CODE> method can be used to explicitly close an =
Excel=20
file. </P>
<P><PRE>    $workbook-&gt;close();
</PRE>
<P></P>
<P>An explicit <CODE>close()</CODE> is required if the file must be =
closed prior=20
to performing some external action on it such as copying it, reading its =
size or=20
attaching it to an email. </P>
<P>In addition, <CODE>close()</CODE> may be required if the scope of the =

Workbook, Worksheet or Format objects cannot be determined by perl. =
Situations=20
where this can occur are: </P>
<UL>
  <LI><A name=3Ditem_If>If my() was not used to declare the scope of a =
workbook=20
  variable created using new().</A>=20
  <LI><A name=3Ditem_If>If the new(), addworksheet() or addformat() =
methods are=20
  called in subroutines.</A> </LI></UL>
<P>The reason for this is that Spreadsheet::WriteExcel relies on Perl's=20
<CODE>DESTROY</CODE> mechanism to trigger destructor methods in a =
specific=20
sequence. This will not happen if the scope of the variables cannot be=20
determined. </P>
<P>In general, if you create a file with a size of 0 bytes or you fail =
to create=20
a file you need to call <CODE>close()</CODE>. </P>
<P>
<HR>

<H2><A name=3Dset_tempdir_>set_tempdir()</A></H2>
<P>For speed and efficiency <CODE>Spreadsheet::WriteExcel</CODE> stores=20
worksheet data in temporary files prior to assembling the final =
workbook. </P>
<P>If Spreadsheet::WriteExcel is unable to create these temporary files =
it will=20
store the required data in memory. This can be slow for large files. To =
avoid=20
this problem the <CODE>set_tempdir()</CODE> method can be used to =
specify a=20
directory that is accessible for the creation of temporary files. </P>
<P>To check if this might be a problem on a particular system you can =
run a=20
simple test program with <CODE>-w</CODE> or <CODE>use warnings</CODE>. =
This will=20
generate a warning if the module cannot create the required temporary =
files:=20
</P>
<P><PRE>    #!/usr/bin/perl -w
</PRE>
<P></P>
<P><PRE>    use Spreadsheet::WriteExcel;
</PRE>
<P></P>
<P><PRE>    my $workbook  =3D =
Spreadsheet::WriteExcel-&gt;new("test.xls");
    my $worksheet =3D $workbook-&gt;addworksheet();
</PRE>
<P></P>
<P>However, this is not a common problem. The only reported instances of =
this=20
were with certain IIS configurations on Windows. Also, as of this =
version (0.37)=20
the mechanism for creating temporary files has changed and it should now =
work=20
without intervention even on IIS. </P>
<P>The <CODE>File::Temp</CODE> module is used to create the temporary =
files.=20
File::Temp uses <CODE>File::Spec</CODE> to determine an appropriate =
location for=20
these files such as <CODE>/tmp</CODE> or <CODE>c:\windows\temp</CODE>. =
You can=20
find out which directory is used on your system as follows: </P>
<P><PRE>    perl -MFile::Spec -le 'print File::Spec-&gt;tmpdir'
</PRE>
<P></P>
<P>Even if the default temporary file directory is accessible you may =
wish to=20
specify an alternative location for security reasons: </P>
<P><PRE>    $workbook-&gt;set_tempdir('/tmp/writeexcel');
    $workbook-&gt;set_tempdir('c:\windows\temp\writeexcel');
</PRE>
<P></P>
<P>The directory for the temporary file must exist, =
<CODE>set_tempdir()</CODE>=20
will not create a new directory. </P>
<P>Note: This method must be called before calling =
<CODE>addworksheet()</CODE>.=20
</P>
<P>
<HR>

<H2><A name=3Daddworksheet_sheetname_>addworksheet($sheetname)</A></H2>
<P>At least one worksheet should be added to a new workbook. A worksheet =
is used=20
to write data into cells: </P>
<P><PRE>    $worksheet1 =3D $workbook-&gt;addworksheet();          # =
Sheet1
    $worksheet2 =3D $workbook-&gt;addworksheet('Foglio2'); # Foglio2
    $worksheet3 =3D $workbook-&gt;addworksheet('Data');    # Data
    $worksheet4 =3D $workbook-&gt;addworksheet();          # Sheet4
</PRE>
<P></P>
<P>If <CODE>$sheetname</CODE> is not specified the default Excel =
convention will=20
be followed, i.e. Sheet1, Sheet2, etc. </P>
<P>Note, you cannot use the same sheet name in more than one worksheet. =
</P>
<P>
<HR>

<H2><A name=3Daddformat_properties_>addformat(%properties)</A></H2>
<P>The <CODE>addformat()</CODE> method can be used to create new Format =
objects=20
which are used to apply formatting to a cell. You can either define the=20
properties at creation time via a hash of property values or later via =
method=20
calls. </P>
<P><PRE>    $format1 =3D $workbook-&gt;addformat(%props); # Set =
properties at creation
    $format2 =3D $workbook-&gt;addformat();       # Set properties later
</PRE>
<P></P>
<P>See the <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#CELL_FORMATTING">CELL=20
FORMATTING</A> section for more details about Format properties and how =
to set=20
them. </P>
<P>
<HR>

<H2><A name=3Dset_custom_color_index_red_>set_custom_color($index, $red, =
$green,=20
$blue)</A></H2>
<P>The <CODE>set_custom_color()</CODE> method can be used to override =
one of the=20
built-in palette values with a more suitable colour. </P>
<P>The value for <CODE>$index</CODE> should be in the range 8..63, see =
<A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#COLOURS_IN_EXCEL">COLOURS=20
IN EXCEL</A>. </P>
<P>The default named colours use the following indices: </P>
<P><PRE>     8   =3D&gt;   black
     9   =3D&gt;   white
    10   =3D&gt;   red
    11   =3D&gt;   lime
    12   =3D&gt;   blue
    13   =3D&gt;   yellow
    14   =3D&gt;   magenta
    15   =3D&gt;   cyan
    16   =3D&gt;   brown
    17   =3D&gt;   green
    18   =3D&gt;   navy
    20   =3D&gt;   purple
    22   =3D&gt;   silver
    23   =3D&gt;   gray
    53   =3D&gt;   orange
</PRE>
<P></P>
<P>A new colour is set using its RGB (red green blue) components. The=20
<CODE>$red</CODE>, <CODE>$green</CODE> and <CODE>$blue</CODE> values =
must be in=20
the range 0..255. You can determine the required values in Excel using =
the=20
<CODE>Tools-&gt;Options-&gt;Colors-&gt;Modify</CODE> dialog. </P>
<P>The <CODE>set_custom_color()</CODE> workbook method can also be used =
with a=20
HTML style <CODE>#rrggbb</CODE> hex value: </P>
<P><PRE>    $workbook-&gt;set_custom_color(40, 255,  102,  0   ); # =
Orange
    $workbook-&gt;set_custom_color(40, 0xFF, 0x66, 0x00); # Same thing
    $workbook-&gt;set_custom_color(40, '#FF6600'       ); # Same thing
</PRE>
<P></P>
<P><PRE>    my $font =3D $workbook-&gt;addformat(color =3D&gt; 40); # =
Use the modified colour
</PRE>
<P></P>
<P>The return value from <CODE>set_custom_color()</CODE> is the index of =
the=20
colour that was changed: </P>
<P><PRE>    my $ferrari =3D $workbook-&gt;set_custom_color(40, 216, 12, =
12);
</PRE>
<P></P>
<P><PRE>    my $format  =3D $workbook-&gt;addformat(
                                        fg_color =3D&gt; $ferrari,
                                        pattern  =3D&gt; 1,
                                        border   =3D&gt; 1
                                      );
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dset_palette_xl5_>set_palette_xl5()</A></H2>
<P>Prior to version 0.36, Spreadsheet::WriteExcel used the Excel 5 =
default=20
colour palette. It was changed to the Excel 97+ palette for forward=20
compatibility. </P>
<P>However, if you have programs that rely on the colours and indices of =
the=20
Excel 5 palette you can revert to the previous default by using the=20
<CODE>set_palette_xl5()</CODE> method: </P>
<P><PRE>    $workbook-&gt;set_palette_xl5();
</PRE>
<P></P>
<P>A comparison of the colour components in the Excel 5 and Excel 97+ =
colour=20
palettes is shown in <CODE>rgb5-97.txt</CODE> in the <CODE>doc</CODE> =
directory=20
of the distro. </P>
<P>See also <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#COLOURS_IN_EXCEL">COLOURS=20
IN EXCEL</A>. </P>
<P>
<HR>

<H2><A name=3Dsheets_>sheets()</A></H2>
<P>The <CODE>sheets()</CODE> method returns a list of the worksheets in =
a=20
workbook. This can be useful if you want to repeat an operation on each=20
worksheet in a workbook or if you wish to refer to a worksheet by its =
index:=20
</P>
<P><PRE>    foreach $worksheet ($workbook-&gt;sheets()) {
       print $worksheet-&gt;get_name();
    }
</PRE>
<P></P>
<P><PRE>    # or:
</PRE>
<P></P>
<P><PRE>    ($workbook-&gt;sheets())[5]-&gt;write('A1', "Hello");
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dset_1904_>set_1904()</A></H2>
<P>Excel stores dates as real numbers where the integer part stores the =
number=20
of days since the epoch and the fractional part stores the percentage of =
the=20
day. The epoch can be either 1900 or 1904. Excel for Windows uses 1900 =
and Excel=20
for Macintosh uses 1904. However, Excel on either platform will convert=20
automatically between one system and the other. </P>
<P>Spreadsheet::WriteExcel stores dates in the 1900 format by default. =
If you=20
wish to change this you can call the <CODE>set_1904()</CODE> workbook =
method.=20
You can query the current value by calling the <CODE>get_1904()</CODE> =
workbook=20
method. This returns 0 for 1900 and 1 for 1904. </P>
<P>See also <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Dates_in_Excel">Dates=20
in Excel</A> for more information about working with Excel's date =
system. </P>
<P>In general you probably won't need to use <CODE>set_1904()</CODE>. =
</P>
<P>
<HR>

<H1><A name=3DWORKSHEET_METHODS>WORKSHEET METHODS</A></H1>
<P>A new worksheet is created by calling the <CODE>addworksheet()</CODE> =
method=20
from a workbook object: </P>
<P><PRE>    $worksheet1 =3D $workbook-&gt;addworksheet();
    $worksheet2 =3D $workbook-&gt;addworksheet();
</PRE>
<P></P>
<P>The following methods are available through a new worksheet: </P>
<P><PRE>    write()
    write_row()
    write_col()
    write_number()
    write_string()
    write_formula()
    write_blank()
    write_url()
    write_url_range()
    insert_bitmap()
    get_name()
    activate()
    select()
    protect()
    set_first_sheet()
    set_selection()
    set_row()
    set_column()
    freeze_panes()
    thaw_panes()
    merge_cells()
    set_zoom()
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3DCell_notation>Cell notation</A></H2>
<P>Spreadsheet::WriteExcel supports two forms of notation to designate =
the=20
position of cells: Row-column notation and A1 notation. </P>
<P>Row-column notation uses a zero based index for both row and column =
while A1=20
notation uses the standard Excel alphanumeric sequence of column letter =
and=20
1-based row. For example: </P>
<P><PRE>    (0, 0)      # The top left cell in row-column notation.
    ('A1')      # The top left cell in A1 notation.
</PRE>
<P></P>
<P><PRE>    (1999, 29)  # Row-column notation.
    ('AD2000')  # The same cell in A1 notation.
</PRE>
<P></P>
<P>Row-column notation is useful if you are referring to cells =
programmatically:=20
</P>
<P><PRE>    for my $i (0 .. 9) {
        $worksheet-&gt;write($i, 0, 'Hello'); # Cells A1 to A10
    }
</PRE>
<P></P>
<P>A1 notation is useful for setting up a worksheet manually and for =
working=20
with formulas: </P>
<P><PRE>    $worksheet-&gt;write('H1', 200);
    $worksheet-&gt;write('H2', '=3DH1+1');
</PRE>
<P></P>
<P>The <CODE>Spreadsheet::WriteExcel::Utility</CODE> module that is =
included in=20
the distro contains helper functions for dealing with A1 notation, for =
example:=20
</P>
<P><PRE>    use Spreadsheet::WriteExcel::Utility;
</PRE>
<P></P>
<P><PRE>    ($row, $col)    =3D xl_cell_to_rowcol('C2');  # (1, 2)
    $str            =3D xl_rowcol_to_cell(1, 2);  # C2
</PRE>
<P></P>
<P>For simplicity, the parameter lists for the worksheet method calls in =
the=20
following sections are given in terms of row-column notation. In all =
cases it is=20
also possible to use A1 notation. </P>
<P>Note: in Excel it is also possible to use a R1C1 notation. This is =
not=20
supported by Spreadsheet::WriteExcel. </P>
<P>
<HR>

<H2><A name=3Dwrite_row_column_token_fo>write($row, $column, $token,=20
$format)</A></H2>
<P>Excel distinguishes between data types such as strings, numbers, =
blanks,=20
formulas and hyperlinks. To simplify the process of writing data the=20
<CODE>write()</CODE> method acts as a general alias for several more =
specific=20
methods: </P>
<P><PRE>    write_string()
    write_number()
    write_blank()
    write_formula()
    write_url()
    write_row()
    write_col()
</PRE>
<P></P>
<P>The general rule is that if it looks like a <EM>something</EM> then a =

<EM>something</EM> is written. Here are some examples in both row-column =
and A1=20
notation: </P>
<P><PRE>                                                      # Same as:
    $worksheet-&gt;write(0, 0, "Hello"                ); # =
write_string()
    $worksheet-&gt;write(1, 0, 'One'                  ); # =
write_string()
    $worksheet-&gt;write(2, 0,  2                     ); # =
write_number()
    $worksheet-&gt;write(3, 0,  3.00001               ); # =
write_number()
    $worksheet-&gt;write(4, 0,  ""                    ); # write_blank()
    $worksheet-&gt;write(5, 0,  ''                    ); # write_blank()
    $worksheet-&gt;write(6, 0,  undef                 ); # write_blank()
    $worksheet-&gt;write(7, 0                         ); # write_blank()
    $worksheet-&gt;write(8, 0,  '<A =
href=3D"http://www.perl.com/">http://www.perl.com/</A>'); # write_url()
    $worksheet-&gt;write('A9',  '<A =
href=3D"ftp://ftp.cpan.org/">ftp://ftp.cpan.org/</A>' ); # write_url()
    $worksheet-&gt;write('A10', 'internal:Sheet1!A1'  ); # write_url()
    $worksheet-&gt;write('A11', 'external:c:\foo.xls' ); # write_url()
    $worksheet-&gt;write('A12', '=3DA3 + 3*A4'          ); # =
write_formula()
    $worksheet-&gt;write('A13', '=3DSIN(PI()/4)'        ); # =
write_formula()
    $worksheet-&gt;write('A14', \@array               ); # write_row()
    $worksheet-&gt;write('A15', [\@array]             ); # write_col()
</PRE>
<P></P>
<P>The "looks like" rule is defined by regular expressions: </P>
<P><CODE>write_number()</CODE> if <CODE>$token</CODE> is a number based =
on the=20
following regex: <CODE>$token =3D~=20
/^([+-]?)(?=3D\d|\.\d)\d*(\.\d*)?([Ee]([+-]?\d+))?$/</CODE>. </P>
<P><CODE>write_blank()</CODE> if <CODE>$token</CODE> is undef or a blank =
string:=20
<CODE>undef</CODE>, <CODE>""</CODE> or <CODE>''</CODE>. </P>
<P><CODE>write_url()</CODE> if <CODE>$token</CODE> is a http, https, ftp =
or=20
mailto URL based on the following regexes: <CODE>$token =3D~=20
m|^[fh]tt?ps?://|</CODE> or <CODE>$token =3D~ m|^mailto:|</CODE>. </P>
<P><CODE>write_url()</CODE> if <CODE>$token</CODE> is an internal or =
external=20
sheet reference based on the following regex: <CODE>$token =3D~=20
m[^(in|ex)ternal:]</CODE>. </P>
<P><CODE>write_formula()</CODE> if the first character of =
<CODE>$token</CODE> is=20
<CODE>"=3D"</CODE>. </P>
<P><CODE>write_row()</CODE> if <CODE>$token</CODE> is an array ref. </P>
<P><CODE>write_col()</CODE> if <CODE>$token</CODE> is an array ref of =
array=20
refs. </P>
<P><CODE>write_string()</CODE> if none of the previous conditions apply. =
</P>
<P>The <CODE>$format</CODE> parameter is optional. It should be a valid =
Format=20
object, see <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#CELL_FORMATTING">CELL=20
FORMATTING</A>: </P>
<P><PRE>    my $format =3D $workbook-&gt;addformat();
    $format-&gt;set_bold();
    $format-&gt;set_color('red');
    $format-&gt;set_align('center');
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write(4, 0, "Hello", $format ); # Formatted =
string
</PRE>
<P></P>
<P>The <CODE>write()</CODE> method will ignore empty string or=20
<CODE>undef</CODE> tokens unless a format is also supplied. As such you =
needn't=20
worry about special handling for empty or <CODE>undef</CODE> values in =
your=20
data. See also the the <CODE>write_blank()</CODE> method. </P>
<P>One problem with the <CODE>write()</CODE> method is that occasionally =
data=20
looks like a number but you don't want it treated as a number. For =
example, zip=20
codes or phone numbers often start with a leading zero. If you write it =
as a=20
number then the leading <CODE>zero(s)</CODE> will be stripped. To get =
around=20
this you can either write the number with a number format or explicitly =
write=20
the number as a string: </P>
<P><PRE>    # Write as a number: 1209
    $worksheet-&gt;write('A1', '01209');
</PRE>
<P></P>
<P><PRE>    # Format as a number: 01209
    my $format1 =3D $workbook-&gt;addformat(num_format =3D&gt; '00000');
    $worksheet-&gt;write('A2', '01209', $format1);
</PRE>
<P></P>
<P><PRE>    # Write as a string: 01209
    $worksheet-&gt;write_string('A3', '01209');
</PRE>
<P></P>
<P>However, if the user edits the string in the last example it will =
convert=20
back to a number. To get around this you can use the Excel text format=20
<CODE>@</CODE>: </P>
<P><PRE>    # Format as a string: 01209
    my $format2 =3D $workbook-&gt;addformat(num_format =3D&gt; '@');
    $worksheet-&gt;write_string('A4', '01209', $format2);
</PRE>
<P></P>
<P>Note also that Excel writes strings with a left justification and =
numbers=20
with a right justification by default. </P>
<P>The <CODE>write</CODE> methods return: </P>
<P><PRE>    0 for success.
   -1 for insufficient number of arguments.
   -2 for row or column out of bounds.
   -3 for string too long.
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dwrite_number_row_column_num>write_number($row, $column, =
$number,=20
$format)</A></H2>
<P>Write an integer or a float to the cell specified by =
<CODE>$row</CODE> and=20
<CODE>$column</CODE>: </P>
<P><PRE>    $worksheet-&gt;write_number(0, 0,  123456);
    $worksheet-&gt;write_number('A2',  2.3451);
</PRE>
<P></P>
<P>See the note about <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Cell_notation">Cell=20
notation</A>. The <CODE>$format</CODE> parameter is optional. </P>
<P>In general it is sufficient to use the <CODE>write()</CODE> method. =
</P>
<P>
<HR>

<H2><A name=3Dwrite_string_row_column_str>write_string($row, $column, =
$string,=20
$format)</A></H2>
<P>Write a string to the cell specified by <CODE>$row</CODE> and=20
<CODE>$column</CODE>: </P>
<P><PRE>    $worksheet-&gt;write_string(0, 0, "Your text here" );
    $worksheet-&gt;write_string('A2', "or here" );
</PRE>
<P></P>
<P>The maximum string size is 255 characters. The <CODE>$format</CODE> =
parameter=20
is optional. </P>
<P>In general it is sufficient to use the <CODE>write()</CODE> method. =
However,=20
you may sometimes wish to use the <CODE>write_string()</CODE> method to =
write=20
data that looks like a number but that you don't want treated as a =
number. For=20
example, zip codes or phone numbers: </P>
<P><PRE>    # Write as a plain string
    $worksheet-&gt;write_string('A1', '01209');
</PRE>
<P></P>
<P>However, if the user edits this string Excel may convert it back to a =
number.=20
To get around this you can use the Excel text format <CODE>@</CODE>: =
</P>
<P><PRE>    # Format as a string. Doesn't change to a number when edited
    my $format1 =3D $workbook-&gt;addformat(num_format =3D&gt; '@');
    $worksheet-&gt;write_string('A2', '01209', $format1);
</PRE>
<P></P>
<P>See also the note about <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Cell_notation">Cell=20
notation</A>. </P>
<P>The 255 character limit will be removed when the module moves to the =
Excel=20
97+ format. In the meantime, you can work around this limit using a =
formula. See=20
the <CODE>long_string.pl</CODE> program in the <CODE>examples</CODE> =
directory=20
of the distro. </P>
<P>
<HR>

<H2><A name=3Dwrite_formula_row_column_fo>write_formula($row, $column, =
$formula,=20
$format)</A></H2>
<P>Write a formula or function to the cell specified by =
<CODE>$row</CODE> and=20
<CODE>$column</CODE>: </P>
<P><PRE>    $worksheet-&gt;write_formula(0, 0, '=3D$B$3 + B4'  );
    $worksheet-&gt;write_formula(1, 0, '=3DSIN(PI()/4)');
    $worksheet-&gt;write_formula(2, 0, '=3DSUM(B1:B5)' );
    $worksheet-&gt;write_formula('A4', '=3DIF(A3&gt;1,"Yes", "No")'   );
    $worksheet-&gt;write_formula('A5', '=3DAVERAGE(1, 2, 3, 4)'    );
    $worksheet-&gt;write_formula('A6', '=3DDATEVALUE("1-Jan-2001")');
</PRE>
<P></P>
<P>See the note about <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Cell_notation">Cell=20
notation</A>. For more information about writing Excel formulas see <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#FORMULAS_AND_FUNCTIONS_IN_EXCEL">FORMULAS =

AND FUNCTIONS IN EXCEL</A> </P>
<P>In general it is sufficient to use the <CODE>write()</CODE> method. =
</P>
<P>
<HR>

<H2><A name=3Dwrite_blank_row_column_form>write_blank($row, $column,=20
$format)</A></H2>
<P>Write a blank cell specified by <CODE>$row</CODE> and =
<CODE>$column</CODE>:=20
</P>
<P><PRE>    $worksheet-&gt;write_blank(0, 0, $format);
</PRE>
<P></P>
<P>This method is used to add formatting to a cell which doesn't contain =
a=20
string or number value. </P>
<P>Excel differentiates between an "Empty" cell and a "Blank" cell. An =
"Empty"=20
cell is a cell which doesn't contain data whilst a "Blank" cell is a =
cell which=20
doesn't contain data but does contain formatting. Excel stores "Blank" =
cells but=20
ignores "Empty" cells. </P>
<P>As such, if you write an empty cell without formatting it is ignored: =
</P>
<P><PRE>    $worksheet-&gt;write('A1',  undef, $format); # write_blank()
    $worksheet-&gt;write('A2',  undef         ); # Ignored
</PRE>
<P></P>
<P>This seemingly uninteresting fact means that you can write arrays of =
data=20
without special treatment for undef or empty string values. </P>
<P>See the note about <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Cell_notation">Cell=20
notation</A>. </P>
<P>
<HR>

<H2><A name=3Dwrite_row_row_column_array_>write_row($row, $column, =
$array_ref,=20
$format)</A></H2>
<P>The <CODE>write_row()</CODE> method can be used to write a 1D or 2D =
array or=20
data in one go. This is useful for converting the results of a database =
query=20
into an Excel worksheet. You must pass a reference to the array of data =
rather=20
than the array itself. The <CODE>write()</CODE> method is then called =
for each=20
element of the data. For example: </P>
<P><PRE>    @array      =3D ('awk', 'gawk', 'mawk');
    $array_ref  =3D \@array;
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write_row(0, 0, $array_ref);
</PRE>
<P></P>
<P><PRE>    # The above example is equivalent to:
    $worksheet-&gt;write(0, 0, $array[0]);
    $worksheet-&gt;write(0, 1, $array[1]);
    $worksheet-&gt;write(0, 2, $array[2]);
</PRE>
<P></P>
<P>Note: For convenience the <CODE>write()</CODE> method behaves in the =
same way=20
as <CODE>write_row()</CODE> if it is passed an array reference. =
Therefore the=20
following two method calls are equivalent: </P>
<P><PRE>    $worksheet-&gt;write_row('A1', $array_ref); # Write a row of =
data
    $worksheet-&gt;write(    'A1', $array_ref); # Same thing
</PRE>
<P></P>
<P>As with all of the write methods the <CODE>$format</CODE> parameter =
is=20
optional. If a format is specified it is applied to all the elements of =
the data=20
array. </P>
<P>Array references within the data will be treated as columns. This =
allows you=20
to write 2D arrays of data in one go. For example: </P>
<P><PRE>    @eec =3D  (
                ['maggie', 'milly', 'molly', 'may'  ],
                [13,       14,      15,      16     ],
                ['shell',  'star',  'crab',  'stone']
            );
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write_row('A1', \@eec);
</PRE>
<P></P>
<P>Would produce a worksheet as follows: </P>
<P><PRE>     -----------------------------------------------------------
    |   |    A    |    B    |    C    |    D    |    E    | ...
     -----------------------------------------------------------
    | 1 | maggie  | 13      | shell   | ...     |  ...    | ...
    | 2 | milly   | 14      | star    | ...     |  ...    | ...
    | 3 | molly   | 15      | crab    | ...     |  ...    | ...
    | 4 | may     | 16      | stone   | ...     |  ...    | ...
    | 5 | ...     | ...     | ...     | ...     |  ...    | ...
    | 6 | ...     | ...     | ...     | ...     |  ...    | ...
</PRE>
<P></P>
<P>To write the data in a row-column order refer to the =
<CODE>write_col()</CODE>=20
method below. </P>
<P>Any <CODE>undef</CODE> values in the data will be ignored unless a =
format is=20
applied to the data, in which case a formatted blank cell will be =
written. In=20
either case the appropriate row or column value will still be =
incremented. </P>
<P>To find out more about array references refer to <CODE>perlref</CODE> =
and=20
<CODE>perlreftut</CODE> in the main Perl documentation. To find out more =
about=20
2D arrays or "lists of lists" refer to <CODE>perllol</CODE>. </P>
<P>The <CODE>write_row()</CODE> method returns the first error =
encountered when=20
writing the elements of the data or zero if no errors were encountered. =
See the=20
return values described for the <CODE>write()</CODE> method above. </P>
<P>See also the <CODE>write_arrays.pl</CODE> program in the=20
<CODE>examples</CODE> directory of the distro. </P>
<P>
<HR>

<H2><A name=3Dwrite_col_row_column_array_>write_col($row, $column, =
$array_ref,=20
$format)</A></H2>
<P>The <CODE>write_col()</CODE> method can be used to write a 1D or 2D =
array or=20
data in one go. This is useful for converting the results of a database =
query=20
into an Excel worksheet. You must pass a reference to the array of data =
rather=20
than the array itself. The <CODE>write()</CODE> method is then called =
for each=20
element of the data. For example: </P>
<P><PRE>    @array      =3D ('awk', 'gawk', 'mawk');
    $array_ref  =3D \@array;
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write_col(0, 0, $array_ref);
</PRE>
<P></P>
<P><PRE>    # The above example is equivalent to:
    $worksheet-&gt;write(0, 0, $array[0]);
    $worksheet-&gt;write(1, 0, $array[1]);
    $worksheet-&gt;write(2, 0, $array[2]);
</PRE>
<P></P>
<P>As with all of the write methods the <CODE>$format</CODE> parameter =
is=20
optional. If a format is specified it is applied to all the elements of =
the data=20
array. </P>
<P>Array references within the data will be treated as rows. This allows =
you to=20
write 2D arrays of data in one go. For example: </P>
<P><PRE>    @eec =3D  (
                ['maggie', 'milly', 'molly', 'may'  ],
                [13,       14,      15,      16     ],
                ['shell',  'star',  'crab',  'stone']
            );
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write_col('A1', \@eec);
</PRE>
<P></P>
<P>Would produce a worksheet as follows: </P>
<P><PRE>     -----------------------------------------------------------
    |   |    A    |    B    |    C    |    D    |    E    | ...
     -----------------------------------------------------------
    | 1 | maggie  | milly   | molly   | may     |  ...    | ...
    | 2 | 13      | 14      | 15      | 16      |  ...    | ...
    | 3 | shell   | star    | crab    | stone   |  ...    | ...
    | 4 | ...     | ...     | ...     | ...     |  ...    | ...
    | 5 | ...     | ...     | ...     | ...     |  ...    | ...
    | 6 | ...     | ...     | ...     | ...     |  ...    | ...
</PRE>
<P></P>
<P>To write the data in a column-row order refer to the =
<CODE>write_row()</CODE>=20
method above. </P>
<P>Any <CODE>undef</CODE> values in the data will be ignored unless a =
format is=20
applied to the data, in which case a formatted blank cell will be =
written. In=20
either case the appropriate row or column value will still be =
incremented. </P>
<P>As noted above the <CODE>write()</CODE> method can be used as a =
synonym for=20
<CODE>write_row()</CODE> and <CODE>write_row()</CODE> handles nested =
array refs=20
as columns. Therefore, the following two method calls are equivalent =
although=20
the more explicit call to <CODE>write_col()</CODE> would be preferable =
for=20
maintainability: </P>
<P><PRE>    $worksheet-&gt;write_col('A1', $array_ref    ); # Write a =
column of data
    $worksheet-&gt;write(    'A1', [ $array_ref ]); # Same thing
</PRE>
<P></P>
<P>To find out more about array references refer to <CODE>perlref</CODE> =
and=20
<CODE>perlreftut</CODE> in the main Perl documentation. To find out more =
about=20
2D arrays or "lists of lists" refer to <CODE>perllol</CODE>. </P>
<P>The <CODE>write_col()</CODE> method returns the first error =
encountered when=20
writing the elements of the data or zero if no errors were encountered. =
See the=20
return values described for the <CODE>write()</CODE> method above. </P>
<P>See also the <CODE>write_arrays.pl</CODE> program in the=20
<CODE>examples</CODE> directory of the distro. </P>
<P>
<HR>

<H2><A name=3Dwrite_url_row_col_url_str>write_url($row, $col, $url, =
$string,=20
$format)</A></H2>
<P>Write a hyperlink to a URL in the cell specified by <CODE>$row</CODE> =
and=20
<CODE>$column</CODE>. The hyperlink is comprised of two elements: the =
visible=20
label and the invisible link. The visible label is the same as the link =
unless=20
an alternative string is specified. The parameters <CODE>$string</CODE> =
and the=20
<CODE>$format</CODE> are optional and their position is interchangeable. =
</P>
<P>The label is written using the <CODE>write_string()</CODE> method. =
Therefore=20
the 255 characters string limit applies to the label: the URL can be any =
length.=20
</P>
<P>There are three web style URI's supported: <CODE>http://</CODE>,=20
<CODE>ftp://</CODE> and <CODE>mailto:</CODE>: </P>
<P><PRE>    $worksheet-&gt;write_url(0, 0,  '<A =
href=3D"ftp://www.perl.org/">ftp://www.perl.org/</A>'                  =
);
    $worksheet-&gt;write_url(1, 0,  '<A =
href=3D"http://www.perl.com/">http://www.perl.com/</A>', 'Perl home'    =
);
    $worksheet-&gt;write_url('A3',  '<A =
href=3D"http://www.perl.com/">http://www.perl.com/</A>', $format        =
);
    $worksheet-&gt;write_url('A4',  '<A =
href=3D"http://www.perl.com/">http://www.perl.com/</A>', 'Perl', =
$format);
    $worksheet-&gt;write_url('A5',  '<A =
href=3D"mailto:jmcnamara@cpan.org">mailto:jmcnamara@cpan.org</A>'        =
    );
</PRE>
<P></P>
<P>There are two local URIs supported: <CODE>internal:</CODE> and=20
<CODE>external:</CODE>. These are used for hyperlinks to internal =
worksheet=20
references or external workbook and worksheet references: </P>
<P><PRE>    $worksheet-&gt;write_url('A6',  'internal:Sheet2!A1'         =
          );
    $worksheet-&gt;write_url('A7',  'internal:Sheet2!A1',   $format      =
  );
    $worksheet-&gt;write_url('A8',  'internal:Sheet2!A1:B2'              =
  );
    $worksheet-&gt;write_url('A9',  q{internal:'Sales Data'!A1}          =
  );
    $worksheet-&gt;write_url('A10', 'external:c:\temp\foo.xls'           =
  );
    $worksheet-&gt;write_url('A11', 'external:c:\temp\foo.xls#Sheet2!A1' =
  );
    $worksheet-&gt;write_url('A12', 'external:..\..\..\foo.xls'          =
  );
    $worksheet-&gt;write_url('A13', =
'external:..\..\..\foo.xls#Sheet2!A1'  );
    $worksheet-&gt;write_url('A13', 'external:\\\\NETWORK\share\foo.xls' =
  );
</PRE>
<P></P>
<P>All of the these URI types are recognised by the <CODE>write()</CODE> =
method,=20
see above. </P>
<P>Worksheet references are typically of the form =
<CODE>Sheet1!A1</CODE>. You=20
can also refer to a worksheet range using the standard Excel notation:=20
<CODE>Sheet1!A1:B2</CODE>. </P>
<P>In external links the workbook and worksheet name must be separated =
by the=20
<CODE>#</CODE> character: <CODE>external:Workbook.xls#Sheet1!A1'</CODE>. =
</P>
<P>You can also link to a named range in the target worksheet. For =
example say=20
you have a named range called <CODE>my_name</CODE> in the workbook=20
<CODE>c:\temp\foo.xls</CODE> you could link to it as follows: </P>
<P><PRE>    $worksheet-&gt;write_url('A14', =
'external:c:\temp\foo.xls#my_name');
</PRE>
<P></P>
<P>Note, you cannot currently create named ranges with=20
<CODE>Spreadsheet::WriteExcel</CODE>. </P>
<P>Excel requires that worksheet names containing spaces or non =
alphanumeric=20
characters are single quoted as follows <CODE>'Sales Data'!A1</CODE>. If =
you=20
need to do this in a single quoted string then you can either escape the =
single=20
quotes <CODE>\'</CODE> or use the quote operator <CODE>q{}</CODE> as =
described=20
in <CODE>perlop</CODE> in the main Perl documentation. </P>
<P>Links to network files are also supported. MS/Novell Network files =
normally=20
begin with two back slashes as follows <CODE>\\NETWORK\etc</CODE>. In =
order to=20
generate this in a single or double quoted string you will have to =
escape the=20
backslashes, <CODE>'\\\\NETWORK\etc'</CODE>. </P>
<P>If you are using double quote strings then you should be careful to =
escape=20
anything that looks like a metacharacter. For more information see=20
<CODE>perlfaq5: Why can't I use "C:\temp\foo" in DOS paths?</CODE>. </P>
<P>Finally, you can avoid most of these quoting problems by using =
forward=20
slashes. These are translated internally to backslashes: </P>
<P><PRE>    $worksheet-&gt;write_url('A14', "external:c:/temp/foo.xls"   =
          );
    $worksheet-&gt;write_url('A15', 'external://NETWORK/share/foo.xls'   =
  );
</PRE>
<P></P>
<P>Note: Hyperlinks are not available in Excel 5. They will appear as a =
string=20
only. </P>
<P>See also, the note about <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Cell_notation">Cell=20
notation</A>. </P>
<P>
<HR>

<H2><A name=3Dwrite_url_range_row1_col1_r>write_url_range($row1, $col1, =
$row2,=20
$col2, $url, $string, $format)</A></H2>
<P>This method is essentially the same as the <CODE>write_url()</CODE> =
method=20
described above. The main difference is that you can specify that the =
link is=20
available for a range of cells: </P>
<P><PRE>    $worksheet-&gt;write_url(0, 0, 0, 3, '<A =
href=3D"ftp://www.perl.org/">ftp://www.perl.org/</A>'              );
    $worksheet-&gt;write_url(1, 0, 0, 3, '<A =
href=3D"http://www.perl.com/">http://www.perl.com/</A>', 'Perl home');
    $worksheet-&gt;write_url('A3:D3',    'internal:Sheet2!A1'            =
   );
    $worksheet-&gt;write_url('A4:D4',     'external:c:\temp\foo.xls'     =
   );
</PRE>
<P></P>
<P>This method is generally only required when used in conjunction with =
merged=20
cells. See the <CODE>merge_cells()</CODE> method and the =
<CODE>merge</CODE>=20
property of a Format object, <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#CELL_FORMATTING">CELL=20
FORMATTING</A>. </P>
<P>There is no way to force this behaviour through the =
<CODE>write()</CODE>=20
method. </P>
<P>The parameters <CODE>$string</CODE> and the <CODE>$format</CODE> are =
optional=20
and their position is interchangeable. However, they are applied only to =
the=20
first cell in the range. </P>
<P>Note: Hyperlinks are not available in Excel 5. They will appear as a =
string=20
only. </P>
<P>See also, the note about <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Cell_notation">Cell=20
notation</A>. </P>
<P>
<HR>

<H2><A name=3Dinsert_bitmap_row_col_filen>insert_bitmap($row, $col, =
$filename, $x,=20
$y, $scale_x, $scale_y)</A></H2>
<P>This method can be used to insert a bitmap into a worksheet. The =
bitmap must=20
be a 24 bit, true colour, bitmap. No other format is supported. The=20
<CODE>$x</CODE>, <CODE>$y</CODE>, <CODE>$scale_x</CODE> and=20
<CODE>$scale_y</CODE> parameters are optional. </P>
<P><PRE>    $worksheet1-&gt;insert_bitmap('A1', 'perl.bmp');
    $worksheet2-&gt;insert_bitmap('A1', '../images/perl.bmp');
    $worksheet3-&gt;insert_bitmap('A1', '.c:\images\perl.bmp');
</PRE>
<P></P>
<P>Note: you must call <CODE>set_row()</CODE> or =
<CODE>set_column()</CODE>=20
before <CODE>insert_bitmap()</CODE> if you wish to change the default =
dimensions=20
of any of the rows or columns that the images occupies. Also, if you use =
large=20
fonts then the height of the row that they occupy may change =
automatically. This=20
in turn could affect the scaling of your image. To avoid this you should =

explicitly set the height of the row using <CODE>set_row()</CODE>. </P>
<P>The parameters <CODE>$x</CODE> and <CODE>$y</CODE> can be used to =
specify an=20
offset from the top left hand corner of the the cell specified by=20
<CODE>$row</CODE> and <CODE>$col</CODE>. The offset values are in =
pixels. </P>
<P><PRE>    $worksheet1-&gt;insert_bitmap('A1', 'perl.bmp', 32, 10);
</PRE>
<P></P>
<P>The default width of a cell is 63 pixels. The default height of a =
cell is 17=20
pixels. The offsets are ignored if they are greater than the width or =
height of=20
the underlying cell. </P>
<P>The pixels offsets can be calculated using the following =
relationships: </P>
<P><PRE>    Wp =3D 7We +5
    Hp =3D 4/3He
</PRE>
<P></P>
<P><PRE>    where:
    We is the cell width in Excels units
    Wp is width in pixels
    He is the cell height in Excels units
    Hp is height in pixels
</PRE>
<P></P>
<P>The parameters <CODE>$scale_x</CODE> and <CODE>$scale_y</CODE> can be =
used to=20
scale the inserted image horizontally and vertically: </P>
<P><PRE>    # Scale the inserted image: width x 2.0, height x 0.8
    $worksheet-&gt;insert_bitmap('A1', 'perl.bmp', 0, 0, 2, 0.8);
</PRE>
<P></P>
<P>Note: although Excel allows you to import several graphics formats =
such as=20
gif, jpeg, png and eps these are converted internally into a proprietary =
format.=20
One of the few non-proprietary formats that Excel supports is 24 bit, =
true=20
colour, bitmaps. Therefore if you wish to use images in any other format =
you=20
must first use an external application such as ImageMagick/Perl::Magick =
to=20
convert them to 24 bit bitmaps. </P>
<P>A later release will support the use of file handles and pre-encoded =
bitmap=20
strings. </P>
<P>See also the <CODE>images.pl</CODE> program in the =
<CODE>examples</CODE>=20
directory of the distro. </P>
<P>
<HR>

<H2><A name=3Dget_name_>get_name()</A></H2>
<P>The <CODE>get_name()</CODE> method is used to retrieve the name of a=20
worksheet. For example: </P>
<P><PRE>    foreach my $sheet ($workbook-&gt;sheets()) {
        print $sheet-&gt;get_name();
    }
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dactivate_>activate()</A></H2>
<P>The <CODE>activate()</CODE> method is used to specify which worksheet =
is=20
initially visible in a multi-sheet workbook: </P>
<P><PRE>    $worksheet1 =3D $workbook-&gt;addworksheet('To');
    $worksheet2 =3D $workbook-&gt;addworksheet('the');
    $worksheet3 =3D $workbook-&gt;addworksheet('wind');
</PRE>
<P></P>
<P><PRE>    $worksheet3-&gt;activate();
</PRE>
<P></P>
<P>This is similar to the Excel VBA activate method. More than one =
worksheet can=20
be selected via the <CODE>select()</CODE> method, however only one =
worksheet can=20
be active. The default value is the first worksheet. </P>
<P>
<HR>

<H2><A name=3Dselect_>select()</A></H2>
<P>The <CODE>select()</CODE> method is used to indicate that a worksheet =
is=20
selected in a multi-sheet workbook: </P>
<P><PRE>    $worksheet1-&gt;activate();
    $worksheet2-&gt;select();
    $worksheet3-&gt;select();
</PRE>
<P></P>
<P>A selected worksheet has its tab highlighted. Selecting worksheets is =
a way=20
of grouping them together so that, for example, several worksheets could =
be=20
printed in one go. A worksheet that has been activated via the=20
<CODE>activate()</CODE> method will also appear as selected. You =
probably won't=20
need to use the <CODE>select()</CODE> method very often. </P>
<P>
<HR>

<H2><A name=3Dset_first_sheet_>set_first_sheet()</A></H2>
<P>The <CODE>activate()</CODE> method determines which worksheet is =
initially=20
selected. However, if there are a large number of worksheets the =
selected=20
worksheet may not appear on the screen. To avoid this you can select =
which is=20
the leftmost visible worksheet using <CODE>set_first_sheet()</CODE>: =
</P>
<P><PRE>    for (1..20) {
        $workbook-&gt;addworksheet;
    }
</PRE>
<P></P>
<P><PRE>    $worksheet21 =3D $workbook-&gt;addworksheet();
    $worksheet22 =3D $workbook-&gt;addworksheet();
</PRE>
<P></P>
<P><PRE>    $worksheet21-&gt;set_first_sheet();
    $worksheet22-&gt;activate();
</PRE>
<P></P>
<P>This method is not required very often. The default value is the =
first=20
worksheet. </P>
<P>
<HR>

<H2><A name=3Dprotect_password_>protect($password)</A></H2>
<P>The <CODE>protect()</CODE> method is used to protect a worksheet from =

modification: </P>
<P><PRE>    $worksheet-&gt;protect();
</PRE>
<P></P>
<P>It can be turned off in Excel via the=20
<CODE>Tools-&gt;Protection-&gt;Unprotect Sheet</CODE> menu command. </P>
<P>The <CODE>protect()</CODE> method also has the effect of enabling a =
cell's=20
<CODE>locked</CODE> and <CODE>hidden</CODE> properties if they have been =
set. A=20
"locked" cell cannot be edited. A "hidden" cell will display the results =
of a=20
formula but not the formula itself. In Excel a cell's locked property is =
on by=20
default. </P>
<P><PRE>    # Set some format properties
    my $unlocked  =3D $workbook-&gt;addformat(locked =3D&gt; 0);
    my $hidden    =3D $workbook-&gt;addformat(hidden =3D&gt; 1);
</PRE>
<P></P>
<P><PRE>    # Enable worksheet protection
    $worksheet-&gt;protect();
</PRE>
<P></P>
<P><PRE>    # This cell cannot be edited, it is locked by default
    $worksheet-&gt;write('A1', '=3D1+2');
</PRE>
<P></P>
<P><PRE>    # This cell can be edited
    $worksheet-&gt;write('A2', '=3D1+2', $unlocked);
</PRE>
<P></P>
<P><PRE>    # The formula in this cell isn't visible
    $worksheet-&gt;write('A3', '=3D1+2', $hidden);
</PRE>
<P></P>
<P>See also the <CODE>set_locked</CODE> and <CODE>set_hidden</CODE> =
format=20
methods in <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#CELL_FORMATTING">CELL=20
FORMATTING</A>. </P>
<P>You can optionally add a password to the worksheet protection: </P>
<P><PRE>    $worksheet-&gt;protect('drowssap');
</PRE>
<P></P>
<P>Note, the worksheet level password in Excel provides very weak =
protection. It=20
does not encrypt your data in any way and it is very easy to deactivate. =

Therefore, do not use the above method if you wish to protect sensitive =
data or=20
calculations. However, before you get worried, Excel's own workbook =
level=20
password protection does provide strong encryption in Excel 97+. For =
technical=20
reasons this will never be supported by =
<CODE>Spreadsheet::WriteExcel</CODE>.=20
</P>
<P>
<HR>

<H2><A name=3Dset_selection_first_row_first>set_selection($first_row, =
$first_col,=20
$last_row, $last_col)</A></H2>
<P>This method can be used to specify which cell or cells are selected =
in a=20
worksheet. The most common requirement is to select a single cell, in =
which case=20
<CODE>$last_row</CODE> and <CODE>$last_col</CODE> can be omitted. The =
active=20
cell within a selected range is determined by the order in which=20
<CODE>$first</CODE> and <CODE>$last</CODE> are specified. It is also =
possible to=20
specify a cell or a range using A1 notation. See the note about <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Cell_notation">Cell=20
notation</A>. </P>
<P>Examples: </P>
<P><PRE>    $worksheet1-&gt;set_selection(3, 3);       # 1. Cell D4.
    $worksheet2-&gt;set_selection(3, 3, 6, 6); # 2. Cells D4 to G7.
    $worksheet3-&gt;set_selection(6, 6, 3, 3); # 3. Cells G7 to D4.
    $worksheet4-&gt;set_selection('D4');       # Same as 1.
    $worksheet5-&gt;set_selection('D4:G7');    # Same as 2.
    $worksheet6-&gt;set_selection('G7:D4');    # Same as 3.
</PRE>
<P></P>
<P>The default cell selections is (0, 0), 'A1'. </P>
<P>
<HR>

<H2><A name=3Dset_row_row_height_format_>set_row($row, $height, =
$format)</A></H2>
<P>This method can be used to specify the height and format of a row. =
The=20
<CODE>$format</CODE> parameter is optional, for additional information, =
see <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#CELL_FORMATTING">CELL=20
FORMATTING</A>. </P>
<P><PRE>    $worksheet-&gt;set_row(0, 20); # Row 1 height set to 20
</PRE>
<P></P>
<P>If you wish to set the format without changing the height you can =
pass=20
<CODE>undef</CODE> as the height parameter: </P>
<P><PRE>    $worksheet-&gt;set_row(0, undef, $format);
</PRE>
<P></P>
<P>The <CODE>$format</CODE> parameter will be applied to any cells in =
the row=20
that don't have a format. For example </P>
<P><PRE>    $worksheet-&gt;set_row(0, undef, $format1);    # Set the =
format for row 1
    $worksheet-&gt;write('A1', "Hello");           # Defaults to =
$format1
    $worksheet-&gt;write('B1', "Hello", $format2); # Keeps $format2
</PRE>
<P></P>
<P>If you wish to define a row format in this way you should call the =
method=20
before any calls to <CODE>write()</CODE>. If you call it afterwards it =
will=20
overwrite any format that was previously specified. </P>
<P>
<HR>

<H2><A name=3Dset_column_first_col_last_col>set_column($first_col, =
$last_col,=20
$width, $format, $hidden)</A></H2>
<P>This method can be used to specify the width and format of a single =
column or=20
a range of columns. If the method is applied to a single column the =
value of=20
<CODE>$first_col</CODE> and <CODE>$last_col</CODE> should be the same. =
It is=20
also possible to specify a column range using the form of A1 notation =
used for=20
columns. See the note about <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Cell_notation">Cell=20
notation</A>. </P>
<P>Examples: </P>
<P><PRE>    $worksheet-&gt;set_column(0, 0,  20); # Column  A   width =
set to 20
    $worksheet-&gt;set_column(1, 3,  30); # Columns B-D width set to 30
    $worksheet-&gt;set_column('E:E', 20); # Column  E   width set to 20
    $worksheet-&gt;set_column('F:H', 30); # Columns F-H width set to 30
</PRE>
<P></P>
<P>The width corresponds to the column width value that is specified in =
Excel.=20
It is approximately equal to the length of a string in the default font =
of Arial=20
10. Unfortunately, there is no way to specify "AutoFit" for a column in =
the=20
Excel file format. This feature is only available at runtime from within =
Excel.=20
</P>
<P>The <CODE>$format</CODE> parameter is optional, for additional =
information,=20
see <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#CELL_FORMATTING">CELL=20
FORMATTING</A>. If you wish to set the format without changing the width =
you can=20
pass <CODE>undef</CODE> as the width parameter: </P>
<P><PRE>    $worksheet-&gt;set_column(0, 0, undef, $format);
</PRE>
<P></P>
<P>The <CODE>$format</CODE> parameter will be applied to any cells in =
the column=20
that don't have a format. For example </P>
<P><PRE>    $worksheet-&gt;set_column('A:A', undef, $format1); # Set the =
format for col 1
    $worksheet-&gt;write('A1', "Hello");               # Defaults to =
$format1
    $worksheet-&gt;write('A2', "Hello", $format2);     # Keeps $format2
</PRE>
<P></P>
<P>If you wish to define a column format in this way you should call the =
method=20
before any calls to <CODE>write()</CODE>. If you call it afterwards it =
won't=20
have any effect. </P>
<P>A default row format takes precedence over a default column format =
</P>
<P><PRE>    $worksheet-&gt;set_row(0, undef,        $format1); # Set the =
format for row 1
    $worksheet-&gt;set_column('A:A', undef, $format2); # Set the format =
for col 1
    $worksheet-&gt;write('A1', "Hello");               # Defaults to =
$format1
    $worksheet-&gt;write('A2', "Hello");               # Defaults to =
$format2
</PRE>
<P></P>
<P>The <CODE>$hidden</CODE> parameter is optional. It should be set to 1 =
if you=20
wish to hide a column. This can be used, for example, to hide =
intermediary steps=20
in a complicated calculation: </P>
<P><PRE>    $worksheet-&gt;set_column('D:D', 20,    $format, 1);
    $worksheet-&gt;set_column('E:E', undef, undef,   1);
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dfreeze_panes_row_col_top_ro>freeze_panes($row, $col, =
$top_row,=20
$left_col)</A></H2>
<P>This method can be used to divide a worksheet into horizontal or =
vertical=20
regions known as panes and to also "freeze" these panes so that the =
splitter=20
bars are not visible. This is the same as the <CODE>Window-&gt;Freeze=20
Panes</CODE> menu command in Excel </P>
<P>The parameters <CODE>$row</CODE> and <CODE>$col</CODE> are used to =
specify=20
the location of the split. It should be noted that the split is =
specified at the=20
top or left of a cell and that the method uses zero based indexing. =
Therefore to=20
freeze the first row of a worksheet it is necessary to specify the split =
at row=20
2 (which is 1 as the zero-based index). This might lead you to think =
that you=20
are using a 1 based index but this is not the case. </P>
<P>You can set one of the <CODE>$row</CODE> and <CODE>$col</CODE> =
parameters as=20
zero if you do not want either a vertical or horizontal split. </P>
<P>Examples: </P>
<P><PRE>    $worksheet-&gt;freeze_panes(1, 0); # Freeze the first row
    $worksheet-&gt;freeze_panes('A2'); # Same using A1 notation
    $worksheet-&gt;freeze_panes(0, 1); # Freeze the first column
    $worksheet-&gt;freeze_panes('B1'); # Same using A1 notation
    $worksheet-&gt;freeze_panes(1, 2); # Freeze the first row and first =
2 columns
    $worksheet-&gt;freeze_panes('C2'); # Same using A1 notation
</PRE>
<P></P>
<P>The parameters <CODE>$top_row</CODE> and <CODE>$left_col</CODE> are =
optional.=20
They are used to specify the top-most or left-most visible row or column =
in the=20
scrolling region of the panes. For example to freeze the first row and =
to have=20
the scrolling region begin at row twenty: </P>
<P><PRE>    $worksheet-&gt;freeze_panes(1, 0, 20, 0);
</PRE>
<P></P>
<P>You cannot use A1 notation for the <CODE>$top_row</CODE> and=20
<CODE>$left_col</CODE> parameters. </P>
<P>See also the <CODE>panes.pl</CODE> program in the =
<CODE>examples</CODE>=20
directory of the distribution. </P>
<P>
<HR>

<H2><A name=3Dthaw_panes_y_x_top_row_le>thaw_panes($y, $x, $top_row,=20
$left_col)</A></H2>
<P>This method can be used to divide a worksheet into horizontal or =
vertical=20
regions known as panes. This method is different from the=20
<CODE>freeze_panes()</CODE> method in that the splits between the panes =
will be=20
visible to the user and each pane will have its own scroll bars. </P>
<P>The parameters <CODE>$y</CODE> and <CODE>$x</CODE> are used to =
specify the=20
vertical and horizontal position of the split. The units for =
<CODE>$y</CODE> and=20
<CODE>$x</CODE> are the same as those used by Excel to specify row =
height and=20
column width. However, the vertical and horizontal units are different =
from each=20
other. Therefore you must specify the <CODE>$y</CODE> and =
<CODE>$x</CODE>=20
parameters in terms of the row heights and column widths that you have =
set or=20
the default values which are <CODE>12.75</CODE> for a row and =
<CODE>8.43</CODE>=20
for a column. </P>
<P>You can set one of the <CODE>$y</CODE> and <CODE>$x</CODE> parameters =
as zero=20
if you do not want either a vertical or horizontal split. The parameters =

<CODE>$top_row</CODE> and <CODE>$left_col</CODE> are optional. They are =
used to=20
specify the top-most or left-most visible row or column in the =
bottom-right=20
pane. </P>
<P>Example: </P>
<P><PRE>    $worksheet-&gt;thaw_panes(12.75, 0,    1, 0); # First row
    $worksheet-&gt;thaw_panes(0,     8.43, 0, 1); # First column
    $worksheet-&gt;thaw_panes(12.75, 8.43, 1, 1); # First row and column
</PRE>
<P></P>
<P>You cannot use A1 notation with this method. </P>
<P>See also the <CODE>freeze_panes()</CODE> method and the =
<CODE>panes.pl</CODE>=20
program in the <CODE>examples</CODE> directory of the distribution. </P>
<P>
<HR>

<H2><A name=3Dmerge_cells_first_row_first_c>merge_cells($first_row, =
$first_col,=20
$last_row, $last_col)</A></H2>
<P>Merging cells is generally achieved by setting the <CODE>merge</CODE> =

property of a Format object, see <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#CELL_FORMATTING">CELL=20
FORMATTING</A>. However, in certain circumstances this is not sufficient =
and you=20
must additionally specify the cells to be merged via the=20
<CODE>merge_cells()</CODE> method. </P>
<P>The main use of the <CODE>merge_cells()</CODE> method is to merge =
cells=20
vertically. </P>
<P>The <CODE>merge_cells()</CODE> method can also be used to merge cells =
that=20
contain hyperlinks although this can also be achieved via the=20
<CODE>write_url_range()</CODE> method. </P>
<P>For an example of how to use this method see the =
<CODE>merge3.pl</CODE>=20
program in the <CODE>examples</CODE> directory of the distribution. </P>
<P>This method is currently of limited use. It will play a more =
important role=20
when Spreadsheet::WriteExcel moves to the Excel 97/2000 file format. =
</P>
<P>In general the <CODE>set_merge()</CODE> method is all that you will =
require=20
to create merged cells, see <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#CELL_FORMATTING">CELL=20
FORMATTING</A>. </P>
<P>
<HR>

<H2><A name=3Dset_zoom_scale_>set_zoom($scale)</A></H2>
<P>Set the worksheet zoom factor in the range <CODE>10 &lt;=3D $scale =
&lt;=3D=20
400</CODE>: </P>
<P><PRE>    $worksheet1-&gt;set_zoom(50);
    $worksheet2-&gt;set_zoom(75);
    $worksheet3-&gt;set_zoom(300);
    $worksheet4-&gt;set_zoom(400);
</PRE>
<P></P>
<P>The default zoom factor is 100. You cannot zoom to "Selection" =
because it is=20
calculated by Excel at run-time. </P>
<P>Note, <CODE>set_zoom()</CODE> does not affect the scale of the =
printed page.=20
For that you should use <CODE>set_print_scale()</CODE>. </P>
<P>
<HR>

<H1><A name=3DPAGE_SET_UP_METHODS>PAGE SET-UP METHODS</A></H1>
<P>Page set-up methods affect the way that a worksheet looks when it is =
printed.=20
They control features such as page headers and footers and margins. =
These=20
methods are really just standard worksheet methods. They are documented =
here in=20
a separate section for the sake of clarity. </P>
<P>The following methods are available for page set-up: </P>
<P><PRE>    set_landscape()
    set_portrait()
    set_paper()
    center_horizontally()
    center_vertically()
    set_margins()
    set_header()
    set_footer()
    repeat_rows()
    repeat_columns()
    hide_gridlines()
    print_row_col_headers()
    print_area()
    fit_to_pages()
    set_print_scale()
    set_h_pagebreaks()
    set_v_pagebreaks()
</PRE>
<P></P>
<P>A common requirement when working with Spreadsheet::WriteExcel is to =
apply=20
the same page set-up features to all of the worksheets in a workbook. To =
do this=20
you can use the <CODE>sheets()</CODE> method of the =
<CODE>workbook</CODE> class=20
to access the array of worksheets in a workbook: </P>
<P><PRE>    foreach $worksheet ($workbook-&gt;sheets()) {
       $worksheet-&gt;set_landscape();
    }
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dset_landscape_>set_landscape()</A></H2>
<P>This method is used to set the orientation of a worksheet's printed =
page to=20
landscape: </P>
<P><PRE>    $worksheet-&gt;set_landscape(); # Landscape mode
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dset_portrait_>set_portrait()</A></H2>
<P>This method is used to set the orientation of a worksheet's printed =
page to=20
portrait. The default worksheet orientation is portrait, so you won't =
generally=20
need to call this method. </P>
<P><PRE>    $worksheet-&gt;set_portrait(); # Portrait mode
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dset_paper_index_>set_paper($index)</A></H2>
<P>This method is used to set the paper format for the printed output of =
a=20
worksheet. The following paper styles are available: </P>
<P><PRE>    Index   Paper format            Paper size
    =3D=3D=3D=3D=3D   =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D            =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
      0     Printer default         -
      1     Letter                  8 1/2 x 11 in
      2     Letter Small            8 1/2 x 11 in
      3     Tabloid                 11 x 17 in
      4     Ledger                  17 x 11 in
      5     Legal                   8 1/2 x 14 in
      6     Statement               5 1/2 x 8 1/2 in
      7     Executive               7 1/4 x 10 1/2 in
      8     A3                      297 x 420 mm
      9     A4                      210 x 297 mm
     10     A4 Small                210 x 297 mm
     11     A5                      148 x 210 mm
     12     B4                      250 x 354 mm
     13     B5                      182 x 257 mm
     14     Folio                   8 1/2 x 13 in
     15     Quarto                  215 x 275 mm
     16     -                       10x14 in
     17     -                       11x17 in
     18     Note                    8 1/2 x 11 in
     19     Envelope  9             3 7/8 x 8 7/8
     20     Envelope 10             4 1/8 x 9 1/2
     21     Envelope 11             4 1/2 x 10 3/8
     22     Envelope 12             4 3/4 x 11
     23     Envelope 14             5 x 11 1/2
     24     C size sheet            -
     25     D size sheet            -
     26     E size sheet            -
     27     Envelope DL             110 x 220 mm
     28     Envelope C3             324 x 458 mm
     29     Envelope C4             229 x 324 mm
     30     Envelope C5             162 x 229 mm
     31     Envelope C6             114 x 162 mm
     32     Envelope C65            114 x 229 mm
     33     Envelope B4             250 x 353 mm
     34     Envelope B5             176 x 250 mm
     35     Envelope B6             176 x 125 mm
     36     Envelope                110 x 230 mm
     37     Monarch                 3.875 x 7.5 in
     38     Envelope                3 5/8 x 6 1/2 in
     39     Fanfold                 14 7/8 x 11 in
     40     German Std Fanfold      8 1/2 x 12 in
     41     German Legal Fanfold    8 1/2 x 13 in
</PRE>
<P></P>
<P>Note, it is likely that not all of these paper types will be =
available to the=20
end user since it will depend on the paper formats that the user's =
printer=20
supports. Therefore, it is best to stick to standard paper types. </P>
<P><PRE>    $worksheet-&gt;set_paper(1); # US Letter
    $worksheet-&gt;set_paper(9); # A4
</PRE>
<P></P>
<P>If you do not specify a paper type the worksheet will print using the =

printer's default paper. </P>
<P>
<HR>

<H2><A name=3Dcenter_horizontally_>center_horizontally()</A></H2>
<P>Center the worksheet data horizontally between the margins on the =
printed=20
page: </P>
<P><PRE>    $worksheet-&gt;center_horizontally();
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dcenter_vertically_>center_vertically()</A></H2>
<P>Center the worksheet data vertically between the margins on the =
printed page:=20
</P>
<P><PRE>    $worksheet-&gt;center_vertically();
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dset_margins_inches_>set_margins($inches)</A></H2>
<P>There are several methods available for setting the worksheet margins =
on the=20
printed page: </P>
<P><PRE>    set_margins()        # Set all margins to the same value
    set_margins_LR()     # Set left and right margins to the same value
    set_margins_TB()     # Set top and bottom margins to the same value
    set_margin_left();   # Set left margin
    set_margin_right();  # Set right margin
    set_margin_top();    # Set top margin
    set_margin_bottom(); # Set bottom margin
</PRE>
<P></P>
<P>All of these methods take a distance in inches as a parameter. Note: =
1 inch =3D=20
25.4mm. ;-) The default left and right margin is 0.75 inch. The default =
top and=20
bottom margin is 1.00 inch. </P>
<P>
<HR>

<H2><A name=3Dset_header_string_margin_>set_header($string, =
$margin)</A></H2>
<P>Headers and footers are generated using a <CODE>$string</CODE> which =
is a=20
combination of plain text and control characters. The =
<CODE>$margin</CODE>=20
parameter is optional. </P>
<P>The available control character are: </P>
<P><PRE>    Control             Category            Description
    =3D=3D=3D=3D=3D=3D=3D             =3D=3D=3D=3D=3D=3D=3D=3D           =
 =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
    &amp;L                  Justification       Left
    &amp;C                                      Center
    &amp;R                                      Right
</PRE>
<P></P>
<P><PRE>    &amp;P                  Information         Page number
    &amp;N                                      Total number of pages
    &amp;D                                      Date
    &amp;T                                      Time
    &amp;F                                      File name
    &amp;A                                      Worksheet name
</PRE>
<P></P>
<P><PRE>    &amp;fontsize           Font                Font size
    &amp;"font,style"                           Font name and style
    &amp;U                                      Single underline
    &amp;E                                      Double underline
    &amp;S                                      Strikethrough
    &amp;X                                      Superscript
    &amp;Y                                      Subscript
</PRE>
<P></P>
<P><PRE>    &amp;&amp;                  Miscellaneous       Literal =
ampersand &amp;
</PRE>
<P></P>
<P>Text in headers and footers can be justified (aligned) to the left, =
center=20
and right by prefixing the text with the control characters =
<CODE>&amp;L</CODE>,=20
<CODE>&amp;C</CODE> and <CODE>&amp;R</CODE>. </P>
<P>For example (with ASCII art representation of the results): </P>
<P><PRE>    $worksheet-&gt;set_header('&amp;LHello');
</PRE>
<P></P>
<P><PRE>     =
---------------------------------------------------------------
    |                                                               |
    | Hello                                                         |
    |                                                               |
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;set_header('&amp;CHello');
</PRE>
<P></P>
<P><PRE>     =
---------------------------------------------------------------
    |                                                               |
    |                          Hello                                |
    |                                                               |
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;set_header('&amp;RHello');
</PRE>
<P></P>
<P><PRE>     =
---------------------------------------------------------------
    |                                                               |
    |                                                         Hello |
    |                                                               |
</PRE>
<P></P>
<P>For simple text, if you do not specify any justification the text =
will be=20
centred. However, you must prefix the text with <CODE>&amp;C</CODE> if =
you=20
specify a font name or any other formatting: </P>
<P><PRE>    $worksheet-&gt;set_header('Hello');
</PRE>
<P></P>
<P><PRE>     =
---------------------------------------------------------------
    |                                                               |
    |                          Hello                                |
    |                                                               |
</PRE>
<P></P>
<P>You can have text in each of the justification regions: </P>
<P><PRE>    =
$worksheet-&gt;set_header('&amp;LCiao&amp;CBello&amp;RCielo');
</PRE>
<P></P>
<P><PRE>     =
---------------------------------------------------------------
    |                                                               |
    | Ciao                     Bello                          Cielo |
    |                                                               |
</PRE>
<P></P>
<P>The information control characters act as variables that Excel will =
update as=20
the workbook or worksheet changes. Times and dates are in the users =
default=20
format: </P>
<P><PRE>    $worksheet-&gt;set_header('&amp;CPage &amp;P of &amp;N');
</PRE>
<P></P>
<P><PRE>     =
---------------------------------------------------------------
    |                                                               |
    |                        Page 1 of 6                            |
    |                                                               |
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;set_header('&amp;CUpdated at &amp;T');
</PRE>
<P></P>
<P><PRE>     =
---------------------------------------------------------------
    |                                                               |
    |                    Updated at 12:30 PM                        |
    |                                                               |
</PRE>
<P></P>
<P>You can specify the font size of a section of the text by prefixing =
it with=20
the control character <CODE>&amp;n</CODE> where <CODE>n</CODE> is the =
font size:=20
</P>
<P><PRE>    $worksheet1-&gt;set_header('&amp;C&amp;30Hello Big'  );
    $worksheet2-&gt;set_header('&amp;C&amp;10Hello Small');
</PRE>
<P></P>
<P>You can specify the font of a section of the text by prefixing it =
with the=20
control sequence <CODE>&amp;"font,style"</CODE> where =
<CODE>fontname</CODE> is a=20
font name such as "Courier New" or "Times New Roman" and =
<CODE>style</CODE> is=20
one of the standard Windows font descriptions: "Regular", "Italic", =
"Bold" or=20
"Bold Italic": </P>
<P><PRE>    $worksheet1-&gt;set_header('&amp;C&amp;"Courier =
New,Italic"Hello');
    $worksheet2-&gt;set_header('&amp;C&amp;"Courier New,Bold =
Italic"Hello');
    $worksheet3-&gt;set_header('&amp;C&amp;"Times New =
Roman,Regular"Hello');
</PRE>
<P></P>
<P>It is possible to combine all of these features together to create=20
sophisticated headers and footers. As an aid to setting up complicated =
headers=20
and footers you can record a page set-up as a macro in Excel and look at =
the=20
format strings that VBA produces. Remember however that VBA uses two =
double=20
quotes <CODE>""</CODE> to indicate a single double quote. For the last =
example=20
above the equivalent VBA code looks like this: </P>
<P><PRE>    .LeftHeader   =3D ""
    .CenterHeader =3D "&amp;""Times New Roman,Regular""Hello"
    .RightHeader  =3D ""
</PRE>
<P></P>
<P>To include a single literal ampersand <CODE>&amp;</CODE> in a header =
or=20
footer you should use a double ampersand <CODE>&amp;&amp;</CODE>: </P>
<P><PRE>    $worksheet1-&gt;set_header('&amp;CCuriouser &amp;&amp; =
Curiouser - Attorneys at Law');
</PRE>
<P></P>
<P>As stated above the margin parameter is optional. As with the other =
margins=20
the value should be in inches. The default header and footer margin is =
0.50=20
inch. The header and footer margin size can be set as follows: </P>
<P><PRE>    $worksheet-&gt;set_header('&amp;CHello', 0.75);
</PRE>
<P></P>
<P>The header and footer margins are independent of the top and bottom =
margins.=20
</P>
<P>Note, the header or footer string must be less than 255 characters. =
Strings=20
longer than this will not be written and a warning will be generated. =
</P>
<P>See, also the <CODE>headers.pl</CODE> program in the =
<CODE>examples</CODE>=20
directory of the distribution. </P>
<P>
<HR>

<H2><A name=3Dset_footer_>set_footer()</A></H2>
<P>The syntax of the <CODE>set_footer()</CODE> method is the same as=20
<CODE>set_header()</CODE>, see above. </P>
<P>
<HR>

<H2><A name=3Drepeat_rows_first_row_last_ro>repeat_rows($first_row,=20
$last_row)</A></H2>
<P>Set the number of rows to repeat at the top of each printed page. =
</P>
<P>For large Excel documents it is often desirable to have the first row =
or rows=20
of the worksheet print out at the top of each page. This can be achieved =
by=20
using the <CODE>repeat_rows()</CODE> method. The parameters=20
<CODE>$first_row</CODE> and <CODE>$last_row</CODE> are zero based. The=20
<CODE>$last_row</CODE> parameter is optional if you only wish to specify =
one=20
row: </P>
<P><PRE>    $worksheet1-&gt;repeat_rows(0);    # Repeat the first row
    $worksheet2-&gt;repeat_rows(0, 1); # Repeat the first two rows
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Drepeat_columns_first_col_last>repeat_columns($first_col,=20
$last_col)</A></H2>
<P>Set the columns to repeat at the left hand side of each printed page. =
</P>
<P>For large Excel documents it is often desirable to have the first =
column or=20
columns of the worksheet print out at the left hand side of each page. =
This can=20
be achieved by using the <CODE>repeat_columns()</CODE> method. The =
parameters=20
<CODE>$first_column</CODE> and <CODE>$last_column</CODE> are zero based. =
The=20
<CODE>$last_column</CODE> parameter is optional if you only wish to =
specify one=20
column. You can also specify the columns using A1 column notation, see =
the note=20
about <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Cell_notation">Cell=20
notation</A>. </P>
<P><PRE>    $worksheet1-&gt;repeat_columns(0);     # Repeat the first =
column
    $worksheet2-&gt;repeat_columns(0, 1);  # Repeat the first two =
columns
    $worksheet3-&gt;repeat_columns('A:A'); # Repeat the first column
    $worksheet4-&gt;repeat_columns('A:B'); # Repeat the first two =
columns
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dhide_gridlines_option_>hide_gridlines($option)</A></H2>
<P>This method is used to hide the gridlines on the screen and printed =
page.=20
Gridlines are the lines that divide the cells on a worksheet. Screen and =
printed=20
gridlines are turned on by default in an Excel worksheet. If you have =
defined=20
your own cell borders you may wish to hide the default gridlines. </P>
<P><PRE>    $worksheet-&gt;hide_gridlines();
</PRE>
<P></P>
<P>The following values of <CODE>$option</CODE> are valid: </P>
<P><PRE>    0 : Don't hide gridlines
    1 : Hide printed gridlines only
    2 : Hide screen and printed gridlines
</PRE>
<P></P>
<P>If you don't supply an argument or use <CODE>undef</CODE> the default =
option=20
is 1, i.e. only the printed gridlines are hidden. </P>
<P>
<HR>

<H2><A name=3Dprint_row_col_headers_>print_row_col_headers()</A></H2>
<P>Set the option to print the row and column headers on the printed =
page. </P>
<P>An Excel worksheet looks something like the following; </P>
<P><PRE>     ------------------------------------------
    |   |   A   |   B   |   C   |   D   |  ...
     ------------------------------------------
    | 1 |       |       |       |       |  ...
    | 2 |       |       |       |       |  ...
    | 3 |       |       |       |       |  ...
    | 4 |       |       |       |       |  ...
    |...|  ...  |  ...  |  ...  |  ...  |  ...
</PRE>
<P></P>
<P>The headers are the letters and numbers at the top and the left of =
the=20
worksheet. Since these headers serve mainly as a indication of position =
on the=20
worksheet they generally do not appear on the printed page. If you wish =
to have=20
them printed you can use the <CODE>print_row_col_headers()</CODE> method =
: </P>
<P><PRE>    $worksheet-&gt;print_row_col_headers()
</PRE>
<P></P>
<P>Do not confuse these headers with page headers as described in the=20
<CODE>set_header()</CODE> section above. </P>
<P>
<HR>

<H2><A name=3Dprint_area_first_row_first_co>print_area($first_row, =
$first_col,=20
$last_row, $last_col)</A></H2>
<P>This method is used to specify the area of the worksheet that will be =

printed. All four parameters must be specified. You can also use A1 =
notation,=20
see the note about <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Cell_notation">Cell=20
notation</A>. </P>
<P><PRE>    $worksheet1-&gt;print_area("A1:H20");    # Cells A1 to H20
    $worksheet2-&gt;print_area(0, 0, 19, 7); # The same
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dfit_to_pages_width_height_>fit_to_pages($width, =
$height)</A></H2>
<P>The <CODE>fit_to_pages()</CODE> method is used to fit the printed =
area to a=20
specific number of pages both vertically and horizontally. If the =
printed area=20
exceeds the specified number of pages it will be scaled down to fit. =
This=20
guarantees that the printed area will always appear on the specified =
number of=20
pages even if the page size or margins change. </P>
<P><PRE>    $worksheet1-&gt;fit_to_pages(1, 1); # Fit to 1x1 pages
    $worksheet2-&gt;fit_to_pages(2, 1); # Fit to 2x1 pages
    $worksheet3-&gt;fit_to_pages(1, 2); # Fit to 1x2 pages
</PRE>
<P></P>
<P>The print area can be defined using the <CODE>print_area()</CODE> =
method as=20
described above. </P>
<P>A common requirement is to fit the printed output to <EM>n</EM> pages =
wide=20
but have the height be as long as necessary. To achieve this set the=20
<CODE>$height</CODE> to zero or leave it blank: </P>
<P><PRE>    $worksheet1-&gt;fit_to_pages(1, 0); # 1 page wide and as =
long as necessary
    $worksheet2-&gt;fit_to_pages(1);    # The same
</PRE>
<P></P>
<P>Note that although it is valid to use both =
<CODE>fit_to_pages()</CODE> and=20
<CODE>set_print_scale()</CODE> on the same worksheet only one of these =
options=20
can be active at a time. The last method call made will set the active =
option.=20
</P>
<P>Note that <CODE>fit_to_pages()</CODE> will override any manual page =
breaks=20
that are defined in the worksheet. </P>
<P>
<HR>

<H2><A name=3Dset_print_scale_scale_>set_print_scale($scale)</A></H2>
<P>Set the scale factor of the printed page. Scale factors in the range =
<CODE>10=20
&lt;=3D $scale &lt;=3D 400</CODE> are valid: </P>
<P><PRE>    $worksheet1-&gt;set_print_scale(50);
    $worksheet2-&gt;set_print_scale(75);
    $worksheet3-&gt;set_print_scale(300);
    $worksheet4-&gt;set_print_scale(400);
</PRE>
<P></P>
<P>The default scale factor is 100. Note, <CODE>set_print_scale()</CODE> =
does=20
not affect the scale of the visible page in Excel. For that you should =
use=20
<CODE>set_zoom()</CODE>. </P>
<P>Note also that although it is valid to use both =
<CODE>fit_to_pages()</CODE>=20
and <CODE>set_print_scale()</CODE> on the same worksheet only one of =
these=20
options can be active at a time. The last method call made will set the =
active=20
option. </P>
<P>
<HR>

<H2><A =
name=3Dset_h_pagebreaks_breaks_>set_h_pagebreaks(@breaks)</A></H2>
<P>Add horizontal page breaks to a worksheet. A page break causes all =
the data=20
that follows it to be printed on the next page. Horizontal page breaks =
act=20
between rows. To create a page break between rows 20 and 21 you must =
specify the=20
break at row 21. However in zero index notation this is actually row 20. =
So you=20
can pretend for a small while that you are using 1 index notation: </P>
<P><PRE>    $worksheet1-&gt;set_h_pagebreaks(20); # Break between row 20 =
and 21
</PRE>
<P></P>
<P>The <CODE>set_h_pagebreaks()</CODE> method will accept a list of page =
breaks=20
and you can call it more than once: </P>
<P><PRE>    $worksheet2-&gt;set_h_pagebreaks( 20,  40,  60,  80, 100); # =
Add breaks
    $worksheet2-&gt;set_h_pagebreaks(120, 140, 160, 180, 200); # Add =
some more
</PRE>
<P></P>
<P>Note: If you specify the "fit to page" option via the=20
<CODE>fit_to_pages()</CODE> method it will override all manual page =
breaks. </P>
<P>There is a silent limitation of about 1000 horizontal page breaks per =

worksheet in line with an Excel internal limitation. </P>
<P>
<HR>

<H2><A =
name=3Dset_v_pagebreaks_breaks_>set_v_pagebreaks(@breaks)</A></H2>
<P>Add vertical page breaks to a worksheet. A page break causes all the =
data=20
that follows it to be printed on the next page. Vertical page breaks act =
between=20
columns. To create a page break between columns 20 and 21 you must =
specify the=20
break at column 21. However in zero index notation this is actually =
column 20.=20
So you can pretend for a small while that you are using 1 index =
notation: </P>
<P><PRE>    $worksheet1-&gt;set_v_pagebreaks(20); # Break between column =
20 and 21
</PRE>
<P></P>
<P>The <CODE>set_v_pagebreaks()</CODE> method will accept a list of page =
breaks=20
and you can call it more than once: </P>
<P><PRE>    $worksheet2-&gt;set_v_pagebreaks( 20,  40,  60,  80, 100); # =
Add breaks
    $worksheet2-&gt;set_v_pagebreaks(120, 140, 160, 180, 200); # Add =
some more
</PRE>
<P></P>
<P>Note: If you specify the "fit to page" option via the=20
<CODE>fit_to_pages()</CODE> method it will override all manual page =
breaks. </P>
<P>
<HR>

<H1><A name=3DCELL_FORMATTING>CELL FORMATTING</A></H1>
<P>This section describes the methods and properties that are available =
for=20
formatting cells in Excel. The properties of a cell that can be =
formatted=20
include: fonts, colours, patterns, borders, alignment and number =
formatting.=20
</P>
<P>
<HR>

<H2><A name=3DCreating_and_using_a_Format_obje>Creating and using a =
Format=20
object</A></H2>
<P>Cell formatting is defined through a Format object. Format objects =
are=20
created by calling the workbook <CODE>addformat()</CODE> method as =
follows: </P>
<P><PRE>    my $format1 =3D $workbook-&gt;addformat();       # Set =
properties later
    my $format2 =3D $workbook-&gt;addformat(%props); # Set properties at =
creation
</PRE>
<P></P>
<P>The format object holds all the formatting properties that can be =
applied to=20
a cell, a row or a column. The process of setting these properties is =
discussed=20
in the next section. </P>
<P>Once a Format object has been constructed and it properties have been =
set it=20
can be passed as an argument to the worksheet <CODE>write</CODE> methods =
as=20
follows: </P>
<P><PRE>    $worksheet-&gt;write(0, 0, "One", $format);
    $worksheet-&gt;write_string(1, 0, "Two", $format);
    $worksheet-&gt;write_number(2, 0, 3, $format);
    $worksheet-&gt;write_blank(3, 0, $format);
</PRE>
<P></P>
<P>Formats can also be passed to the worksheet <CODE>set_row()</CODE> =
and=20
<CODE>set_column()</CODE> methods to define the default property for a =
row or=20
column. </P>
<P><PRE>    $worksheet-&gt;set_row(0, 15, $format);
    $worksheet-&gt;set_column(0, 0, 15, $format);
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3DFormat_methods_and_Format_proper>Format methods and Format =

properties</A></H2>
<P>The following table shows the Excel format categories, the formatting =

properties that can be applied and the equivalent object method: </P>
<P><PRE>    Category   Description       Property        Method Name
    --------   -----------       --------        -----------
    Font       Font type         font            set_font()
               Font size         size            set_size()
               Font color        color           set_color()
               Bold              bold            set_bold()
               Italic            italic          set_italic()
               Underline         underline       set_underline()
               Strikeout         font_strikeout  set_font_strikeout()
               Super/Subscript   font_script     set_font_script()
               Outline           font_outline    set_font_outline()
               Shadow            font_shadow     set_font_shadow()
</PRE>
<P></P>
<P><PRE>    Number     Numeric format    num_format      =
set_num_format()
</PRE>
<P></P>
<P><PRE>    Protection Lock cells        locked          set_locked()
               Hide formulas     hidden          set_hidden()
</PRE>
<P></P>
<P><PRE>    Alignment  Horizontal align  align           set_align()
               Vertical align    valign          set_align()
               Rotation          rotation        set_rotation()
               Text wrap         text_wrap       set_text_wrap()
               Justify last      text_justlast   set_text_justlast()
               Merge             merge           set_merge()
</PRE>
<P></P>
<P><PRE>    Pattern    Cell pattern      pattern         set_pattern()
               Background color  bg_color        set_bg_color()
               Foreground color  fg_color        set_fg_color()
</PRE>
<P></P>
<P><PRE>    Border     Cell border       border          set_border()
               Bottom border     bottom          set_bottom()
               Top border        top             set_top()
               Left border       left            set_left()
               Right border      right           set_right()
               Border color      border_color    set_border_color()
               Bottom color      bottom_color    set_bottom_color()
               Top color         top_color       set_top_color()
               Left color        left_color      set_left_color()
               Right color       right_color     set_right_color()
</PRE>
<P></P>
<P>There are two ways of setting Format properties: by using the object =
method=20
interface or by setting the property directly. For example, a typical =
use of the=20
method interface would be as follows: </P>
<P><PRE>    my $format =3D $workbook-&gt;addformat();
    $format-&gt;set_bold();
    $format-&gt;set_color('red');
</PRE>
<P></P>
<P>By comparison the properties can be set directly by passing a hash of =

properties to the Format constructor: </P>
<P><PRE>    my $format =3D $workbook-&gt;addformat(bold =3D&gt; 1, color =
=3D&gt; 'red');
</PRE>
<P></P>
<P>or after the Format has been constructed by means of the=20
<CODE>set_properties()</CODE> method as follows: </P>
<P><PRE>    my $format =3D $workbook-&gt;addformat();
    $format-&gt;set_properties(bold =3D&gt; 1, color =3D&gt; 'red');
</PRE>
<P></P>
<P>You can also store the properties in one or more named hashes and =
pass them=20
to the required method: </P>
<P><PRE>    my %font    =3D (
                    font  =3D&gt; 'Arial',
                    size  =3D&gt; 12,
                    color =3D&gt; 'blue',
                    bold  =3D&gt; 1,
                  );
</PRE>
<P></P>
<P><PRE>    my %shading =3D (
                    fg_color =3D&gt; 'green',
                    pattern  =3D&gt; 1,
                  );
</PRE>
<P></P>
<P><PRE>    my $format1 =3D $workbook-&gt;addformat(%font);            # =
Font only
    my $format2 =3D $workbook-&gt;addformat(%font, %shading);  # Font =
and shading
</PRE>
<P></P>
<P>The provision of two ways of setting properties might lead you to =
wonder=20
which is the best way. The answer depends on the amount of formatting =
that will=20
be required in your program. Initially, Spreadsheet::WriteExcel only =
allowed=20
individual Format properties to be set via the appropriate method. While =
this=20
was sufficient for most circumstances it proved very cumbersome in =
programs that=20
required a large amount of formatting. In addition the mechanism for =
reusing=20
properties between Format objects was complicated. </P>
<P>As a result the Perl/Tk style of adding properties was added to, =
hopefully,=20
facilitate developers who need to define a lot of formatting. In fact =
the Tk=20
style of defining properties is also supported: </P>
<P><PRE>    my %font    =3D (
                    -font      =3D&gt; 'Arial',
                    -size      =3D&gt; 12,
                    -color     =3D&gt; 'blue',
                    -bold      =3D&gt; 1,
                  );
</PRE>
<P></P>
<P>An additional advantage of working with hashes of properties is that =
it=20
allows you to share formatting between workbook objects </P>
<P>You can also create a format "on the fly" and pass it directly to a =
write=20
method as follows: </P>
<P><PRE>    $worksheet-&gt;write('A1', "Title", =
$workbook-&gt;addformat(bold =3D&gt; 1));
</PRE>
<P></P>
<P>This corresponds to an "anonymous" format in the Perl sense of =
anonymous data=20
or subs. </P>
<P>If you need to create an Excel file with a large amount of formatting =
you can=20
also use the <CODE>lecxe.pl</CODE> program in the <CODE>examples</CODE>=20
directory of the distribution. <CODE>lecxe</CODE> is a Win32::OLE =
program=20
written by Tomas Andersson which converts Excel files to =
Spreadsheet::WriteExcel=20
files. Therefore, you can use Excel to define your formatting and have=20
<CODE>lecxe</CODE> do the hard work for you. </P>
<P>
<HR>

<H2><A name=3DWorking_with_formats>Working with formats</A></H2>
<P>The default format is Arial 10 with all other properties off. </P>
<P>Each unique format in Spreadsheet::WriteExcel must have a =
corresponding=20
Format object. It isn't possible to use a Format with a =
<CODE>write()</CODE>=20
method and then redefine the Format for use at a later stage. This is =
because a=20
Format is applied to a cell not in its current state but in its final =
state.=20
Consider the following example: </P>
<P><PRE>    my $format =3D $workbook-&gt;addformat();
    $format-&gt;set_bold();
    $format-&gt;set_color('red');
    $worksheet-&gt;write('A1', "Cell A1", $format);
    $format-&gt;set_color('green');
    $worksheet-&gt;write('B1', "Cell B1", $format);
</PRE>
<P></P>
<P>Cell A1 is assigned the Format <CODE>$format</CODE> which is =
initially set to=20
the colour red. However, the colour is subsequently set to green. When =
Excel=20
displays Cell A1 it will display the final state of the Format which in =
this=20
case will be the colour green. </P>
<P>In general a method call without an argument will turn a property on, =
for=20
example: </P>
<P><PRE>    my $format1 =3D $workbook-&gt;addformat();
    $format1-&gt;set_bold();  # Turns bold on
    $format1-&gt;set_bold(1); # Also turns bold on
    $format1-&gt;set_bold(0); # Turns bold off
</PRE>
<P></P>
<P>
<HR>

<H1><A name=3DFORMAT_METHODS>FORMAT METHODS</A></H1>
<P>The Format object methods are described in more detail in the =
following=20
sections. In addition, there is a Perl program called =
<CODE>formats.pl</CODE> in=20
the <CODE>examples</CODE> directory of the WriteExcel distribution. This =
program=20
creates an Excel workbook called <CODE>formats.xls</CODE> which contains =

examples of almost all the format types. </P>
<P>The following Format methods are available: </P>
<P><PRE>    set_font()
    set_size()
    set_color()
    set_bold()
    set_italic()
    set_underline()
    set_font_strikeout()
    set_font_script()
    set_font_outline()
    set_font_shadow()
    set_num_format()
    set_locked()
    set_hidden()
    set_align()
    set_align()
    set_rotation()
    set_text_wrap()
    set_text_justlast()
    set_merge()
    set_pattern()
    set_bg_color()
    set_fg_color()
    set_border()
    set_bottom()
    set_top()
    set_left()
    set_right()
    set_border_color()
    set_bottom_color()
    set_top_color()
    set_left_color()
    set_right_color()
</PRE>
<P></P>
<P>The above methods can also be applied directly as properties. For =
example=20
<CODE>$worksheet-&gt;set_bold()</CODE> is equivalent to=20
<CODE>set_properties(bold =3D&gt; 1)</CODE>. </P>
<P>
<HR>

<H2><A =
name=3Dset_properties_properties_>set_properties(%properties)</A></H2>
<P>The properties of an existing Format object can be set by means of=20
<CODE>set_properties()</CODE>: </P>
<P><PRE>    my $format =3D $workbook-&gt;addformat();
    $format-&gt;set_properties(bold =3D&gt; 1, color =3D&gt; 'red');
</PRE>
<P></P>
<P>You can also store the properties in one or more named hashes and =
pass them=20
to the <CODE>set_properties()</CODE> method: </P>
<P><PRE>    my %font    =3D (
                    font  =3D&gt; 'Arial',
                    size  =3D&gt; 12,
                    color =3D&gt; 'blue',
                    bold  =3D&gt; 1,
                  );
</PRE>
<P></P>
<P><PRE>    my $format =3D $workbook-&gt;set_properties(%font);
</PRE>
<P></P>
<P>This method can be used as an alternative to setting the properties =
with=20
<CODE>addformat()</CODE> or the specific format methods that are =
detailed in the=20
following sections. </P>
<P>
<HR>

<H2><A name=3Dset_font_fontname_>set_font($fontname)</A></H2>
<P><PRE>    Default state:      Font is Arial
    Default action:     None
    Valid args:         Any valid font name
</PRE>
<P></P>
<P>Specify the font used: </P>
<P><PRE>    $format-&gt;set_font('Times New Roman');
</PRE>
<P></P>
<P>Excel can only display fonts that are installed on the system that it =
is=20
running on. Therefore it is best to use the fonts that come as standard =
such as=20
'Arial', 'Times New Roman' and 'Courier New'. See also the Fonts =
worksheet=20
created by formats.pl </P>
<P>
<HR>

<H2><A name=3Dset_size_>set_size()</A></H2>
<P><PRE>    Default state:      Font size is 10
    Default action:     Set font size to 1
    Valid args:         Integer values from 1 to as big as your screen.
</PRE>
<P></P>
<P>Set the font size. Excel adjusts the height of a row to accommodate =
the=20
largest font size in the row. You can also explicitly specify the height =
of a=20
row using the <CODE>set_row()</CODE> worksheet method. </P>
<P><PRE>    my $format =3D $workbook-&gt;addformat();
    $format-&gt;set_size(30);
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dset_color_>set_color()</A></H2>
<P><PRE>    Default state:      Excels default color, usually black
    Default action:     Set the default color
    Valid args:         Integers from 8..63 or the following strings:
                        'black'
                        'blue'
                        'brown'
                        'cyan'
                        'gray'
                        'green'
                        'lime'
                        'magenta'
                        'navy'
                        'orange'
                        'purple'
                        'red'
                        'silver'
                        'white'
                        'yellow'
</PRE>
<P></P>
<P>Set the font colour. The <CODE>set_color()</CODE> method is used as =
follows:=20
</P>
<P><PRE>    my $format =3D $workbook-&gt;addformat();
    $format-&gt;set_color('red');
    $worksheet-&gt;write(0, 0, "wheelbarrow", $format);
</PRE>
<P></P>
<P>Note: The <CODE>set_color()</CODE> method is used to set the colour =
of the=20
font in a cell. To set the colour of a cell use the =
<CODE>set_fg_color()</CODE>=20
and <CODE>set_pattern()</CODE> methods. </P>
<P>For additional examples see the 'Named colors' and 'Standard colors'=20
worksheets created by formats.pl in the examples directory. </P>
<P>See also <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#COLOURS_IN_EXCEL">COLOURS=20
IN EXCEL</A>. </P>
<P>
<HR>

<H2><A name=3Dset_bold_>set_bold()</A></H2>
<P><PRE>    Default state:      bold is off
    Default action:     Turn bold on
    Valid args:         0, 1 [1]
</PRE>
<P></P>
<P>Set the bold property of the font: </P>
<P><PRE>    $format-&gt;set_bold();  # Turn bold on
</PRE>
<P></P>
<P>[1] Actually, values in the range 100..1000 are also valid. 400 is =
normal,=20
700 is bold and 1000 is very bold indeed. It is probably best to set the =
value=20
to 1 and use normal bold. </P>
<P>
<HR>

<H2><A name=3Dset_italic_>set_italic()</A></H2>
<P><PRE>    Default state:      Italic is off
    Default action:     Turn italic on
    Valid args:         0, 1
</PRE>
<P></P>
<P>Set the italic property of the font: </P>
<P><PRE>    $format-&gt;set_italic();  # Turn italic on
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dset_underline_>set_underline()</A></H2>
<P><PRE>    Default state:      Underline is off
    Default action:     Turn on single underline
    Valid args:         0  =3D No underline
                        1  =3D Single underline
                        2  =3D Double underline
                        33 =3D Single accounting underline
                        34 =3D Double accounting underline
</PRE>
<P></P>
<P>Set the underline property of the font. </P>
<P><PRE>    $format-&gt;set_underline();   # Single underline
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dset_strikeout_>set_strikeout()</A></H2>
<P><PRE>    Default state:      Strikeout is off
    Default action:     Turn strikeout on
    Valid args:         0, 1
</PRE>
<P></P>
<P>Set the strikeout property of the font. </P>
<P>
<HR>

<H2><A name=3Dset_script_>set_script()</A></H2>
<P><PRE>    Default state:      Super/Subscript is off
    Default action:     Turn Superscript on
    Valid args:         0  =3D Normal
                        1  =3D Superscript
                        2  =3D Subscript
</PRE>
<P></P>
<P>Set the superscript/subscript property of the font. This format is =
currently=20
not very useful. </P>
<P>
<HR>

<H2><A name=3Dset_outline_>set_outline()</A></H2>
<P><PRE>    Default state:      Outline is off
    Default action:     Turn outline on
    Valid args:         0, 1
</PRE>
<P></P>
<P>Macintosh only. </P>
<P>
<HR>

<H2><A name=3Dset_shadow_>set_shadow()</A></H2>
<P><PRE>    Default state:      Shadow is off
    Default action:     Turn shadow on
    Valid args:         0, 1
</PRE>
<P></P>
<P>Macintosh only. </P>
<P>
<HR>

<H2><A name=3Dset_num_format_>set_num_format()</A></H2>
<P><PRE>    Default state:      General format
    Default action:     Format index 1
    Valid args:         See the following table
</PRE>
<P></P>
<P>This method is used to define the numerical format of a number in =
Excel. It=20
controls whether a number is displayed as an integer, a floating point =
number, a=20
date, a currency value or some other user defined format. </P>
<P>The numerical format of a cell can be specified by using a format =
string or=20
an index to one of Excel's built-in formats: </P>
<P><PRE>    my $format1 =3D $workbook-&gt;addformat();
    my $format2 =3D $workbook-&gt;addformat();
    $format1-&gt;set_num_format('d mmm yyyy'); # Format string
    $format2-&gt;set_num_format(0x0f);         # Format index
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write(0, 0, 36892.521, $format1);      # 1 =
Jan 2001
    $worksheet-&gt;write(0, 0, 36892.521, $format2);      # 1-Jan-01
</PRE>
<P></P>
<P>Using format strings you can define very sophisticated formatting of =
numbers.=20
</P>
<P><PRE>    $format01-&gt;set_num_format('0.000');
    $worksheet-&gt;write(0,  0, 3.1415926, $format01);    # 3.142
</PRE>
<P></P>
<P><PRE>    $format02-&gt;set_num_format('#,##0');
    $worksheet-&gt;write(1,  0, 1234.56,   $format02);    # 1,235
</PRE>
<P></P>
<P><PRE>    $format03-&gt;set_num_format('#,##0.00');
    $worksheet-&gt;write(2,  0, 1234.56,   $format03);    # 1,234.56
</PRE>
<P></P>
<P><PRE>    $format04-&gt;set_num_format('$0.00');
    $worksheet-&gt;write(3,  0, 49.99,     $format04);    # $49.99
</PRE>
<P></P>
<P><PRE>    $format05-&gt;set_num_format('=A30.00');
    $worksheet-&gt;write(4,  0, 49.99,     $format05);    # =A349.99
</PRE>
<P></P>
<P><PRE>    $format06-&gt;set_num_format('=A50.00');
    $worksheet-&gt;write(5,  0, 49.99,     $format06);    # =A549.99
</PRE>
<P></P>
<P><PRE>    $format07-&gt;set_num_format('mm/dd/yy');
    $worksheet-&gt;write(6,  0, 36892.521, $format07);    # 01/01/01
</PRE>
<P></P>
<P><PRE>    $format08-&gt;set_num_format('mmm d yyyy');
    $worksheet-&gt;write(7,  0, 36892.521, $format08);    # Jan 1 2001
</PRE>
<P></P>
<P><PRE>    $format09-&gt;set_num_format('d mmmm yyyy');
    $worksheet-&gt;write(8,  0, 36892.521, $format09);    # 1 January =
2001
</PRE>
<P></P>
<P><PRE>    $format10-&gt;set_num_format('dd/mm/yyyy hh:mm AM/PM');
    $worksheet-&gt;write(9,  0, 36892.521, $format10);    # 01/01/2001 =
12:30 AM
</PRE>
<P></P>
<P><PRE>    $format11-&gt;set_num_format('0 "dollar and" .00 "cents"');
    $worksheet-&gt;write(10, 0, 1.87,      $format11);    # 1 dollar and =
.87 cents
</PRE>
<P></P>
<P><PRE>    # Conditional formatting
    =
$format12-&gt;set_num_format('[Green]General;[Red]-General;General');
    $worksheet-&gt;write(11, 0, 123,       $format12);    # &gt; 0 Green
    $worksheet-&gt;write(12, 0, -45,       $format12);    # &lt; 0 Red
    $worksheet-&gt;write(13, 0, 0,         $format12);    # =3D 0 =
Default colour
</PRE>
<P></P>
<P><PRE>    # Zip code
    $format13-&gt;set_num_format('00000');
    $worksheet-&gt;write(14, 0, '01209',   $format13);
</PRE>
<P></P>
<P>The number system used for dates is described in <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#Dates_in_Excel">Dates=20
in Excel</A>. </P>
<P>The colour format should have one of the following values: </P>
<P><PRE>    [Black] [Blue] [Cyan] [Green] [Magenta] [Red] [White] =
[Yellow]
</PRE>
<P></P>
<P>Alternatively you can specify the colour based on a colour index as =
follows:=20
<CODE>[Color n]</CODE>, where n is a standard Excel colour index - 7. =
See the=20
'Standard colors' worksheet created by formats.pl. </P>
<P>For more information refer to the documentation on formatting in the=20
<CODE>doc</CODE> directory of the Spreadsheet::WriteExcel distro, the =
Excel=20
on-line help or to the tutorial at: <A=20
href=3D"http://support.microsoft.com/support/Excel/Content/Formats/defaul=
t.asp">http://support.microsoft.com/support/Excel/Content/Formats/default=
.asp</A>=20
and <A=20
href=3D"http://support.microsoft.com/support/Excel/Content/Formats/codes.=
asp">http://support.microsoft.com/support/Excel/Content/Formats/codes.asp=
</A>=20
</P>
<P>You should ensure that the format string is valid in Excel prior to =
using it=20
in WriteExcel. </P>
<P>Excel's built-in formats are shown in the following table: </P>
<P><PRE>    Index   Index   Format String
    0       0x00    General
    1       0x01    0
    2       0x02    0.00
    3       0x03    #,##0
    4       0x04    #,##0.00
    5       0x05    ($#,##0_);($#,##0)
    6       0x06    ($#,##0_);[Red]($#,##0)
    7       0x07    ($#,##0.00_);($#,##0.00)
    8       0x08    ($#,##0.00_);[Red]($#,##0.00)
    9       0x09    0%
    10      0x0a    0.00%
    11      0x0b    0.00E+00
    12      0x0c    # ?/?
    13      0x0d    # ??/??
    14      0x0e    m/d/yy
    15      0x0f    d-mmm-yy
    16      0x10    d-mmm
    17      0x11    mmm-yy
    18      0x12    h:mm AM/PM
    19      0x13    h:mm:ss AM/PM
    20      0x14    h:mm
    21      0x15    h:mm:ss
    22      0x16    m/d/yy h:mm
    ..      ....    ...........
    37      0x25    (#,##0_);(#,##0)
    38      0x26    (#,##0_);[Red](#,##0)
    39      0x27    (#,##0.00_);(#,##0.00)
    40      0x28    (#,##0.00_);[Red](#,##0.00)
    41      0x29    _(* #,##0_);_(* (#,##0);_(* "-"_);_(@_)
    42      0x2a    _($* #,##0_);_($* (#,##0);_($* "-"_);_(@_)
    43      0x2b    _(* #,##0.00_);_(* (#,##0.00);_(* "-"??_);_(@_)
    44      0x2c    _($* #,##0.00_);_($* (#,##0.00);_($* "-"??_);_(@_)
    45      0x2d    mm:ss
    46      0x2e    [h]:mm:ss
    47      0x2f    mm:ss.0
    48      0x30    ##0.0E+0
    49      0x31    @
</PRE>
<P></P>
<P>For examples of these formatting codes see the 'Numerical formats' =
worksheet=20
created by formats.pl. </P>
<P>Note 1. Numeric formats 23 to 36 are not documented by Microsoft and =
may=20
differ in international versions. </P>
<P>Note 2. In Excel 5 the dollar sign appears as a dollar sign. In Excel =
97-2000=20
it appears as the defined local currency symbol. </P>
<P>Note 3. The red negative numeric formats display slightly differently =
in=20
Excel 5 and Excel 97-2000. </P>
<P>
<HR>

<H2><A name=3Dset_locked_>set_locked()</A></H2>
<P><PRE>    Default state:      Cell locking is on
    Default action:     Turn locking on
    Valid args:         0, 1
</PRE>
<P></P>
<P>This property can be used to prevent modification of a cells =
contents.=20
Following Excel's convention, cell locking is turned on by default. =
However, it=20
only has an effect if the worksheet has been protected, see the =
worksheet=20
<CODE>protect()</CODE> method. </P>
<P><PRE>    my $locked  =3D $workbook-&gt;addformat();
    $locked-&gt;set_locked(1); # A non-op
</PRE>
<P></P>
<P><PRE>    my $unlocked =3D $workbook-&gt;addformat();
    $locked-&gt;set_locked(0);
</PRE>
<P></P>
<P><PRE>    # Enable worksheet protection
    $worksheet-&gt;protect();
</PRE>
<P></P>
<P><PRE>    # This cell cannot be edited.
    $worksheet-&gt;write('A1', '=3D1+2', $locked);
</PRE>
<P></P>
<P><PRE>    # This cell can be edited.
    $worksheet-&gt;write('A2', '=3D1+2', $unlocked);
</PRE>
<P></P>
<P>Note: This offers weak protection even with a password, see the note =
in=20
relation to the <CODE>protect()</CODE> method. </P>
<P>
<HR>

<H2><A name=3Dset_hidden_>set_hidden()</A></H2>
<P><PRE>    Default state:      Formula hiding is off
    Default action:     Turn hiding on
    Valid args:         0, 1
</PRE>
<P></P>
<P>This property is used to hide a formula while still displaying its =
result.=20
This is generally used to hide complex calculations from end users who =
are only=20
interested in the result. It only has an effect if the worksheet has =
been=20
protected, see the worksheet <CODE>protect()</CODE> method. </P>
<P><PRE>    my $hidden =3D $workbook-&gt;addformat();
    $hidden-&gt;set_hidden();
</PRE>
<P></P>
<P><PRE>    # Enable worksheet protection
    $worksheet-&gt;protect();
</PRE>
<P></P>
<P><PRE>    # The formula in this cell isn't visible
    $worksheet-&gt;write('A1', '=3D1+2', $hidden);
</PRE>
<P></P>
<P>Note: This offers weak protection even with a password, see the note =
in=20
relation to the <CODE>protect()</CODE> method. </P>
<P>
<HR>

<H2><A name=3Dset_align_>set_align()</A></H2>
<P><PRE>    Default state:      Alignment is off
    Default action:     Left alignment
    Valid args:         'left'              Horizontal
                        'center'
                        'right'
                        'fill'
                        'justify'
                        'merge'
</PRE>
<P></P>
<P><PRE>                        'top'               Vertical
                        'vcenter'
                        'bottom'
                        'vjustify'
</PRE>
<P></P>
<P>This method is used to set the horizontal and vertical text alignment =
within=20
a cell. Vertical and horizontal alignments can be combined. The method =
is used=20
as follows: </P>
<P><PRE>    my $format =3D $workbook-&gt;addformat();
    $format-&gt;set_align('center');
    $format-&gt;set_align('vcenter');
    $worksheet-&gt;set_row(0, 30);
    $worksheet-&gt;write(0, 0, "X", $format);
</PRE>
<P></P>
<P>Text can be aligned across two or more adjacent cells using the=20
<CODE>merge</CODE> property. See also, the <CODE>set_merge()</CODE> =
method. </P>
<P>The <CODE>vjustify</CODE> (vertical justify) option can be used to =
provide=20
automatic text wrapping in a cell. The height of the cell will be =
adjusted to=20
accommodate the wrapped text. To specify where the text wraps use the=20
<CODE>set_text_wrap()</CODE> method. </P>
<P>For further examples see the 'Alignment' worksheet created by =
formats.pl.=20
</P>
<P>
<HR>

<H2><A name=3Dset_merge_>set_merge()</A></H2>
<P><PRE>    Default state:      Cell merging is off
    Default action:     Turn cell merging on
    Valid args:         1
</PRE>
<P></P>
<P>Text can be aligned across two or more adjacent cells using the=20
<CODE>set_merge()</CODE> method. This is an alias for the unintuitive=20
<CODE>set_align('merge')</CODE> method call. </P>
<P>Only one cell should contain the text, the other cells should be =
blank: </P>
<P><PRE>    my $format =3D $workbook-&gt;addformat();
    $format-&gt;set_merge();
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write(1, 1, 'Merged cells', $format);
    $worksheet-&gt;write_blank(1, 2, $format);
</PRE>
<P></P>
<P>See also the <CODE>merge1.pl</CODE>, <CODE>merge2.pl</CODE> and=20
<CODE>merge3.pl</CODE> programs in the <CODE>examples</CODE> directory =
and the=20
<CODE>merge_cells()</CODE> method. </P>
<P>
<HR>

<H2><A name=3Dset_text_wrap_>set_text_wrap()</A></H2>
<P><PRE>    Default state:      Text wrap is off
    Default action:     Turn text wrap on
    Valid args:         0, 1
</PRE>
<P></P>
<P>Here is an example using the text wrap property, the escape character =

<CODE>\n</CODE> is used to indicate the end of line: </P>
<P><PRE>    my $format =3D $workbook-&gt;addformat();
    $format-&gt;set_text_wrap();
    $worksheet-&gt;write(0, 0, "It's\na bum\nwrap", $format);
</PRE>
<P></P>
<P>Excel will adjust the height of the row to accommodate the wrapped =
text. A=20
similar effect can be obtained without newlines using the=20
<CODE>set_align('vjustify')</CODE> method. See the =
<CODE>textwrap.pl</CODE>=20
program in the <CODE>examples</CODE> directory. </P>
<P>
<HR>

<H2><A name=3Dset_rotation_>set_rotation()</A></H2>
<P><PRE>    Default state:      Text rotation is off
    Default action:     Rotation style 1
    Valid args:         0 No rotation
                        1 Letters run from top to bottom
                        2 90=B0 anticlockwise
                        3 90=B0 clockwise
</PRE>
<P></P>
<P>Set the rotation of the text in a cell. See the 'Alignment' worksheet =
created=20
by formats.pl. Note, fractional rotations aren't possible with the Excel =
5=20
format. </P>
<P>
<HR>

<H2><A name=3Dset_text_justlast_>set_text_justlast()</A></H2>
<P><PRE>    Default state:      Justify last is off
    Default action:     Turn justify last on
    Valid args:         0, 1
</PRE>
<P></P>
<P>Only applies to Far Eastern versions of Excel. </P>
<P>
<HR>

<H2><A name=3Dset_pattern_>set_pattern()</A></H2>
<P><PRE>    Default state:      Pattern is off
    Default action:     Solid fill is on
    Valid args:         0 .. 31
</PRE>
<P></P>
<P>Examples of the available patterns are shown in the 'Patterns' =
worksheet=20
created by formats.pl. However, it is unlikely that you will ever need =
anything=20
other than Pattern 1 which is a solid fill of the foreground color. </P>
<P>
<HR>

<H2><A name=3Dset_fg_color_>set_fg_color()</A></H2>
<P><PRE>    Also applies to:    set_bg_color
</PRE>
<P></P>
<P><PRE>    Default state:      Color is off
    Default action:     Undefined
    Valid args:         See set_color()
</PRE>
<P></P>
<P>Note, the foreground and background colours will only have an effect =
if the=20
cell pattern has been set. In the most common case you can specify the =
solid=20
fill pattern and the foreground colour as follows: </P>
<P><PRE>    my $format =3D $workbook-&gt;addformat();
    $format-&gt;set_pattern();         # Set pattern to 1, i.e. solid =
fill
    $format-&gt;set_fg_color('green'); # Note foreground and not =
background
    $worksheet-&gt;write(0, 0, "Ray", $format);
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3Dset_border_>set_border()</A></H2>
<P><PRE>    Also applies to:    set_bottom()
                        set_top()
                        set_left()
                        set_right()
</PRE>
<P></P>
<P><PRE>    Default state:      Border is off
    Default action:     Set border type 1
    Valid args:         0 No border
                        1 Thin single border
                        2 Medium single border
                        3 Dashed border
                        4 Dotted border
                        5 Thick single border
                        6 Double line border
                        7 Hair border
</PRE>
<P></P>
<P>A cell border is comprised of a border on the bottom, top, left and =
right.=20
These can be set to the same value using <CODE>set_border()</CODE> or=20
individually using the relevant method calls shown above. Examples of =
the=20
available border styles are shown in the 'Borders' worksheet created by=20
formats.pl. </P>
<P>
<HR>

<H2><A name=3Dset_border_color_>set_border_color()</A></H2>
<P><PRE>    Also applies to:    set_bottom_color()
                        set_top_color()
                        set_left_color()
                        set_right_color()
</PRE>
<P></P>
<P><PRE>    Default state:      Color is off
    Default action:     Undefined
    Valid args:         See set_color()
</PRE>
<P></P>
<P>Set the colour of the cell borders. </P>
<P>
<HR>

<H2><A name=3Dcopy_format_>copy($format)</A></H2>
<P>This method is used to copy all of the properties from one Format =
object to=20
another: </P>
<P><PRE>    my $lorry1 =3D $workbook-&gt;addformat();
    $lorry1-&gt;set_bold();
    $lorry1-&gt;set_italic();
    $lorry1-&gt;set_color('red');    # lorry1 is bold, italic and red
</PRE>
<P></P>
<P><PRE>    my $lorry2 =3D $workbook-&gt;addformat();
    $lorry2-&gt;copy($lorry1);
    $lorry2-&gt;set_color('yellow'); # lorry2 is bold, italic and yellow
</PRE>
<P></P>
<P>It is only useful if you are using the method interface to Format =
properties.=20
It generally isn't required if you are setting Format properties =
directly using=20
hashes. </P>
<P>Note: this is not a copy constructor, both objects must exist prior =
to=20
copying. </P>
<P>
<HR>

<H1><A name=3DCOLOURS_IN_EXCEL>COLOURS IN EXCEL</A></H1>
<P>Excel provides a colour palette of 56 colours. In =
Spreadsheet::WriteExcel=20
these colours are accessed via their palette index in the range 8..63. =
This=20
index is used to set the colour of fonts, cell patterns and cell =
borders. For=20
example: </P>
<P><PRE>    my $format =3D $workbook-&gt;addformat(
                                        color =3D&gt; 12, # index for =
blue
                                        font  =3D&gt; 'Arial',
                                        size  =3D&gt; 12,
                                        bold  =3D&gt; 1,
                                     );
</PRE>
<P></P>
<P>The most commonly used colours can also be accessed by name. The name =
acts as=20
a simple alias for the colour index: </P>
<P><PRE>    black     =3D&gt;    8
    blue      =3D&gt;   12
    brown     =3D&gt;   16
    cyan      =3D&gt;   15
    gray      =3D&gt;   23
    green     =3D&gt;   17
    lime      =3D&gt;   11
    magenta   =3D&gt;   14
    navy      =3D&gt;   18
    orange    =3D&gt;   53
    purple    =3D&gt;   20
    red       =3D&gt;   10
    silver    =3D&gt;   22
    white     =3D&gt;    9
    yellow    =3D&gt;   13
</PRE>
<P></P>
<P>For example: </P>
<P><PRE>    my $font =3D $workbook-&gt;addformat(color =3D&gt; 'red');
</PRE>
<P></P>
<P>Users of VBA in Excel should note that the equivalent colour indices =
are in=20
the range 1..56 instead of 8..63. </P>
<P>If the default palette does not provide a required colour you can =
override=20
one of the built-in values. This is achieved by using the=20
<CODE>set_custom_color()</CODE> workbook method to adjust the RGB (red =
green=20
blue) components of the colour: </P>
<P><PRE>    my $ferrari =3D $workbook-&gt;set_custom_color(40, 216, 12, =
12);
</PRE>
<P></P>
<P><PRE>    my $format  =3D $workbook-&gt;addformat(
                                        fg_color =3D&gt; $ferrari,
                                        pattern  =3D&gt; 1,
                                        border   =3D&gt; 1
                                      );
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write_blank('A1', $format);
</PRE>
<P></P>
<P>Spreadsheet::WriteExcel uses the Excel 97/2000 default colour =
palette.=20
However, for backward compatibility the Excel 5 palette can be specified =
instead=20
using the <CODE>set_palette_xl5()</CODE> workbook method. </P>
<P>The default Excel colour palette is shown in =
<CODE>palette.html</CODE> in the=20
<CODE>doc</CODE> directory of the distro. You can generate an Excel =
version of=20
the palette using <CODE>colors.pl</CODE> in the <CODE>examples</CODE> =
directory.=20
</P>
<P>A comparison of the colour components in the Excel 5 and Excel 97+ =
colour=20
palettes is shown in <CODE>rgb5-97.txt</CODE> in the <CODE>doc</CODE> =
directory.=20
</P>
<P>You may also find the following links helpful: </P>
<P>A detailed look at Excel's colour palette: <A=20
href=3D"http://www.geocities.com/davemcritchie/excel/colors.htm">http://w=
ww.geocities.com/davemcritchie/excel/colors.htm</A>=20
</P>
<P>A decimal RGB chart: <A=20
href=3D"http://www.hypersolutions.org/pages/rgbdec.html">http://www.hyper=
solutions.org/pages/rgbdec.html</A>=20
</P>
<P>A hex RGB chart: : <A=20
href=3D"http://www.hypersolutions.org/pages/rgbhex.html">http://www.hyper=
solutions.org/pages/rgbhex.html</A>=20
</P>
<P>
<HR>

<H1><A name=3DDATES_IN_EXCEL>DATES IN EXCEL</A></H1>
<P>Dates and times in Excel are represented by real numbers, for example =
"Jan 1=20
2001 12:30 AM" is represented by the number 36892.521. </P>
<P>The integer part of the number stores the number of days since the =
epoch and=20
the fractional part stores the percentage of the day. </P>
<P>The epoch can be either 1900 or 1904. Excel for Windows uses 1900 and =
Excel=20
for Macintosh uses 1904. The epochs are: </P>
<P><PRE>    1900: 0 January 1900 i.e. 31 December 1899
    1904: 1 January 1904
</PRE>
<P></P>
<P>By default Spreadsheet::WriteExcel uses the Windows/1900 format =
although it=20
generally isn't an issue since Excel on Windows and the Macintosh will =
convert=20
automatically between one system and the other. To use the 1904 epoch =
you must=20
use the <CODE>set_1904()</CODE> workbook method. </P>
<P>There are two things to note about the 1900 date format. The first is =
that=20
the epoch starts on 0 January 1900. The second is that the year 1900 is=20
erroneously but deliberately treated as a leap year. Therefore you must =
add an=20
extra day to dates after 28 February 1900. The reason for this anomaly =
is=20
explained at <A=20
href=3D"http://support.microsoft.com/support/kb/articles/Q181/3/70.asp">h=
ttp://support.microsoft.com/support/kb/articles/Q181/3/70.asp</A>=20
</P>
<P>A date or time in Excel is like any other number. To display the =
number as a=20
date you must apply a number format to it. Refer to the=20
<CODE>set_num_format()</CODE> method above: </P>
<P><PRE>    $format-&gt;set_num_format('mmm d yyyy hh:mm AM/PM');
    $worksheet-&gt;write('A1', 36892.521 , $format); # Jan 1 2001 12:30 =
AM
</PRE>
<P></P>
<P>The <CODE>Spreadsheet::WriteExcel::Utility</CODE> module that is =
included in=20
the distro contains helper functions for dealing with dates and times in =
Excel,=20
for example: </P>
<P><PRE>    $date =3D xl_date_list(2002, 1, 1);         # 37257
    $date =3D xl_parse_date("11 July 1997");    # 35622
    $time =3D xl_parse_time('3:21:36 PM');      # 0.64
    $date =3D xl_decode_date_EU("13 May 2002"); # 37389
</PRE>
<P></P>
<P>These functions deal automatically with the s1900 leap year issue =
described=20
above. </P>
<P>The date and time functions are based on functions provided by the=20
<CODE>Date::Calc</CODE> and <CODE>Date::Manip</CODE> modules. These =
modules are=20
very useful if you plan to manipulate dates in different formats. </P>
<P>There is also the <CODE>excel_date1.pl</CODE> program in the=20
<CODE>examples</CODE> directory of the WriteExcel distribution which was =
written=20
by Andrew Benham. It contains a detailed description of the problems =
involved in=20
calculating dates in Excel. It does not require any external modules. =
</P>
<P>It is also possible to get Excel to calculate dates for you by =
defining a=20
function: </P>
<P><PRE>    $worksheet-&gt;write('A1', '=3DDATEVALUE("1-Jan-2001")');
</PRE>
<P></P>
<P>However, this carries a performance overhead in =
Spreadsheet::WriteExcel due=20
to the parsing of the formula and it shouldn't be used for programs that =
deal=20
with a large number of dates. </P>
<P>
<HR>

<H1><A name=3DFORMULAS_AND_FUNCTIONS_IN_EXCEL>FORMULAS AND FUNCTIONS IN=20
EXCEL</A></H1>
<P>The first thing to note is that there are still some outstanding =
issues with=20
the implementation of formulas and functions: </P>
<P><PRE>    * Writing a formula is much slower than writing the =
equivalent string.
    * Unary minus isn't supported.
    * You cannot use arrays constants, i.e. {1;2;3}, in functions.
    * You cannot use embedded double quotes in strings.
    * Whitespace is not preserved around operators.
</PRE>
<P></P>
<P>However, these constraints will be removed in future versions. They =
are here=20
because of a trade-off between features and time. </P>
<P>The following is a brief introduction to formulas and functions in =
Excel and=20
Spreadsheet::WriteExcel. </P>
<P>A formula is a string that begins with an equals sign: </P>
<P><PRE>    '=3DA1+B1'
    '=3DAVERAGE(1, 2, 3)'
</PRE>
<P></P>
<P>The formula can contain numbers, strings, boolean values, cell =
references,=20
cell ranges and functions. Formulas should be written as they appear in =
Excel,=20
that is cells and functions must be in uppercase. </P>
<P>Cells in Excel are referenced using the A1 notation system where the =
column=20
is designated by a letter and the row by a number. Columns range from A =
to IV=20
i.e. 0 to 255, rows range from 1 to 16384. The=20
<CODE>Spreadsheet::WriteExcel::Utility</CODE> module that is included in =
the=20
distro contains helper functions for dealing with A1 notation, for =
example: </P>
<P><PRE>    use Spreadsheet::WriteExcel::Utility;
</PRE>
<P></P>
<P><PRE>    ($row, $col) =3D xl_cell_to_rowcol('C2');  # (1, 2)
    $str         =3D xl_rowcol_to_cell(1, 2);  # C2
</PRE>
<P></P>
<P>The Excel <CODE>$</CODE> notation in cell references is also =
supported. This=20
allows you to specify whether a row or column is relative or absolute. =
This only=20
has an effect if the cell is copied. The following examples show =
relative and=20
absolute values. </P>
<P><PRE>    '=3DA1'   # Column and row are relative
    '=3D$A1'  # Column is absolute and row is relative
    '=3DA$1'  # Column is relative and row is absolute
    '=3D$A$1' # Column and row are absolute
</PRE>
<P></P>
<P>Formulas can also refer to cells in other worksheets of the current =
workbook.=20
For example: </P>
<P><PRE>    '=3DSheet2!A1'
    '=3DSheet2!A1:A5'
    '=3DSheet2:Sheet3!A1'
    '=3DSheet2:Sheet3!A1:A5'
    q{=3D'Test Data'!A1}
    q{=3D'Test Data1:Test Data2'!A1}
</PRE>
<P></P>
<P>The sheet reference and the cell reference are separated by =
<CODE>!</CODE>=20
the exclamation mark symbol. If worksheet names contain spaces then =
Excel=20
requires that the name is enclosed in single quotes as shown in the last =
two=20
examples above. In this case you will have to use the quote operator=20
<CODE>q{}</CODE> to protect the quotes. See <CODE>perlop</CODE> in the =
main Perl=20
documentation. Only valid sheet names that have been added using the=20
<CODE>addworksheet()</CODE> method can be used in formulas. You cannot =
reference=20
external workbooks. </P>
<P>The following table lists the operators that are available in Excel's =

formulas. The majority of the operators are the same as Perl's, =
differences are=20
indicated: </P>
<P><PRE>    Arithmetic operators:
    =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
    Operator  Meaning                   Example
       +      Addition                  1+2
       -      Subtraction               2-1
       *      Multiplication            2*3
       /      Division                  1/4
       ^      Exponentiation            2^3      # Equivalent to **
       -      Unary minus               -(1+2)   # Not yet supported
       %      Percent (Not modulus)     13%      # Not supported, [1]
</PRE>
<P></P>
<P><PRE>    Comparison operators:
    =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
    Operator  Meaning                   Example
        =3D     Equal to                  A1 =3D  B1 # Equivalent to =
=3D=3D
        &lt;&gt;    Not equal to              A1 &lt;&gt; B1 # =
Equivalent to !=3D
        &gt;     Greater than              A1 &gt;  B1
        &lt;     Less than                 A1 &lt;  B1
        &gt;=3D    Greater than or equal to  A1 &gt;=3D B1
        &lt;=3D    Less than or equal to     A1 &lt;=3D B1
</PRE>
<P></P>
<P><PRE>    String operator:
    =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
    Operator  Meaning                   Example
        &amp;     Concatenation             "Hello " &amp; "World!" # =
[2]
</PRE>
<P></P>
<P><PRE>    Reference operators:
    =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
    Operator  Meaning                   Example
        :     Range operator            A1:A4               # [3]
        ,     Union operator            SUM(1, 2+2, B3)     # [4]
</PRE>
<P></P>
<P><PRE>    Notes:
    [1]: You can get a percentage with formatting and modulus with =
MOD().
    [2]: Equivalent to ("Hello " . "World!") in Perl.
    [3]: This range is equivalent to cells A1, A2, A3 and A4.
    [4]: The comma behaves like the list separator in Perl.
</PRE>
<P></P>
<P>The range and comma operators can have different symbols in =
non-English=20
versions of Excel. These will be supported in a later version of=20
Spreadsheet::WriteExcel. European users of Excel take note: </P>
<P><PRE>    $worksheet-&gt;write('A1', '=3DSUM(1; 2; 3)'); # Wrong!!
    $worksheet-&gt;write('A1', '=3DSUM(1, 2, 3)'); # Okay
</PRE>
<P></P>
<P>The following table lists all of the core functions supported by =
Excel 5 and=20
Spreadsheet::WriteExcel. Any additional functions that are available =
through the=20
"Analysis ToolPak" or other add-ins are not supported. These functions =
have all=20
been tested to verify that they work. </P>
<P><PRE>    ABS           DB            INDIRECT      NORMINV       SLN
    ACOS          DCOUNT        INFO          NORMSDIST     SLOPE
    ACOSH         DCOUNTA       INT           NORMSINV      SMALL
    ADDRESS       DDB           INTERCEPT     NOT           SQRT
    AND           DEGREES       IPMT          NOW           STANDARDIZE
    AREAS         DEVSQ         IRR           NPER          STDEV
    ASIN          DGET          ISBLANK       NPV           STDEVP
    ASINH         DMAX          ISERR         ODD           STEYX
    ATAN          DMIN          ISERROR       OFFSET        SUBSTITUTE
    ATAN2         DOLLAR        ISLOGICAL     OR            SUBTOTAL
    ATANH         DPRODUCT      ISNA          PEARSON       SUM
    AVEDEV        DSTDEV        ISNONTEXT     PERCENTILE    SUMIF
    AVERAGE       DSTDEVP       ISNUMBER      PERCENTRANK   SUMPRODUCT
    BETADIST      DSUM          ISREF         PERMUT        SUMSQ
    BETAINV       DVAR          ISTEXT        PI            SUMX2MY2
    BINOMDIST     DVARP         KURT          PMT           SUMX2PY2
    CALL          ERROR.TYPE    LARGE         POISSON       SUMXMY2
    CEILING       EVEN          LEFT          POWER         SYD
    CELL          EXACT         LEN           PPMT          T
    CHAR          EXP           LINEST        PROB          TAN
    CHIDIST       EXPONDIST     LN            PRODUCT       TANH
    CHIINV        FACT          LOG           PROPER        TDIST
    CHITEST       FALSE         LOG10         PV            TEXT
    CHOOSE        FDIST         LOGEST        QUARTILE      TIME
    CLEAN         FIND          LOGINV        RADIANS       TIMEVALUE
    CODE          FINV          LOGNORMDIST   RAND          TINV
    COLUMN        FISHER        LOOKUP        RANK          TODAY
    COLUMNS       FISHERINV     LOWER         RATE          TRANSPOSE
    COMBIN        FIXED         MATCH         REGISTER.ID   TREND
    CONCATENATE   FLOOR         MAX           REPLACE       TRIM
    CONFIDENCE    FORECAST      MDETERM       REPT          TRIMMEAN
    CORREL        FREQUENCY     MEDIAN        RIGHT         TRUE
    COS           FTEST         MID           ROMAN         TRUNC
    COSH          FV            MIN           ROUND         TTEST
    COUNT         GAMMADIST     MINUTE        ROUNDDOWN     TYPE
    COUNTA        GAMMAINV      MINVERSE      ROUNDUP       UPPER
    COUNTBLANK    GAMMALN       MIRR          ROW           VALUE
    COUNTIF       GEOMEAN       MMULT         ROWS          VAR
    COVAR         GROWTH        MOD           RSQ           VARP
    CRITBINOM     HARMEAN       MODE          SEARCH        VDB
    DATE          HLOOKUP       MONTH         SECOND        VLOOKUP
    DATEVALUE     HOUR          N             SIGN          WEEKDAY
    DAVERAGE      HYPGEOMDIST   NA            SIN           WEIBULL
    DAY           IF            NEGBINOMDIST  SINH          YEAR
    DAYS360       INDEX         NORMDIST      SKEW          ZTEST
</PRE>
<P></P>
<P>You can also modify the module to support function names in the =
following=20
languages: German, French, Spanish, Portuguese, Dutch, Finnish, Italian =
and=20
Swedish. See the <CODE>function_locale.pl</CODE> program in the=20
<CODE>examples</CODE> directory of the distro. </P>
<P>For a general introduction to Excel's formulas and an explanation of =
the=20
syntax of the function refer to the Excel help files or the following =
links: <A=20
href=3D"http://msdn.microsoft.com/library/default.asp?URL=3D/library/offi=
cedev/office97/s88f2.htm">http://msdn.microsoft.com/library/default.asp?U=
RL=3D/library/officedev/office97/s88f2.htm</A>=20
and <A=20
href=3D"http://msdn.microsoft.com/library/default.asp?URL=3D/library/offi=
cedev/office97/s992f.htm">http://msdn.microsoft.com/library/default.asp?U=
RL=3D/library/officedev/office97/s992f.htm</A>=20
</P>
<P>If your formula doesn't work in Spreadsheet::WriteExcel try the =
following:=20
</P>
<P><PRE>    1. Verify that the formula works in Excel (or Gnumeric or =
OpenOffice).
    2. Ensure that it isn't on the TODO list at the start of this =
section.
    3. Ensure that cell references and formula names are in uppercase.
    4. Ensure that you are using ':' as the range operator, A1:A4.
    5. Ensure that you are using ',' as the union operator, SUM(1,2,3).
    6. Ensure the function is in the above table.
</PRE>
<P></P>
<P>If you go through steps 1-6 and you still have a problem, mail me. =
</P>
<P>
<HR>

<H1><A name=3DEXAMPLES>EXAMPLES</A></H1>
<P>
<HR>

<H2><A name=3DExample_1>Example 1</A></H2>
<P>The following example shows some of the basic features of=20
Spreadsheet::WriteExcel. </P>
<P><PRE>    #!/usr/bin/perl -w
</PRE>
<P></P>
<P><PRE>    use strict;
    use Spreadsheet::WriteExcel;
</PRE>
<P></P>
<P><PRE>    # Create a new workbook called simple.xls and add a =
worksheet
    my $workbook  =3D Spreadsheet::WriteExcel-&gt;new("simple.xls");
    my $worksheet =3D $workbook-&gt;addworksheet();
</PRE>
<P></P>
<P><PRE>    # The general syntax is write($row, $column, $token). Note =
that row and
    # column are zero indexed
</PRE>
<P></P>
<P><PRE>    # Write some text
    $worksheet-&gt;write(0, 0,  "Hi Excel!");
</PRE>
<P></P>
<P><PRE>    # Write some numbers
    $worksheet-&gt;write(2, 0,  3);          # Writes 3
    $worksheet-&gt;write(3, 0,  3.00000);    # Writes 3
    $worksheet-&gt;write(4, 0,  3.00001);    # Writes 3.00001
    $worksheet-&gt;write(5, 0,  3.14159);    # TeX revision no.?
</PRE>
<P></P>
<P><PRE>    # Write some formulas
    $worksheet-&gt;write(7, 0,  '=3DA3 + A6');
    $worksheet-&gt;write(8, 0,  '=3DIF(A5&gt;3,"Yes", "No")');
</PRE>
<P></P>
<P><PRE>    # Write a hyperlink
    $worksheet-&gt;write(10, 0, '<A =
href=3D"http://www.perl.com/">http://www.perl.com/</A>');
</PRE>
<P></P><BR>
<CENTER><IMG alt=3D"The output from simple.pl"=20
src=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/W=
riteExcel/doc/simple.gif"></CENTER>
<P>
<HR>

<H2><A name=3DExample_2>Example 2</A></H2>
<P>The following is a general example which demonstrates some features =
of=20
working with multiple worksheets. </P>
<P><PRE>    #!/usr/bin/perl -w
</PRE>
<P></P>
<P><PRE>    use strict;
    use Spreadsheet::WriteExcel;
</PRE>
<P></P>
<P><PRE>    # Create a new Excel workbook
    my $workbook =3D Spreadsheet::WriteExcel-&gt;new("regions.xls");
</PRE>
<P></P>
<P><PRE>    # Add some worksheets
    my $north =3D $workbook-&gt;addworksheet("North");
    my $south =3D $workbook-&gt;addworksheet("South");
    my $east  =3D $workbook-&gt;addworksheet("East");
    my $west  =3D $workbook-&gt;addworksheet("West");
</PRE>
<P></P>
<P><PRE>    # Add a Format
    my $format =3D $workbook-&gt;addformat();
    $format-&gt;set_bold();
    $format-&gt;set_color('blue');
</PRE>
<P></P>
<P><PRE>    # Add a caption to each worksheet
    foreach my $worksheet ($workbook-&gt;sheets()) {
        $worksheet-&gt;write(0, 0, "Sales", $format);
    }
</PRE>
<P></P>
<P><PRE>    # Write some data
    $north-&gt;write(0, 1, 200000);
    $south-&gt;write(0, 1, 100000);
    $east-&gt;write (0, 1, 150000);
    $west-&gt;write (0, 1, 100000);
</PRE>
<P></P>
<P><PRE>    # Set the active worksheet
    $south-&gt;activate();
</PRE>
<P></P>
<P><PRE>    # Set the width of the first column
    $south-&gt;set_column(0, 0, 20);
</PRE>
<P></P>
<P><PRE>    # Set the active cell
    $south-&gt;set_selection(0, 1);
</PRE>
<P></P><BR>
<CENTER><IMG alt=3D"The output from regions.pl"=20
src=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/W=
riteExcel/doc/regions.gif"></CENTER>
<P>
<HR>

<H2><A name=3DExample_3>Example 3</A></H2>
<P>This example shows how to use a conditional numerical format with =
colours to=20
indicate if a share price has gone up or down. </P>
<P><PRE>    use strict;
    use Spreadsheet::WriteExcel;
</PRE>
<P></P>
<P><PRE>    # Create a new workbook and add a worksheet
    my $workbook  =3D Spreadsheet::WriteExcel-&gt;new("stocks.xls");
    my $worksheet =3D $workbook-&gt;addworksheet();
</PRE>
<P></P>
<P><PRE>    # Set the column width for columns 1, 2, 3 and 4
    $worksheet-&gt;set_column(0, 3, 15);
</PRE>
<P></P>
<P><PRE>    # Create a format for the column headings
    my $header =3D $workbook-&gt;addformat();
    $header-&gt;set_bold();
    $header-&gt;set_size(12);
    $header-&gt;set_color('blue');
</PRE>
<P></P>
<P><PRE>    # Create a format for the stock price
    my $f_price =3D $workbook-&gt;addformat();
    $f_price-&gt;set_align('left');
    $f_price-&gt;set_num_format('$0.00');
</PRE>
<P></P>
<P><PRE>    # Create a format for the stock volume
    my $f_volume =3D $workbook-&gt;addformat();
    $f_volume-&gt;set_align('left');
    $f_volume-&gt;set_num_format('#,##0');
</PRE>
<P></P>
<P><PRE>    # Create a format for the price change. This is an example =
of a conditional
    # format. The number is formatted as a percentage. If it is positive =
it is
    # formatted in green, if it is negative it is formatted in red and =
if it is
    # zero it is formatted as the default font colour (in this case =
black).
    # Note: the [Green] format produces an unappealing lime green. Try
    # [Color 10] instead for a dark green.
    #
    my $f_change =3D $workbook-&gt;addformat();
    $f_change-&gt;set_align('left');
    $f_change-&gt;set_num_format('[Green]0.0%;[Red]-0.0%;0.0%');
</PRE>
<P></P>
<P><PRE>    # Write out the data
    $worksheet-&gt;write(0, 0, 'Company',$header);
    $worksheet-&gt;write(0, 1, 'Price',  $header);
    $worksheet-&gt;write(0, 2, 'Volume', $header);
    $worksheet-&gt;write(0, 3, 'Change', $header);
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write(1, 0, 'Damage Inc.'       );
    $worksheet-&gt;write(1, 1, 30.25,    $f_price ); # $30.25
    $worksheet-&gt;write(1, 2, 1234567,  $f_volume); # 1,234,567
    $worksheet-&gt;write(1, 3, 0.085,    $f_change); # 8.5% in green
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write(2, 0, 'Dump Corp.'        );
    $worksheet-&gt;write(2, 1, 1.56,     $f_price ); # $1.56
    $worksheet-&gt;write(2, 2, 7564,     $f_volume); # 7,564
    $worksheet-&gt;write(2, 3, -0.015,   $f_change); # -1.5% in red
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write(3, 0, 'Rev Ltd.'          );
    $worksheet-&gt;write(3, 1, 0.13,     $f_price ); # $0.13
    $worksheet-&gt;write(3, 2, 321,      $f_volume); # 321
    $worksheet-&gt;write(3, 3, 0,        $f_change); # 0 in the font =
color (black)
</PRE>
<P></P><BR>
<CENTER><IMG alt=3D"The output from stocks.pl"=20
src=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/W=
riteExcel/doc/stocks.gif"></CENTER>
<P>
<HR>

<H2><A name=3DExample_4>Example 4</A></H2>
<P>The following is a simple example of using functions. </P>
<P><PRE>    #!/usr/bin/perl -w
</PRE>
<P></P>
<P><PRE>    use strict;
    use Spreadsheet::WriteExcel;
</PRE>
<P></P>
<P><PRE>    # Create a new workbook and add a worksheet
    my $workbook  =3D Spreadsheet::WriteExcel-&gt;new("stats.xls");
    my $worksheet =3D $workbook-&gt;addworksheet('Test data');
</PRE>
<P></P>
<P><PRE>    # Set the column width for columns 1
    $worksheet-&gt;set_column(0, 0, 20);
</PRE>
<P></P>
<P><PRE>    # Create a format for the headings
    my $format =3D $workbook-&gt;addformat();
    $format-&gt;set_bold();
</PRE>
<P></P>
<P><PRE>    # Write the sample data
    $worksheet-&gt;write(0, 0, 'Sample', $format);
    $worksheet-&gt;write(0, 1, 1);
    $worksheet-&gt;write(0, 2, 2);
    $worksheet-&gt;write(0, 3, 3);
    $worksheet-&gt;write(0, 4, 4);
    $worksheet-&gt;write(0, 5, 5);
    $worksheet-&gt;write(0, 6, 6);
    $worksheet-&gt;write(0, 7, 7);
    $worksheet-&gt;write(0, 8, 8);
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write(1, 0, 'Length', $format);
    $worksheet-&gt;write(1, 1, 25.4);
    $worksheet-&gt;write(1, 2, 25.4);
    $worksheet-&gt;write(1, 3, 24.8);
    $worksheet-&gt;write(1, 4, 25.0);
    $worksheet-&gt;write(1, 5, 25.3);
    $worksheet-&gt;write(1, 6, 24.9);
    $worksheet-&gt;write(1, 7, 25.2);
    $worksheet-&gt;write(1, 8, 24.8);
</PRE>
<P></P>
<P><PRE>    # Write some statistical functions
    $worksheet-&gt;write(4,  0, 'Count', $format);
    $worksheet-&gt;write(4,  1, '=3DCOUNT(B1:I1)');
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write(5,  0, 'Sum', $format);
    $worksheet-&gt;write(5,  1, '=3DSUM(B2:I2)');
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write(6,  0, 'Average', $format);
    $worksheet-&gt;write(6,  1, '=3DAVERAGE(B2:I2)');
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write(7,  0, 'Min', $format);
    $worksheet-&gt;write(7,  1, '=3DMIN(B2:I2)');
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write(8,  0, 'Max', $format);
    $worksheet-&gt;write(8,  1, '=3DMAX(B2:I2)');
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write(9,  0, 'Standard Deviation', $format);
    $worksheet-&gt;write(9,  1, '=3DSTDEV(B2:I2)');
</PRE>
<P></P>
<P><PRE>    $worksheet-&gt;write(10, 0, 'Kurtosis', $format);
    $worksheet-&gt;write(10, 1, '=3DKURT(B2:I2)');
</PRE>
<P></P><BR>
<CENTER><IMG alt=3D"The output from stats.pl"=20
src=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/W=
riteExcel/doc/stats.gif"></CENTER>
<P>
<HR>

<H2><A name=3DExample_5>Example 5</A></H2>
<P>The following example converts a tab separated file called=20
<CODE>tab.txt</CODE> into an Excel file called <CODE>tab.xls</CODE>. =
</P>
<P><PRE>    #!/usr/bin/perl -w
</PRE>
<P></P>
<P><PRE>    use strict;
    use Spreadsheet::WriteExcel;
</PRE>
<P></P>
<P><PRE>    open (TABFILE, "tab.txt") or die "tab.txt: $!";
</PRE>
<P></P>
<P><PRE>    my $workbook  =3D =
Spreadsheet::WriteExcel-&gt;new("tab.xls");
    my $worksheet =3D $workbook-&gt;addworksheet();
</PRE>
<P></P>
<P><PRE>    # Row and column are zero indexed
    my $row =3D 0;
</PRE>
<P></P>
<P><PRE>    while (&lt;TABFILE&gt;) {
        chomp;
        # Split on single tab
        my @Fld =3D split('\t', $_);
</PRE>
<P></P>
<P><PRE>        my $col =3D 0;
        foreach my $token (@Fld) {
            $worksheet-&gt;write($row, $col, $token);
            $col++;
        }
        $row++;
    }
</PRE>
<P></P>
<P>
<HR>

<H2><A name=3DAdditional_Examples>Additional Examples</A></H2>
<P>If you performed a normal installation the following examples files =
should=20
have been copied to your =
<CODE>~site/Spreadsheet/WriteExcel/examples</CODE>=20
directory: </P>
<P>The following is a description of the example files that are provided =
with=20
Spreadsheet::WriteExcel. They are intended to demonstrate the different =
features=20
and options of the module. </P>
<P><PRE>    Getting started
    =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
    simple.pl           An example of some of the basic features.
    regions.pl          Demonstrates multiple worksheets.
    stats.pl            Basic formulas and functions.
    formats.pl          Creates a demo of the available formatting.
    demo.pl             Creates a demo of some of the features.
</PRE>
<P></P>
<P><PRE>    Advanced
    =3D=3D=3D=3D=3D=3D=3D=3D
    sales.pl            An example of a simple sales spreadsheet.
    stocks.pl           Demonstrates conditional formatting.
    headers.pl          Examples of worksheet headers and footers.
    write_array.pl      Example of writing 1D or 2D arrays of data.
    chess.pl            An example of formatting using properties.
    colors.pl           Demo of the colour palette and named colours.
    images.pl           Adding bitmap images to worksheets.
    stats_ext.pl        Same as stats.pl with external references.
    long_string.pl      Workaround long string limitation with a =
formula.
    cgi.pl              A simple CGI program.
    mod_perl.pl         A simple mod_perl program.
    hyperlink1.pl       Shows how to create web hyperlinks.
    hyperlink2.pl       Examples of internal and external hyperlinks.
    merge1.pl           A simple example of cell merging.
    merge2.pl           A more advanced example of cell merging.
    merge3.pl           Merge hyperlinks and merge vertically.
    textwrap.pl         Demonstrates text wrapping options.
    panes.pl            An examples of how to create panes.
    protection.pl       Example of cell locking and formula hiding.
    copyformat.pl       Example of copying a cell format.
    win32ole.pl         A sample Win32::OLE example for comparison.
    easter_egg.pl       Expose the Excel97 flight simulator. A must see.
</PRE>
<P></P>
<P><PRE>    Utility
    =3D=3D=3D=3D=3D=3D=3D
    convertA1.pl        Helper functions for dealing with A1 notation.
    lecxe.pl            Convert Excel to WriteExcel using Win32::OLE.
    csv2xls.pl          Program to convert a CSV file to an Excel file.
    tab2xls.pl          Program to convert a tab separated file to xls.
    datecalc1.pl        Convert Unix/Perl time to Excel time.
    datecalc2.pl        Calculate an Excel date using Date::Calc.
    writemany.pl        Write an 2d array of values in one go.
</PRE>
<P></P>
<P><PRE>    Developer
    =3D=3D=3D=3D=3D=3D=3D=3D=3D
    function_locale.pl  Add non-English function names to Formula.pm.
    filehandle.pl       Examples of working with filehandles.
    writeA1.pl          Example of how to extend the module.
    comments.pl         Add cell comments to Excel 5 worksheets.
    bigfile.pl          Write past the 7MB limit with OLE::Storage_Lite.
</PRE>
<P></P>
<P>There are additional examples of a CGI application that uses=20
Spreadsheet::WriteExcel available at the website of the German Unix/web =
journal=20
iX: <A=20
href=3D"ftp://ftp.heise.de/pub/ix/ix_listings/2001_06/perl.tgz">ftp://ftp=
.heise.de/pub/ix/ix_listings/2001_06/perl.tgz</A>=20
</P>
<P>
<HR>

<H1><A name=3DLIMITATIONS>LIMITATIONS</A></H1>
<P>The following limits are imposed by Excel or the version of the BIFF =
file=20
that has been implemented: </P>
<P><PRE>    Description                          Limit   Source
    -----------------------------------  ------  -------
    Maximum number of chars in a string  255     Excel 5
    Maximum number of columns            256     Excel All versions
    Maximum number of rows in Excel 5    16384   Excel 5
    Maximum number of rows in Excel 97   65536   Excel 97
    Maximum chars in a sheet name        31      Excel All versions
    Maximum chars in a header/footer     254     Excel All versions
</PRE>
<P></P>
<P>Note: the maximum row reference in a formula is the Excel 5 row limit =
of=20
16384. </P>
<P>The 255 character limit will be removed when the module moves to the =
Excel=20
97+ format. In the meantime, you can work around this limit using a =
formula. See=20
the <CODE>long_string.pl</CODE> program in the <CODE>examples</CODE> =
directory=20
of the distro. </P>
<P>The minimum file size is 6K due to the OLE overhead. The maximum file =
size is=20
approximately 7MB (7087104 bytes) of BIFF data. This can be extended by =
using=20
Takanori Kawai's OLE::Storage_Lite module <A=20
href=3D"http://search.cpan.org/search?dist=3DOLE-Storage_Lite">http://sea=
rch.cpan.org/search?dist=3DOLE-Storage_Lite</A>=20
see the <CODE>bigfile.pl</CODE> example in the <CODE>examples</CODE> =
directory=20
of the distro. </P>
<P>
<HR>

<H1><A name=3DREQUIREMENTS>REQUIREMENTS</A></H1>
<P>This module requires Perl 5.005 (or later), Parse::RecDescent and =
File::Temp:=20
</P>
<P><PRE>    <A =
href=3D"http://search.cpan.org/search?dist=3DParse-RecDescent">http://sea=
rch.cpan.org/search?dist=3DParse-RecDescent</A>
    <A =
href=3D"http://search.cpan.org/search?dist=3DFile-Temp">http://search.cpa=
n.org/search?dist=3DFile-Temp</A>
</PRE>
<P></P>
<P>
<HR>

<H1><A name=3DPORTABILITY>PORTABILITY</A></H1>
<P>Spreadsheet::WriteExcel will work on the majority of Windows, UNIX =
and=20
Macintosh platforms. Specifically, the module will work on any system =
where perl=20
packs floats in the 64 bit IEEE format. The float must also be in =
little-endian=20
format but it will be reversed if necessary. Thus: </P>
<P><PRE>    print join(" ", map { sprintf "%#02x", $_ } unpack("C*", =
pack "d", 1.2345)), "\n";
</PRE>
<P></P>
<P>should give (or in reverse order): </P>
<P><PRE>    0x8d 0x97 0x6e 0x12 0x83 0xc0 0xf3 0x3f
</PRE>
<P></P>
<P>In general, if you don't know whether your system supports a 64 bit =
IEEE=20
float or not, it probably does. If your system doesn't, WriteExcel will=20
<CODE>croak()</CODE> with the message given in the <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#DIAGNOSTICS">DIAGNOSTICS</A>=20
section. You can check which platforms the module has been tested on at =
the CPAN=20
testers site: <A=20
href=3D"http://testers.cpan.org/search?request=3Ddist&amp;dist=3DSpreadsh=
eet-WriteExcel">http://testers.cpan.org/search?request=3Ddist&amp;dist=3D=
Spreadsheet-WriteExcel</A>=20
</P>
<P>
<HR>

<H1><A name=3DDIAGNOSTICS>DIAGNOSTICS</A></H1>
<DL>
  <DT><A name=3Ditem_Filename>Filename required by=20
  Spreadsheet::WriteExcel-&gt;new()</A>
  <DD>
  <P>A filename must be given in the constructor. </P>
  <DT><A name=3Ditem_Can>Can't open filename. It may be in use or =
protected.</A>
  <DD>
  <P>The file cannot be opened for writing. The directory that you are =
writing=20
  to may be protected or the file may be in use by another program. </P>
  <DT><A name=3Ditem_Unable>Unable to create tmp files via=20
  File::Temp::tempfile()...</A>
  <DD>
  <P>This is a <CODE>-w</CODE> warning. You will see it if you are using =

  Spreadsheet::WriteExcel in an environment where temporary files cannot =
be=20
  created, in which case all data will be stored in memory. The warning =
is for=20
  information only: it does not affect creation but it will affect the =
speed of=20
  execution for large files. See the <CODE>set_tempdir</CODE> workbook =
method.=20
  </P>
  <DT><A name=3Ditem_Maximum>Maximum file size, 7087104, exceeded.</A>
  <DD>
  <P>The current OLE implementation only supports a maximum BIFF file of =
this=20
  size. This limit can be extended, see the <A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#LIMITATIONS">LIMITATIONS</A>=20
  section. </P>
  <DT>Can't locate Parse/RecDescent.pm in @INC ...
  <DD>
  <P>Spreadsheet::WriteExcel requires the Parse::RecDescent module. =
Download it=20
  from CPAN: <A=20
  =
href=3D"http://search.cpan.org/search?dist=3DParse-RecDescent">http://sea=
rch.cpan.org/search?dist=3DParse-RecDescent</A>=20
  </P>
  <DT><A name=3Ditem_Couldn>Couldn't parse formula ...</A>
  <DD>
  <P>There are a large number of warnings which relate to badly formed =
formulas=20
  and functions. See the <A=20
  =
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#FORMULAS_AND_FUNCTIONS_IN_EXCEL">FORMULAS =

  AND FUNCTIONS IN EXCEL</A> section for suggestions on how to avoid =
these=20
  errors. You should also check the formula in Excel to ensure that it =
is valid.=20
  </P>
  <DT><A name=3Ditem_Required>Required floating point format not =
supported on this=20
  platform.</A>
  <DD>
  <P>Operating system doesn't support 64 bit IEEE float or it is =
byte-ordered in=20
  a way unknown to WriteExcel. </P></DD></DL>
<P>
<HR>

<H1><A name=3DTHE_EXCEL_BINARY_FORMAT>THE EXCEL BINARY FORMAT</A></H1>
<P>The following is some general information about the Excel binary =
format for=20
anyone who may be interested. </P>
<P>Excel data is stored in the "Binary Interchange File Format" (BIFF) =
file=20
format. Details of this format are given in the Excel SDK, the "Excel=20
Developer's Kit" from Microsoft Press. It is also included in the MSDN =
CD=20
library but is no longer available on the MSDN website. An older version =
of the=20
BIFF documentation is available at <A=20
href=3D"http://www.cubic.org/source/archive/fileform/misc/excel.txt">http=
://www.cubic.org/source/archive/fileform/misc/excel.txt</A>=20
</P>
<P>Charles Wybble has collected together almost all of the available =
information=20
about the Excel file format. See "The Chicago Project" at <A=20
href=3D"http://chicago.sourceforge.net/devel/">http://chicago.sourceforge=
.net/devel/</A>=20
</P>
<P>Daniel Rentz of OpenOffice has also written a detailed description of =
the=20
Excel workbook records, see <A=20
href=3D"http://sc.openoffice.org/excelfileformat.pdf">http://sc.openoffic=
e.org/excelfileformat.pdf</A>=20
</P>
<P>The BIFF portion of the Excel file is comprised of contiguous binary =
records=20
that have different functions and that hold different types of data. =
Each BIFF=20
record is comprised of the following three parts: </P>
<P><PRE>        Record name;   Hex identifier, length =3D 2 bytes
        Record length; Length of following data, length =3D 2 bytes
        Record data;   Data, length =3D variable
</PRE>
<P></P>
<P>The BIFF data is stored along with other data in an OLE Compound =
File. This=20
is a structured storage which acts like a file system within a file. A =
Compound=20
File is comprised of storages and streams which, to follow the file =
system=20
analogy, are like directories and files. </P>
<P>The documentation for the OLE::Storage module, <A=20
href=3D"http://user.cs.tu-berlin.de/~schwartz/pmh/guide.html">http://user=
.cs.tu-berlin.de/~schwartz/pmh/guide.html</A>=20
, contains one of the few descriptions of the OLE Compound File in the =
public=20
domain. The Digital Imaging Group have also detailed the OLE format in =
the=20
JPEG2000 specification: see Appendix A of <A=20
href=3D"http://www.i3a.org/pdf/wg1n1017.pdf">http://www.i3a.org/pdf/wg1n1=
017.pdf</A>=20
</P>
<P>For a open source implementation of the OLE library see the 'cole' =
library at=20
<A =
href=3D"http://atena.com/libole2.php">http://atena.com/libole2.php</A> =
</P>
<P>The source code for the Excel plugin of the Gnumeric spreadsheet also =

contains information relevant to the Excel BIFF format and the OLE =
container, <A=20
href=3D"http://www.ximian.com/apps/gnumeric.php3">http://www.ximian.com/a=
pps/gnumeric.php3</A>=20
and <A=20
href=3D"ftp://ftp.ximian.com/pub/ximian-source/">ftp://ftp.ximian.com/pub=
/ximian-source/</A>=20
</P>
<P>In addition the source code for OpenOffice is available at <A=20
href=3D"http://www.openoffice.org/">http://www.openoffice.org/</A> </P>
<P>An article describing Spreadsheet::WriteExcel and how it works =
appears in=20
Issue #19 of The Perl Journal, <A=20
href=3D"http://www.samag.com/documents/s=3D1272/sam05030004/">http://www.=
samag.com/documents/s=3D1272/sam05030004/</A>=20
It is reproduced, by kind permission, in the <CODE>doc</CODE> directory =
of the=20
distro. </P>
<P>Please note that the provision of this information does not =
constitute an=20
invitation to start hacking at the BIFF or OLE file formats. There are =
more=20
interesting ways to waste your time. ;-) </P>
<P>
<HR>

<H1><A name=3DWRITING_EXCEL_FILES>WRITING EXCEL FILES</A></H1>
<P>Depending on your requirements, background and general sensibilities =
you may=20
prefer one of the following methods of getting data into Excel: </P>
<P>* Win32::OLE module and office automation. This requires a Windows =
platform=20
and an installed copy of Excel. This is the most powerful and complete =
method=20
for interfacing with Excel. See <A=20
href=3D"http://www.activestate.com/ASPN/Reference/Products/ActivePerl-5.6=
/faq/Windows/ActivePerl-Winfaq12.html">http://www.activestate.com/ASPN/Re=
ference/Products/ActivePerl-5.6/faq/Windows/ActivePerl-Winfaq12.html</A> =

and <A=20
href=3D"http://www.activestate.com/ASPN/Reference/Products/ActivePerl-5.6=
/site/lib/Win32/OLE.html">http://www.activestate.com/ASPN/Reference/Produ=
cts/ActivePerl-5.6/site/lib/Win32/OLE.html</A>=20
If your main platform is UNIX but you have the resources to set up a =
separate=20
Win32/MSOffice server, you can convert office documents to text, =
postscript or=20
PDF using Win32::OLE. For a demonstration of how to do this using Perl =
see=20
Docserver: <A=20
href=3D"http://search.cpan.org/search?mode=3Dmodule&amp;query=3Ddocserver=
">http://search.cpan.org/search?mode=3Dmodule&amp;query=3Ddocserver</A>=20
</P>
<P>* CSV, comma separated variables or text. If the file extension is=20
<CODE>csv</CODE>, Excel will open and convert this format automatically. =

Generating a valid CSV file isn't as easy as it seems. Have a look at =
the=20
DBD::RAM, DBD::CSV, Text::xSV and Text::CSV_XS modules. </P>
<P>* DBI with DBD::ADO or DBD::ODBC. Excel files contain an internal =
index table=20
that allows them to act like a database file. Using one of the standard =
Perl=20
database modules you can connect to an Excel file as a database. </P>
<P>* DBD::Excel, you can also access Spreadsheet::WriteExcel using the =
standard=20
DBI interface via Takanori Kawai's DBD::Excel module <A=20
href=3D"http://search.cpan.org/search?dist=3DDBD-Excel.">http://search.cp=
an.org/search?dist=3DDBD-Excel.</A>=20
</P>
<P>* Spreadsheet::WriteExcel::Simple for an easier interface to a new =
Excel=20
file: <A=20
href=3D"http://search.cpan.org/search?dist=3DSpreadsheet-WriteExcel-Simpl=
e">http://search.cpan.org/search?dist=3DSpreadsheet-WriteExcel-Simple</A>=
=20
</P>
<P>* Spreadsheet::WriteExcel::FromDB to create an Excel file directly =
from a DB=20
table: <A=20
href=3D"http://search.cpan.org/search?dist=3DSpreadsheet-WriteExcel-FromD=
B">http://search.cpan.org/search?dist=3DSpreadsheet-WriteExcel-FromDB</A>=
=20
</P>
<P>* HTML tables. This is an easy way of adding formatting via a text =
based=20
format. </P>
<P>* XML, the Excel XML and HTML file specification are available from =
<A=20
href=3D"http://msdn.microsoft.com/library/officedev/ofxml2k/ofxml2k.htm">=
http://msdn.microsoft.com/library/officedev/ofxml2k/ofxml2k.htm</A>=20
</P>
<P>For other Perl-Excel modules try the following search: <A=20
href=3D"http://search.cpan.org/search?mode=3Dmodule&amp;query=3Dexcel">ht=
tp://search.cpan.org/search?mode=3Dmodule&amp;query=3Dexcel</A>=20
</P>
<P>
<HR>

<H1><A name=3DREADING_EXCEL_FILES>READING EXCEL FILES</A></H1>
<P>To read data from Excel files try: </P>
<P>* Spreadsheet::ParseExcel. This uses the OLE::Storage-Lite module to =
extract=20
data from an Excel file. <A=20
href=3D"http://search.cpan.org/search?dist=3DSpreadsheet-ParseExcel">http=
://search.cpan.org/search?dist=3DSpreadsheet-ParseExcel</A>=20
</P>
<P>* Spreadsheet::ParseExcel_XLHTML. This module uses =
Spreadsheet::ParseExcel's=20
interface but uses xlHtml (see below) to do the conversion: <A=20
href=3D"http://search.cpan.org/search?dist=3DSpreadsheet-ParseExcel_XLHTM=
L">http://search.cpan.org/search?dist=3DSpreadsheet-ParseExcel_XLHTML</A>=
=20
Spreadsheet::ParseExcel_XLHTML </P>
<P>* There are also open source C/C++ projects. Try the xlHtml "Excel to =
HTML=20
Converter" project at <A=20
href=3D"http://www.xlhtml.org/">http://www.xlhtml.org/</A> and the OLE =
Filters=20
Project at <A=20
href=3D"http://atena.com/libole2.php.">http://atena.com/libole2.php.</A> =
</P>
<P>* DBD::Excel, you can also access Spreadsheet::ParseExcel using the =
standard=20
DBI interface via Takanori Kawai's DBD::Excel module <A=20
href=3D"http://search.cpan.org/search?dist=3DDBD-Excel.">http://search.cp=
an.org/search?dist=3DDBD-Excel.</A>=20
</P>
<P>* Win32::OLE module and office automation. See, the section <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#WRITING_EXCEL_FILES">WRITING=20
EXCEL FILES</A>. </P>
<P>* HTML tables. If the files are saved from Excel in a HTML format the =
data=20
can be accessed using HTML::TableExtract <A=20
href=3D"http://search.cpan.org/search?dist=3DHTML-TableExtract">http://se=
arch.cpan.org/search?dist=3DHTML-TableExtract</A>=20
</P>
<P>* DBI with DBD::ADO or DBD::ODBC. See, the section <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#WRITING_EXCEL_FILES">WRITING=20
EXCEL FILES</A>. </P>
<P>* XML::Excel converts Excel files to XML using =
Spreadsheet::ParseExcel <A=20
href=3D"http://search.cpan.org/search?dist=3DXML-Excel.">http://search.cp=
an.org/search?dist=3DXML-Excel.</A>=20
</P>
<P>* OLE::Storage, aka LAOLA. This is a Perl interface to OLE file =
formats. In=20
particular, the distro contains an Excel to HTML converter called =
Herbert, <A=20
href=3D"http://user.cs.tu-berlin.de/~schwartz/pmh/">http://user.cs.tu-ber=
lin.de/~schwartz/pmh/</A>=20
This has been superseded by the Spreadsheet::ParseExcel module. </P>
<P>For other Perl-Excel modules try the following search: <A=20
href=3D"http://search.cpan.org/search?mode=3Dmodule&amp;query=3Dexcel">ht=
tp://search.cpan.org/search?mode=3Dmodule&amp;query=3Dexcel</A>=20
</P>
<P>If you wish to view Excel files on a UNIX/Linux platform check out =
the=20
excellent Gnumeric spreadsheet application at <A=20
href=3D"http://www.gnome.org/projects/gnumeric/">http://www.gnome.org/pro=
jects/gnumeric/</A>=20
or OpenOffice at <A=20
href=3D"http://www.openoffice.org/">http://www.openoffice.org/</A> </P>
<P>If you wish to view Excel files on a Windows platform which doesn't =
have=20
Excel installed you can use the free Microsoft Excel Viewer <A=20
href=3D"http://officeupdate.microsoft.com/2000/downloaddetails/xlviewer.h=
tm">http://officeupdate.microsoft.com/2000/downloaddetails/xlviewer.htm</=
A>=20
</P>
<P>
<HR>

<H1><A name=3DBUGS>BUGS</A></H1>
<P>Formulas are formulae. </P>
<P>Nested formulas sometimes aren't parsed correctly and give a result =
of=20
"#VALUE". This will be fixed in a later release. </P>
<P>Spreadsheet::ParseExcel: All formulas created by =
Spreadsheet::WriteExcel are=20
read as having a value of zero. This is because Spreadsheet::WriteExcel =
only=20
stores the formula and not the calculated result. </P>
<P>OpenOffice: Numerical formats are not displayed due to some missing =
records=20
in Spreadsheet::WriteExcel. URLs are not displayed as links. </P>
<P>Gnumeric: Some formatting is not displayed correctly. URLs are not =
displayed=20
as links. </P>
<P>MS Access: The Excel files that are produced by this module are not=20
compatible with MS Access. Use DBI or ODBC instead. </P>
<P>The lack of a portable way of writing a little-endian 64 bit IEEE =
float. </P>
<P>
<HR>

<H1><A name=3DTO_DO>TO DO</A></H1>
<P>The roadmap is as follows: </P>
<UL>
  <LI><A name=3Ditem_Add>Add formula caching to speed up the writing of=20
  formulas.</A>=20
  <LI><A name=3Ditem_Move>Move to Excel97/2000 format as standard. This =
will allow=20
  strings greater than 255 characters and hopefully Unicode. The Excel 5 =
format=20
  will be optional. This is a priority feature.</A> </LI></UL>
<P>You can keep up to date with future release by registering as a user =
with=20
Freshmeat <A href=3D"http://freshmeat.net/">http://freshmeat.net/</A> =
and=20
subscribing to Spreadsheet::WriteExcel at the project page <A=20
href=3D"http://freshmeat.net/projects/writeexcel/">http://freshmeat.net/p=
rojects/writeexcel/</A>=20
You will then receive mailed updates when a new version is released.=20
Alternatively you can keep an eye on <A=20
href=3D"news://comp.lang.perl.announce/">news://comp.lang.perl.announce/<=
/A> </P>
<P>Also, here are some of the most requested features that probably =
won't get=20
added: </P>
<UL>
  <LI><A name=3Ditem_Graphs>Graphs. The format is documented but it =
would require=20
  too much work to implement. It would also require too much work to =
design a=20
  useable interface to the hundreds of features in an Excel graph. So =
that's two=20
  too much works. Nevertheless, I do hope to *try* implement graphs. =
However, it=20
  is a long term goal. It won't be available for at least 6 months, even =
if you=20
  read this in 6 months time.</A>=20
  <LI><A name=3Ditem_Macros>Macros. This would solve the previous =
problem neatly.=20
  However, the format of Excel macros isn't documented.</A>=20
  <LI><A name=3Ditem_Some>Some feature that you really need. ;-)</A> =
</LI></UL>
<P>If there is some feature of an Excel file that you really, really =
need then=20
you should use Win32::OLE with Excel on Windows. If you are on Unix you =
could=20
consider connecting to a Windows server via Docserver <A=20
href=3D"http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/=
WriteExcel/doc/WriteExcel.html#WRITING_EXCEL_FILES">WRITING=20
EXCEL FILES</A> or SOAP. </P>
<P>
<HR>

<H1><A name=3DSEE_ALSO>SEE ALSO</A></H1>
<P>Spreadsheet::ParseExcel. <A=20
href=3D"http://search.cpan.org/search?dist=3DSpreadsheet-ParseExcel">http=
://search.cpan.org/search?dist=3DSpreadsheet-ParseExcel</A>=20
</P>
<P>Spreadsheet::WriteExcel::Simple. <A=20
href=3D"http://search.cpan.org/search?dist=3DSpreadsheet-WriteExcel-Simpl=
e">http://search.cpan.org/search?dist=3DSpreadsheet-WriteExcel-Simple</A>=
=20
</P>
<P>Spreadsheet::WriteExcel::FromDB. <A=20
href=3D"http://search.cpan.org/search?dist=3DSpreadsheet-WriteExcel-FromD=
B">http://search.cpan.org/search?dist=3DSpreadsheet-WriteExcel-FromDB</A>=
=20
</P>
<P>"Reading and writing Excel files with Perl" by Teodor Zlatanov, atIBM =

developerWorks: <A=20
href=3D"http://www-106.ibm.com/developerworks/library/l-pexcel/">http://w=
ww-106.ibm.com/developerworks/library/l-pexcel/</A>=20
</P>
<P>"Excel-Dateien mit Perl erstellen - Controller im Gl=FCck" by Peter =
Dintelmann=20
and Christian Kirsch in the German Unix/web journal iX: <A=20
href=3D"http://www.heise.de/ix/artikel/2001/06/175/">http://www.heise.de/=
ix/artikel/2001/06/175/</A>=20
</P>
<P>"Spreadsheet::WriteExcel" in The Perl Journal: <A=20
href=3D"http://www.samag.com/documents/s=3D1272/sam05030004/">http://www.=
samag.com/documents/s=3D1272/sam05030004/</A>=20
</P>
<P>Spreadsheet::WriteExcel documentation in Japanese by Takanori Kawai. =
<A=20
href=3D"http://member.nifty.ne.jp/hippo2000/perltips/Spreadsheet/WriteExc=
el.htm">http://member.nifty.ne.jp/hippo2000/perltips/Spreadsheet/WriteExc=
el.htm</A>=20
</P>
<P>Oesterly user brushes with fame: <A=20
href=3D"http://oesterly.com/releases/12102000.html">http://oesterly.com/r=
eleases/12102000.html</A>=20
</P>
<P>
<HR>

<H1><A name=3DACKNOWLEDGEMENTS>ACKNOWLEDGEMENTS</A></H1>
<P>The following people contributed to the debugging and testing of=20
Spreadsheet::WriteExcel: </P>
<P>Alexander Farber, Arthur@ais, Artur Silveira da Cunha, Borgar Olsen, =
Brian=20
White, Cedric Bouvier, CPAN testers, Daniel Berger, Daniel Gardner, =
Ernesto=20
Baschny, Felipe P=E9rez Galiana, Hanc Pavel, Harold Bamford, James =
Holmes, Johan=20
Ekenberg, J.C. Wren, Kenneth Stacey, Keith Miller, Kyle Krom, Markus =
Schmitz,=20
Michael Buschauer, Mike Blazer, Michael Erickson, Paul J. Falbe, Paul =
Medynski,=20
Peter Dintelmann, Reto Badertscher, Rich Sorden, Shane Ashby, Shenyu =
Zheng,=20
Steve Sapovits, Sven Passig, Vahe Sarkissian. </P>
<P>The following people contributed code, examples or Excel information: =
</P>
<P>Andrew Benham, Bill Young, Cedric Bouvier, Charles Wybble, Daniel =
Rentz, Ian=20
Penman, Pierre-Jean Vouette, Marco Geri, Sam Kington, Takanori Kawai, =
Tom=20
O'Sullivan. </P>
<P>Additional thanks to Takanori Kawai for translating the documentation =
into=20
Japanese. </P>
<P>Dirk Eddelbuettel maintains the Debian distro. </P>
<P>Thanks to Damian Conway for the excellent Parse::RecDescent. </P>
<P>Thanks to Tim Jenness for the File::Temp. </P>
<P>Thanks to Michael Meeks and Jody Goldberg for their work on Gnumeric. =
</P>
<P>
<HR>

<H1><A name=3DAUTHOR>AUTHOR</A></H1>
<P>John McNamara <A =
href=3D"mailto:jmcnamara@cpan.org">jmcnamara@cpan.org</A> </P>
<P><PRE>    got me a movie
    i want you to know
    slicing up eyeballs
    i want you to know
    girlie so groovie
    i want you to know
    don't know about you
    but i am un chien andalusia
    wanna grow
    up to be
    be a debaser
</PRE>
<P></P>
<P><PRE>        -- Black Francis
</PRE>
<P></P>
<P>
<HR>

<H1><A name=3DCOPYRIGHT>COPYRIGHT</A></H1>
<P>=A9 MM-MMII, John McNamara. </P>
<P>All Rights Reserved. This module is free software. It may be used,=20
redistributed and/or modified under the same terms as Perl itself.=20
</P></BODY></HTML>

------=_NextPart_000_000F_01C678CA.322BB550
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/WriteExcel/doc/simple.gif

R0lGODlh+wGtAfcAAAAAAAAAewAAhAAA/wAIewAIhAAQhAAQjAAYjAAYlAAhjAAhlAAplAApnAAx
lAAxnAA5nAA5pQBCpQB7AAB7ewD//wgIhAgIjAgQjAgYjAgYlAghlAgplAgpnAgxnAgxpQg5nAg5
pQhCpQhCrQhKpQhKrQhSrQhStQharQhatQhavQhjtQhjvQhrvQhrxghzvQhzxgh7xgh7zgiEzkJC
QnsAAHt7AHt7e729vd7e3v8AAP//AP//////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////ywAAAAA+wGtAUAI/gBzCBxI
sKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjwoB5PiHA0cAARNu/EuZ8p/LGy1TniTgMsDM
mgJcEiiwsyfPnwEs9BRaIOjQowZo/kuKgcABAxigupy6NGrUDFANYMV6NcFWBBtcHtgwdixYsxvO
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
/h18ePHjyZc3fx59euoAAgIAOw==

------=_NextPart_000_000F_01C678CA.322BB550
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/WriteExcel/doc/regions.gif

R0lGODlh2QFdAfcAAAAAAAAAewAAhAAA/wAIewAIhAAQhAAQjAAYjAAYlAAhjAAhlAAplAApnAAx
lAAxnAA5nAA5pQB7AAB7ewgAhAgIhAgIjAgQjAgYjAgYlAghlAgplAgpnAgxnAgxpQg5nAg5pQhC
pQhCrQhKpQhKrQhKtQhSrQhStQhatQhavQhjtQhjvQhrvQhrxghzvQhzxghzzgh7xgh7zgiEzkJC
QnsAAHt7AHt7e729vd7e3v8AAP//AP//////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////ywAAAAA2QFdAUAI/gBzCBxI
sKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHgwBy/MOBI4AACTf+oUT5r+UNligDFAjQ0iQB
mv9k1ixAgADPnwEq+CQglGdRogQMIFV6gWdLAxegSo3asuq/qBikZsWQYCsCDQcwHAALtqWGr2O/
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
4mocswtOBDtRptTPQP+qBQkUtubkS7MmHrv4ZmfdT5VTr259M/PpmEUnbP62K+rW36mqPovc8saK
uwnWJtuw4Onbd38Dv27/vknuFU0/b2z1sUX4CTjgcsBpd5l+unk3nnoLMvjgW62l1iCEzjmIVlWc
EbihZgkqVhN0jlU4IoklmngiiikqqOKKLLoI4XolxvgijTXaaGJ/F964/iOPPdo444hA+siikDDq
OCSSSZ6YY003OPkklFFKOSWVVVp5JZZZarkll116+SWYYYo5JpllmnkmmmmmCaJ/53H4Zkv+ORei
km8pBCeeeeq5J594shmTm/iVdVKgAsrZFZ11WqgSbGB59hllaQ0XaZ+VWnoppssxBiicyIVUKH6H
yrSpooqlRJRUkpmEqmCqRpUprLHKyuGfBXUaFqF5yhnWVYkmOWF3jL7qaqusEoverMkqu+xgtTbU
aa7DciiqbL4iCWxNK01WbGTGesssuOGKa5hudIJ6naer6nokqaWCJ2yq3zbaLb3j2nuvss6ei69S
os5krbtt8TswwQVv/ldumwZnloOWAAecrcIRSzwxdu2qeTHGGWu8Mccde/wxyCF7HJPF+xpV5MMp
+3hnuBmp/B3KL8es8swj+lfykXbm/DLPL9YcsE07p/wz0EI/TLROdt5MZ9AoIt3zQLn1bCqLGWbo
tMtVM+Wz0eZ9xbXWNz6t5dJLdx3f1A9GnfaDT7/G1tVLZp2i1Cq6fRtDdQd5Nmk7Ip0D4IELPnjZ
JM8tI98vw832eHfvB7feMB5+YuRLJo7310Revp/fZ/urXuEgbp4t4xHmXTrVKlpdOYNNq3665mFv
HfvrYnvObujljt4i6pjD3juFqvNK5OQommb37ofFnaLjeZfl4t+o/oFuuNlOJw886s0P6Trw2m9/
fY/RKx/XDbnbJDL66YssIfvtu/8+WOrLPz/9ZX4ul/nFS04xvwDQYLKl/AdASwUoXAUE1wGRcr+r
5E9Hy+uVSQYgQQm2hIL805MAL9OoSTlqLZKCVAcx8j9xJXBZJcwXYRiWpQaS5nhyKYkFjRLDC3Zq
hINh1bxyqC4dRiWDBhzXCZMVxDgRroiAo57hHKi3oI1kggOIYBOf+A8LUvGJVaQhdXxImG0dS147
VJcIB1ipIcqKjLEyo0oWmBAWjuWBCXHTBKM4RSlW0YkXsSMWlaPFGw7Li1DhoUj2aEIgEnIwaqwJ
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
Ow==

------=_NextPart_000_000F_01C678CA.322BB550
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/WriteExcel/doc/stocks.gif

R0lGODlh+gGHAfcAAAAAAAAAewAAhAAA/wAIewAIhAAQhAAQjAAYjAAYlAAhjAAhlAAplAApnAAx
lAAxnAA5nAA5pQBCpQB7AAB7ewD/AAD//wgIhAgIjAgQjAgYjAgYlAghlAgplAgpnAgxnAgxpQg5
nAg5pQhCpQhCrQhKpQhKrQhSrQhStQharQhatQhavQhjtQhjvQhrvQhrxghzvQhzxgh7xgh7zgiE
zkJCQnsAAHt7AHt7e729vd7e3v8AAP//AP//////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////ywAAAAA+gGHAUAI/gB1CBxI
sKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjwkB6PiXI0cAARNw/EuZ8p9LHC1TBigQwOVJ
AjX/zbRZgACBnkB/ziRw4SfRoUV7FjVAlIABlz4NZJBK1aXVf1OnaqC6tauBrgc4fEXgMkMCDQg4
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
w2+yO7u0W7u2e7u4e7tJ5bGH2rEem7p9eqn/hDcPxnlxVXi6hVqwRW2MxVqR5VvzpkyKxVumBXiU
/gVZiLW8Tedpq/e6vzo9yfta2Au9k6VZh1VZzou+k7W+5OtHzRtavYNa6Uu+6stka9W+50u/2Xtc
5btZ/ou/FJVZ4gu/haW+8pu/+gvAscVs+MZ5U4dzNRJWgJt1cfd22vZpJ9elggZeSWZ89hplfGtm
mqa36QRgBbZhk5bCEzxRJkxDxJe3XoTCiIZe8iVfvWPD6ZXDOmx5DDw23XZHoSdxl8dpQ1xpRfxo
mYdVDjxmKod8IfzBM6zCJBzFwwVkcstoRGbEmBa3Q4ZhI0vENMRlVsFlYtxiLpFlWnzBvwar+pW7
s8u7cBzHclx+aDt4/LfBTty3erzFIbzCx3Rn/vjaaFaMeYO8xX6caIOWaQ51yF6VxG61xJtbwTon
yXzXw0qcwWxHYRa8yZM8eWyFwWwceR0TxBB3xCdLyZRnyY+MyRLGsZ58eKjcco5cW5CccbEMy6/c
cbPMXLUspWHHyZWcyxu3y5vHyq28wZ0MzKkszFZRx70cqMgczMosy7ccZ7Bnx+n3y8m8zdLMzRN3
zc9sPtU8zOMsxBQHzsbsy9HmzdTMzKV8zrFnxxlDyg5nynBmz3ZWzjJnfdh8d0VHzwyHz1Mm0Par
z0iHzqE8wQAdvQYd0A1dff28VOvczRS9zNO8bAh9fq7kxv02xx790SDtb1kb0cdMUBetyw3N/tC7
ltEIlznuXM8pHW/ETGPhHKZhutAyHdPvRtAwNtNhZrxxKqcwJNTQJ6x1+qripXwGRmIidbohfTrP
Fz/CU7d76noXe9VZa3EcpbPcJ3UW470vxLFiDbXKGlFO/dQTiKdzJX30Z9VZ/dZYTXv109WiHDHf
h9beqoEzqtd4vTEcyDF/nYEeCIF8LdgCizGBXTG+y5j35aTHrKW6h6wCB38CWNh9jdiW/YGZTdhy
83/QVqamlNgfI9oZQ9qnajEhCEQ7etms3dqu3Xxp+9qyPdu0/VEedY+YmduXiYIseBOh6Zkz2BMC
YJpKMZpMsRSu6YPJfQBCyJrN7SZawRVp/jEWcUInH7mEtSmSURiFvfmbUgicvxkYeDEYgqGc5Y2c
yEkYOOkY6i0Z7G0ZDuAYH3AYPdkZPnka2nmdpGIqIjAasyEbsyErAL6Uq7EbBh4CWDmJTBkcC86e
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
RMBnEJm/PMwLs1SsOc3XvM3fPM7/GQAEBAAAOw==

------=_NextPart_000_000F_01C678CA.322BB550
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://search.cpan.org/src/JMCNAMARA/Spreadsheet-WriteExcel-0.37/WriteExcel/doc/stats.gif

R0lGODlh3QKxAfcAAAAAAAAAewAAhAAA/wAIewAIhAAIjAAQhAAQjAAYjAAYlAAhjAAhlAAplAAp
nAAxlAAxnAA5nAA5pQB7AAB7ewD//wgAhAgIhAgIjAgQjAgYjAgYlAghlAgplAgpnAgxnAgxpQg5
nAg5pQhCpQhCrQhKpQhKrQhKtQhSrQhStQharQhatQhavQhjtQhjvQhrvQhrxghzvQhzxghzzgh7
xgh7zgiEzkJCQnsAAHt7AHt7e729vd7e3v8AAP//AP//////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////ywAAAAA3QKxAUAI/gB5CBxI
sKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjyBDihxJsmRHADz+7dgRQMAEHf9evvxHU8fM
ly0D0GxJQOc/AT6BFggwtAABo0iPKk3KlMAFok5pOj0a4IJSmlj/GbV6YGrXDAW+hj2QgUCGAzTP
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
555/Dnrooo9Oeummn4566qqvPiUAAQEAOw==

------=_NextPart_000_000F_01C678CA.322BB550--
