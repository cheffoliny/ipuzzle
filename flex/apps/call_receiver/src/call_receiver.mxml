<?xml version="1.0" encoding="utf-8"?>
<app:FrameworkApplication
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:local="*"
	xmlns:tc="telenet.components.*"
	xmlns:app="net.telepol.app.*"
	xmlns:ui="net.telepol.ui.*"
	xmlns:telenet="net.telepol.telenet.*" 
	layout="absolute"
	borderColor="#F2F2F2" backgroundGradientAlphas="[1.0, 1.0]" backgroundGradientColors="[#F2F2F2, #F2F2F2]"
	backgroundColor="#F2F2F2"
	width="500" height="600"
	initialize="init()"
	applicationComplete="load()"
>
	<!-- Styles -->
	<mx:Style source="main.css" />
	<mx:Style>
		Alert
		{
			cornerRadius: 5;
			headerHeight: 22;
	   		headerColors: #8FAECB, #7998B6;
	   		creationCompleteEffect: alertCreationCompleteEffect;
		}
	</mx:Style>
	<!-- End Styles -->
	
	<mx:Script>
	<![CDATA[
		import mx.utils.ObjectProxy;
		import mx.collections.ArrayCollection;
		import net.telepol.rpc.FlexVar;
		import mx.core.Application;
		
 		//Globals
		[Embed(source="assets/confirm.gif")] [Bindable] private var imgConfirmClass:Class;
		
		[Bindable] public var aData : Object;
 		[Bindable] public var aFirms : ArrayCollection;
 		[Bindable] public var aOffices : ArrayCollection;
 		[Bindable] public var aPersons : ArrayCollection;
 		
 		public var bIsTabSet : Boolean = false;
 		public var bIsSave : Boolean = false;
 		//End Globals
		
		private function init() : void
		{
			amfService.addEventListener( "onResponse", onResponse );
			amfService.addEventListener( "onFault", function() : void { bIsSave = false; } );
		}
		
		private function load() : void
		{
			if( aData != null && aData.hasOwnProperty( 'caller_id' ) && aData.hasOwnProperty( 'id' ) )
			{
				amfService.init( new FlexVar( 'caller_id', aData.caller_id ), new FlexVar( 'id', aData.id ) );
			}
			else if( HTML_params.hasOwnProperty( 'caller_id' ) && HTML_params.hasOwnProperty( 'id' ) )
			{
				amfService.init( new FlexVar( 'caller_id', HTML_params['caller_id'] ), new FlexVar( 'id', HTML_params['id'] ) );
			}
			else amfService.init( new FlexVar( 'caller_id', "" ), new FlexVar( 'id', 0 ) );
		}
		
		private function onResponse( e : Event ) : void
		{
			if( suggesting ) 
			{
				suggesting = false;
				return;
			}
			
			if( bIsSave )ExternalInterface.call( 'window.close', '' );
			
			if( aData != null )
			{
				if( aData.hasOwnProperty( "caller_id" ) )sPhoneNumber.text = aData.caller_id;
				
				if( aData.hasOwnProperty( "sMode" ) )
				{
					switch( aData.sMode )
					{
						case "person":
							if( !bIsTabSet )
							{
								oTabs.selectedIndex = 0;
								bIsTabSet = true;
							}
							break;
						
						case "client":
							if( !bIsTabSet )
							{
								oTabs.selectedIndex = 1;
								bIsTabSet = true;
							}
							break;
					}
				}
			}
		}
		
		private function onConfirm() : void
		{
			switch( oTabs.selectedIndex )
			{
				case 0:
					aData.sMode = "person";
					break;
				
				case 1:
					aData.sMode = "client";
					break;
			}
			
			bIsSave = true;
			amfService.save( new FlexVar( 'aData', aData ) );
		}
		
		private function handleAutoCompleteObjectChange( e : Event ) : void
		{
			var obj : Object = e.currentTarget.selectedItem;
			if( obj.hasOwnProperty( 'object_name' ) )
			{
				aData.nIDObject = obj.id;
				aData.nIDClient = obj.client_id;
				
				nObjectNum.text = obj.num;
				sObjectName.text = obj.object_name;
				sObjectAddress.text = obj.address;
				sMOLName.text = obj.client_mol;
				sClientName.text = obj.client_name;
			}
		}
		
		private var intervalId : uint = 0;
		private var suggest_field : String = '';
		private var suggest_value : String = '';
		
		private function getDataObject( e : KeyboardEvent ) : void
		{
			clearTimeout( intervalId );

			suggest_field = e.currentTarget.labelField;
			suggest_value = e.currentTarget.currentText;
			
			if( e.currentTarget.currentText.length > 0 )
				if( ( e.charCode > 0 ) && ( e.keyCode != 27 ) && ( e.keyCode != 13 ) )
				{
					intervalId = setTimeout( queryObject, 100 );
				}
		}
		
		private var suggesting : Boolean = false;
		private function queryObject() : void
		{
			if( suggest_field != '' )
			{
				suggesting = true;
				amfService.suggestObject( new FlexVar( 'field', suggest_field ), new FlexVar( 'info', suggest_value ) );
			}
		}
		
		[Bindable] public var arr_object : ArrayCollection;
	]]>
	</mx:Script>
	
	<mx:Canvas x="10" y="10" width="198" height="31" borderStyle="solid" cornerRadius="10">
		<mx:Label fontSize="20" verticalCenter="0" horizontalCenter="0" id="sPhoneNumber"/>
	</mx:Canvas>
	
	<mx:TabBar x="325" y="28" id="oTabs" dataProvider="oTabsContainer" height="22">
	</mx:TabBar>
	<mx:ViewStack x="10" y="49" id="oTabsContainer" width="480" height="511">
		<mx:Canvas label="Служител" width="100%" height="100%" id="oPersonTab" cornerRadius="10" borderStyle="solid" borderThickness="1">
			<mx:Label x="92" y="31" text="Фирма :"/>
			<mx:ComboBox x="151" y="29" width="250" id="nIDFirm" dataProvider="{aFirms}" change="{amfService.getOffices();}"></mx:ComboBox>
			<mx:Label x="89" y="61" text="Регион :"/>
			<mx:ComboBox x="151" y="59" width="250" id="nIDOffice" dataProvider="{aOffices}" change="{amfService.getPersons();}"></mx:ComboBox>
			<mx:Label x="77" y="91" text="Служител :"/>
			<mx:ComboBox x="151" y="89" width="250" id="nIDPerson" dataProvider="{aPersons}"></mx:ComboBox>
			<mx:Label x="29" y="223" text="Информация :"/>
			<mx:TextArea x="29" y="249" width="423" id="sInfoPerson" height="229"/>
		</mx:Canvas>
		<mx:Canvas label="Клиент" width="100%" height="100%" id="oClientTab" borderStyle="solid" cornerRadius="10">
			<mx:Label x="47" y="30" text="МОЛ :"/>
			<mx:Label x="94" y="30" fontWeight="bold" id="sMOLName" text="{aData.hasOwnProperty( 'sMOLName' ) ? aData.sMOLName : ''}"/>
			<mx:Label x="37" y="58" text="Обект :"/>
			
			<!-- <mx:TextInput x="94" y="54" width="50" id="nObjectNum" text="{aData.hasOwnProperty( 'nObjectNum' ) ? aData.nObjectNum : ''}"/> -->
			<ui:AutoComplete id="nObjectNum" x="94" y="54" width="50"
				text="{aData.hasOwnProperty( 'nObjectNum' ) ? aData.nObjectNum : ''}"
				dataProvider="{arr_object}"
				dropDownItemRenderer="ObjectRenderer"
				minComboWidth="300"
				labelField="num" matchType="anyPart"
				isStrict="false" style="{AutoComplete.STYLE_MAC_MAIL}"
				allowDuplicates="false"
				areNewItemsEditable="false"
				change="handleAutoCompleteObjectChange( event )"
				keyUp="getDataObject( event )"
			/>
			
			<!-- <mx:TextInput x="152" y="54" width="300" id="sObjectName" text="{aData.hasOwnProperty( 'sObjectName' ) ? aData.sObjectName : ''}"/> -->
			<ui:AutoComplete id="sObjectName" x="152" y="54" width="300"
				text="{aData.hasOwnProperty( 'sObjectName' ) ? aData.sObjectName : ''}"
				dataProvider="{Application.application.arr_object}"
				dropDownItemRenderer="ObjectRenderer"
				minComboWidth="350"
				labelField="object_name" matchType="anyPart"
				isStrict="false" style="{AutoComplete.STYLE_MAC_MAIL}"
				allowDuplicates="false"
				areNewItemsEditable="false"
				change="handleAutoCompleteObjectChange( event )"
				keyUp="getDataObject( event )"
			/>
			
			<mx:Label x="40" y="84" text="Адрес :"/>
			<mx:TextArea x="94" y="83" width="358" id="sObjectAddress" text="{aData.hasOwnProperty( 'sObjectAddress' ) ? aData.sObjectAddress : ''}"/>
			<mx:Label x="33" y="139" text="Клиент :"/>
			<mx:Label x="94" y="139" fontWeight="bold" id="sClientName" text="{aData.hasOwnProperty( 'sClientName' ) ? aData.sClientName : ''}"/>
			<mx:Label x="29" y="223" text="Информация :"/>
			<mx:TextArea x="29" y="249" width="423" id="sInfoClient" height="229"/>
		</mx:Canvas>
	</mx:ViewStack>
	<mx:Button label="Потвърди" id="btnConfirm" width="100" height="20"  fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#B1FFAD, #72FF6B]" themeColor="#068100" icon="{imgConfirmClass}" click="{onConfirm();}" x="390" y="570"/>
	
</app:FrameworkApplication>