<?xml version="1.0" encoding="utf-8"?>
<app:FrameworkApplication
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:local="*"
	xmlns:app="net.telepol.app.*"
	xmlns:tc="telenet.components.*"
	xmlns:ui="net.telepol.ui.*"
	xmlns:telenet="net.telepol.telenet.*" 
	layout="absolute"
	borderColor="#F2F2F2" backgroundGradientAlphas="[1.0, 1.0]" backgroundGradientColors="[#F2F2F2, #F2F2F2]"
	backgroundColor="#F2F2F2"
	width="100%" height="100%"
	initialize="init()"
	creationComplete="load()"
>
	<!-- Styles -->
	<mx:Style source="main.css" />
	<mx:Style>
		Alert
		{
			cornerRadius: 5;
			headerHeight: 22;
	   		headerColors: #8FAECB, #7998B6;
	   		creationCompleteEffect: alertCreationCompleteEffect;
		}
	</mx:Style>
	<mx:Style>
		.headerGreen { color: #006400; }
	</mx:Style>
	<!-- End Styles -->
	
	<mx:Script>
	<![CDATA[
		import mx.controls.TextInput;
		import mx.events.DataGridEvent;
		import net.telepol.rpc.FlexVar;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.core.ScrollPolicy;
		
 		//Globals
		[Embed(source="assets/pdf.gif")] [Bindable] private var imgPrintClass:Class;
		[Embed(source="assets/excel.gif")] [Bindable] private var imgExcelClass:Class;
		[Embed(source="assets/add.png")] [Bindable] private var imgAddClass:Class;
		[Embed(source="assets/history_edit.gif")] [Bindable] private var imgEditClass:Class;
		[Embed(source="assets/glyphicons/row.delete.png")] [Bindable] private var imgDeleteClass:Class;
		
		//-- Paging
 		[Bindable] public var aPaging : Object;
 		//-- End Paging
 		
 		[Bindable] public var aFirms : ArrayCollection;
 		[Bindable] public var aOffices : ArrayCollection;
 		[Bindable] public var aMonths : ArrayCollection;
 		[Bindable] public var aFilters : ArrayCollection;
 		[Bindable] public var aData : ArrayCollection;
 		[Bindable] public var aVisible : Object;
 		public var nLastIndex : int = 0;
		
		public var aModes : Array = [ { "id" : "0", "label" : "Отпуски" }, { "id" : "1", "label" : "Болнични" }, { "id" : "2", "label" : "Обезщетения" } ];
 		//End Globals
 		
		private function init() : void
		{
			amfService.addEventListener( "onResponse", onResponse );
			ExternalInterface.addCallback( "load", load );
		}
		
		private function load() : void
		{
			amfService.init();
		}
		
		private function onResponse( e : Event ) : void
		{
			for( var i : int = 0; i < aData.length; i++ )
			{
				if( i == 0 )
				{
					aData[i]._id = ( ( aPaging.current_page - 1 ) * aPaging.page_size ) + 1;
				}
				else
				{
					aData[i]._id = aData[i-1]._id + 1;
				}
			}
			
			//Paging
			oPaging.currentPage = aPaging.current_page;
			oPaging.pageSize = aPaging.page_size;
			oPaging.maxPage = aPaging.max_pages;
			oPaging.maxRows = aPaging.max_rows;
			//End Paging
			
			result_data.scrollToIndex( nLastIndex );
		}
		
		public function onSort( eMyEvent : DataGridEvent ) : void
		{
			eMyEvent.preventDefault();
			
			if( !aPaging.hasOwnProperty( "sortType" ) )aPaging.sortType = 0;
			if( !aPaging.hasOwnProperty( "sortCol" ) )aPaging.sortCol = 0;
			
			var nSortCol : int = eMyEvent.columnIndex - 1;
			var nSortType : int;
			if( nSortCol != aPaging.sortCol )nSortType = 0;
			else nSortType = aPaging.sortType == 0 ? 1 : 0;
			
			//Sorting
			aPaging.sortCol = nSortCol;
			aPaging.sortType = nSortType;
			//End Sorting
			
			amfService.init( new FlexVar( "pagingandsorting", aPaging ), true );
			
			return;
		}
		
		private function onChangePage() : void
		{
			aPaging.current_page = oPaging.currentPage;
			amfService.init( new FlexVar( "pagingandsorting", aPaging ), true );
		}
		
		private function calcRowColor( item : Object, rowIndex : int, dataIndex : int, color : uint ) : uint
		{
			if( item.state_salary == 1 )
			{
				return 0xE6E6FF;
			}
			else
			{
				return color;
			}
		}
		
		private function onItemEdit( eMyEvent : DataGridEvent ) : void
		{
			if( eMyEvent.reason != "newRow" )
			{
				return;
			}
			
			if( eMyEvent.columnIndex == 21 )
			{
				if( aData[eMyEvent.rowIndex].hasOwnProperty( "allow_edit" ) )if( aData[eMyEvent.rowIndex].allow_edit == 1 )
				{
					var newData : Number = Number( TextInput( eMyEvent.currentTarget.itemEditorInstance ).text );
					
					if( newData == 0 )
					{
						eMyEvent.preventDefault();
						TextInput( eMyEvent.currentTarget.itemEditorInstance ).errorString = "Въведете валидна стойност!";
					}
					else
					{
						nLastIndex = eMyEvent.rowIndex;
						aData[eMyEvent.rowIndex].sum_editted = 1;
						amfService.save( new FlexVar( "nID", aData[eMyEvent.rowIndex].id ), new FlexVar( "nSum", newData ), new FlexVar( "pagingandsorting", aPaging ) );
					}
				}
			}
			return;
		}
		
		private function onExport( ExportWhat : String ) : void
		{
			var sWhatToCall : String;
			
			sWhatToCall = "" + 
					"window.open( 'api/api_general.php?" + 
					"action_script=api/api_setup_leave_earnings.php" + 
					"&api_action=export_to_" + ExportWhat + 
					"&nSortCol=" + ( aPaging.hasOwnProperty( "sortCol" ) ? aPaging.sortCol : 0 ) + 
					"&nSortType=" + ( aPaging.hasOwnProperty( "sortType" ) ? aPaging.sortType : 0 ) + 
					"&nMode=" + ( nMode.selectedItem.hasOwnProperty( "id" ) ? nMode.selectedItem.id : 0 ) + 
					"&nIDFilter=" + ( nIDFilter.selectedItem.hasOwnProperty( "id" ) ? nIDFilter.selectedItem.id : 0 ) + 
					"&nIDFirm=" + ( nIDFirm.selectedItem.hasOwnProperty( "id" ) ? nIDFirm.selectedItem.id : 0 ) + 
					"&nIDOffice=" + ( nIDOffice.selectedItem.hasOwnProperty( "id" ) ? nIDOffice.selectedItem.id : 0 ) +
					"&sPersonName=" + sPersonName.text +
					"&nMonth=" + ( nMonth.selectedItem.hasOwnProperty( "id" ) ? nMonth.selectedItem.id : 0 ) +
					"&nStateSalary=" + ( nStateSalary.selected ? 1 : 0 ) +
					"&nLeaveNum=" + nLeaveNum.text +
					"&rpc_version=2', 'mywindow' )";
			
			ExternalInterface.call( sWhatToCall, '' );
		}
		
		public function fixFields() : void
		{
			switch( nMode.selectedIndex )
			{
				case 0:
					col_leave_num.headerText = "Молба Номер";
					col_person_name.visible = true;
					col_firm.visible = true;
					col_office.visible
					col_leave_type.visible = true;
					col_date_from.visible = true;
					col_days_count.visible = true;
					break;
				case 1:
					col_leave_num.headerText = "Болничен За";
					col_person_name.visible = true;
					col_firm.visible = true;
					col_office.visible
					col_leave_type.visible = false;
					col_date_from.visible = true;
					col_days_count.visible = true;
					break;
				case 2:
					col_leave_num.headerText = "Обезщетение За";
					col_person_name.visible = true;
					col_firm.visible = true;
					col_office.visible
					col_leave_type.visible = false;
					col_date_from.visible = true;
					col_days_count.visible = true;
					break;
			}
			
			amfService.init();
		}
		
		private function openFilter( nID : int ) : void
		{
			var sWhatToCall : String;
			sWhatToCall = "dialogSetupLeaveEarningsFilter( " + nID + " )";
			
			ExternalInterface.call( sWhatToCall, '' );
		}
	]]>
	</mx:Script>
	
	<mx:Canvas x="0" y="0" width="100%" height="30" cornerRadius="6" backgroundColor="#617cb3" borderStyle="solid">
		<mx:Label id="window_title" fontSize="15" verticalCenter="0" left="5" color="#FFFFFF" fontWeight="bold"  text="Отпуски Наработки"/>
	</mx:Canvas>
	
	<mx:Label x="10" y="42" text="Тип :"/>
	<mx:ComboBox x="69" y="38" width="200" id="nMode" dataProvider="{aModes}" change="{fixFields();}"></mx:ComboBox>
	
	<mx:Label x="10" y="79" text="Фирма :"/>
	<mx:ComboBox x="69" y="75" width="200" id="nIDFirm" dataProvider="{aFirms}" change="{amfService.getOffices();}"></mx:ComboBox>
	<mx:Label x="277" y="79" text="Регион :"/>
	<mx:ComboBox x="339" y="75" width="200" id="nIDOffice" dataProvider="{aOffices}"></mx:ComboBox>
	<mx:Label x="547" y="79" text="Служител :"/>
	<mx:TextInput x="621" y="75" width="200" id="sPersonName"/>
	<mx:Label x="10" y="109" text="Месец :"/>
	<mx:ComboBox x="69" y="105" width="200" id="nMonth" dataProvider="{aMonths}" selectedIndex="1"></mx:ComboBox>
	<mx:CheckBox x="339" y="105" label="Щатна Заплата" width="200" id="nStateSalary"/>
	
	<mx:Label x="547" y="109" text="Молба № :"/>
	<mx:TextInput x="621" y="105" width="122" id="nLeaveNum" maxChars="8" restrict="0-9"/>
	
	<mx:Button label="Търси" width="70" height="20" fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#A8DDFF, #77CAFF]" id="btnSearch" click="{amfService.init();}" x="751" y="106"/>
	
	<mx:Canvas x="838" y="50" width="220" height="83" clipContent="false" styleName="holder">
		<mx:Canvas y="-10" width="66" height="22" left="10" backgroundColor="#F2F2F2" id="oCanvasFilter" horizontalScrollPolicy="off">
			<mx:Label text="Филтър" fontSize="12" verticalCenter="0" width="54" left="5"/>
		</mx:Canvas>
		<mx:Button id="btnFilterAdd" width="25" height="22"  fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#B1FFAD, #72FF6B]" themeColor="#068100" icon="{imgAddClass}" y="23" x="10" click="{openFilter( 0 );}"/>
		<mx:Button id="btnFilterEdit" width="25" height="22"  fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#B1FFAD, #72FF6B]" themeColor="#068100" icon="{imgEditClass}" y="23" x="43" click="{if( nIDFilter.selectedItem.hasOwnProperty( 'id' ) )openFilter( nIDFilter.selectedItem.id );}"/>
		<mx:Button id="btnFilterDelete" width="25" height="22"  fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#B1FFAD, #72FF6B]" themeColor="#068100" icon="{imgDeleteClass}" y="23" x="76" click="{amfService.delFilter();}"/>
		<mx:ComboBox x="10" y="54" width="200" id="nIDFilter" dataProvider="{aFilters}"></mx:ComboBox>
	</mx:Canvas>
	
	<local:Pager id="oPaging" x="0" y="135" changePage="onChangePage()">
	</local:Pager>
	
	<local:RowColorDataGrid
		editable="true"
		width="100%"
		id="result_data"
		dataProvider="{aData}"
		x="0"
		top="170"
		selectionColor="#EFEFC7"
		rollOverColor="#F5F5DC"
		horizontalScrollPolicy="{ScrollPolicy.AUTO}"
		allowMultipleSelection="true"
		allowDragSelection="true"
		draggableColumns="false"
		rowColorFunction="calcRowColor"
		itemEditEnd="onItemEdit( event );"
		headerRelease="onSort( event );"
	 	bottom="40"
	 >
		<local:columns>
			<mx:DataGridColumn
				dataField="_id"
				editable="false"
				headerText="#"
				resizable="false"
				sortable="false"
				textAlign="left"
				width="40"
			/>
			
			<mx:DataGridColumn
				id="col_leave_num"
				dataField="leave_num"
				headerText="Moлба Номер"
				resizable="false"
				textAlign="right"
				width="90"
				visible="{aVisible.leave_num == '1' ? true : false}"
				editable="false"
			>
				<mx:itemRenderer>
					<mx:Component>
						<mx:LinkButton
							label="{getNumberLabel( data )}"
							click="{onNumberClick( data.id_leave, data.id_person );}"
						>
							<mx:Script>
							<![CDATA[
								private function getNumberLabel( data : Object ) : String
								{
									switch( outerDocument.nMode.selectedIndex )
									{
										case 0:
											return data.leave_num;
											break;
										
										case 1:
										case 2:
											return data.date;
											break;
									}
									
									//Default
									return data.leave_num;
								}
								
								private function onNumberClick( id_leave : int, id_person : int ) : void
								{
									switch( outerDocument.nMode.selectedIndex )
									{
										case 0:
											ExternalInterface.call( 'dialogSetupPersonLeave( ' + id_leave + ', ' + id_person + ' )', '' );
											break;
										
										case 1:
											ExternalInterface.call( 'dialogSetHospital( ' + id_leave + ', ' + id_person + ' )', '' );
											break;
										
										case 2:
											ExternalInterface.call( 'dialogSetQuittance( ' + id_leave + ', ' + id_person + ' )', '' );
											break;
									}
								}
							]]>
							</mx:Script>
						</mx:LinkButton>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			
			<mx:DataGridColumn
				id="col_code_leave_name"
				dataField="code_leave_name"
				headerText="Чл. от КТ"
				resizable="true"
				textAlign="left"
				width="150"
				visible="{aVisible.code_leave_name == '1' ? true : false}"
				editable="false"
			/>
			
			<mx:DataGridColumn
				id="col_person_name"
				dataField="person_name"
				editable="false"
				headerText="Служител"
				resizable="true"
				textAlign="left"
				width="300"
				itemRenderer="urlRenderer"
				visible="{aVisible.person_name == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				id="col_person_position"
				dataField="person_position"
				headerText="Длъжност"
				resizable="true"
				textAlign="left"
				width="200"
				visible="{aVisible.person_position == '1' ? true : false}"
				editable="false"
			/>
			
			<mx:DataGridColumn
				id="col_firm"
				dataField="firm"
				editable="false"
				headerText="Фирма"
				resizable="true"
				textAlign="left"
				width="100"
				visible="{aVisible.firm == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				id="col_office"
				dataField="office"
				editable="false"
				headerText="Регион"
				resizable="true"
				textAlign="left"
				width="100"
				visible="{aVisible.office == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				id="col_object"
				dataField="object"
				editable="false"
				headerText="Обект"
				resizable="true"
				textAlign="left"
				width="200"
				visible="{aVisible.object == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				id="col_leave_type"
				dataField="leave_type"
				editable="false"
				headerText="Тип"
				resizable="false"
				textAlign="center"
				width="90"
				visible="{aVisible.leave_type == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				id="col_date"
				dataField="date"
				headerText="Дата"
				resizable="false"
				textAlign="center"
				width="80"
				visible="{aVisible.date == '1' ? true : false}"
				editable="false"
			/>
			
			<mx:DataGridColumn
				id="col_leave_from"
				dataField="leave_from"
				headerText="Молба От"
				resizable="false"
				textAlign="center"
				width="80"
				visible="{aVisible.leave_from == '1' ? true : false}"
				editable="false"
			/>
			
			<mx:DataGridColumn
				id="col_leave_to"
				dataField="leave_to"
				headerText="Молба До"
				resizable="false"
				textAlign="center"
				width="80"
				visible="{aVisible.leave_to == '1' ? true : false}"
				editable="false"
			/>
			
			<mx:DataGridColumn
				id="col_date_from"
				dataField="date_from"
				editable="false"
				headerText="От Дата"
				resizable="false"
				textAlign="center"
				width="120"
				visible="{aVisible.leave_from_all == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				id="col_days_count"
				dataField="days_count"
				editable="false"
				headerText="Брой Дни"
				resizable="false"
				textAlign="right"
				width="90"
				visible="{aVisible.application_days == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				id="col_created_user"
				dataField="created_user"
				headerText="Въвел"
				resizable="true"
				textAlign="left"
				width="200"
				visible="{aVisible.created_user == '1' ? true : false}"
				editable="false"
			/>
			
			<mx:DataGridColumn
				id="col_status"
				dataField="status"
				headerText="Статус"
				resizable="false"
				textAlign="left"
				width="85"
				visible="{aVisible.status == '1' ? true : false}"
				editable="false"
			/>
			
			<mx:DataGridColumn
				id="col_time_confirm"
				dataField="time_confirm"
				headerText="Дата"
				resizable="false"
				textAlign="center"
				width="80"
				headerStyleName="headerGreen"
				visible="{aVisible.time_confirm == '1' ? true : false}"
				editable="false"
			/>
			
			<mx:DataGridColumn
				id="col_res_leave_from"
				dataField="res_leave_from"
				headerText="Дата От"
				resizable="false"
				textAlign="center"
				width="80"
				headerStyleName="headerGreen"
				visible="{aVisible.res_leave_from == '1' ? true : false}"
				editable="false"
			/>
			
			<mx:DataGridColumn
				id="col_res_leave_to"
				dataField="res_leave_to"
				headerText="Дата До"
				resizable="false"
				textAlign="center"
				width="80"
				headerStyleName="headerGreen"
				visible="{aVisible.res_leave_to == '1' ? true : false}"
				editable="false"
			/>
			
			<mx:DataGridColumn
				id="col_res_application_days"
				dataField="res_application_days"
				headerText="Дни"
				resizable="false"
				textAlign="right"
				width="40"
				headerStyleName="headerGreen"
				visible="{aVisible.res_application_days == '1' ? true : false}"
				editable="false"
			/>
			
			<mx:DataGridColumn
				id="col_person_confirm"
				dataField="person_confirm"
				headerText="Потвърдил"
				resizable="false"
				textAlign="left"
				width="80"
				headerStyleName="headerGreen"
				visible="{aVisible.person_confirm == '1' ? true : false}"
				editable="false"
			>
				<mx:itemRenderer>
					<mx:Component>
						<mx:Label textAlign="center" text="..." toolTip="{data.person_confirm}"></mx:Label>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			
			<mx:DataGridColumn
				id="total_sum"
				dataField="total_sum"
				headerText="Сума"
				resizable="false"
				textAlign="right"
				width="85"
				visible="{aVisible.sum == '1' ? true : false}"
			>
				<mx:itemEditor>
					<mx:Component>
						<mx:TextInput
							maxChars="10"
							restrict="0-9."
							editable="{ outerDocument.aData[data._id - 1].allow_edit == 1 ? true : false }"
							enabled="{ outerDocument.aData[data._id - 1].allow_edit == 1 ? true : false }"
						/>
					</mx:Component>
				</mx:itemEditor>
				<mx:itemRenderer>
					<mx:Component>
						<mx:Label text="{data.total_sum}" color="{data.sum_editted == 1 ? 0xEE0000 : 0x000000}"></mx:Label>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</local:columns>
	</local:RowColorDataGrid>
	
	<mx:Button label="Прехвърли към РЗ" width="145" height="20" fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#B4FFA8, #7AFF77]" id="btnCommit" click="{amfService.flush();}" left="10" bottom="10"/>
	<mx:Button label="Откажи промените" width="145" height="20" fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#FFA8A8, #FF7777]" id="btnClear" click="{amfService.clear();}" left="163" bottom="10"/>
	
	<mx:Button label="Excel" right="20" id="btnXLS" width="80" height="25"  fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#B1FFAD, #72FF6B]" bottom="10" themeColor="#068100" icon="{imgExcelClass}" click="{onExport( 'xls' );}"/>
	<mx:Button label="PDF" right="110" id="btnPDF" width="80" height="25"  fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#B1FFAD, #72FF6B]" bottom="10" themeColor="#068100" icon="{imgPrintClass}" click="{onExport( 'pdf' );}"/>
</app:FrameworkApplication>