<?xml version="1.0" encoding="utf-8"?>
<app:FrameworkApplication
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:local="*"
	xmlns:app="net.telepol.app.*"
	xmlns:tc="telenet.components.*"
	xmlns:ui="net.telepol.ui.*"
	xmlns:telenet="net.telepol.telenet.*" 
	layout="absolute"
	borderColor="#F2F2F2" backgroundGradientAlphas="[1.0, 1.0]" backgroundGradientColors="[#F2F2F2, #F2F2F2]"
	backgroundColor="#F2F2F2"
	width="100%" height="100%"
	initialize="init()"
	creationComplete="load()"
>
	<!-- Styles -->
	<mx:Style source="main.css" />
	<mx:Style>
		Alert
		{
			cornerRadius: 5;
			headerHeight: 22;
	   		headerColors: #8FAECB, #7998B6;
	   		creationCompleteEffect: alertCreationCompleteEffect;
		}
	</mx:Style>
	<mx:Style>
		.headerGreen { color: #006400; }
	</mx:Style>
	<!-- End Styles -->
	
	<mx:Script>
	<![CDATA[
		import mx.events.DataGridEvent;
		import net.telepol.rpc.FlexVar;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.core.ScrollPolicy;
		
 		//Globals
		[Embed(source="assets/pdf.gif")] [Bindable] private var imgPrintClass:Class;
		[Embed(source="assets/excel.gif")] [Bindable] private var imgExcelClass:Class;
		[Embed(source="assets/add.png")] [Bindable] private var imgAddClass:Class;
		[Embed(source="assets/history_edit.gif")] [Bindable] private var imgEditClass:Class;
		[Embed(source="assets/glyphicons/row.delete.png")] [Bindable] private var imgDeleteClass:Class;
		
 		//-- Paging
 		[Bindable] public var aPaging : Object;
 		//-- End Paging
 		
 		[Bindable] public var aFirms : ArrayCollection;
 		[Bindable] public var aOffices : ArrayCollection;
 		[Bindable] public var aObjects : ArrayCollection;
 		[Bindable] public var aFilters : ArrayCollection;
 		[Bindable] public var aDates : Object;
 		[Bindable] public var aData : ArrayCollection;
 		[Bindable] public var aVisible : Object;
 		
		[Bindable] private var mnameslong : Array = ['Януари','Февруари','Март','Април','Май','Юни','Юли','Август','Септември','Октомври','Ноември','Декември'];
		[Bindable] private var dnamesshort : Array = ['Нд.','Пн.','Вт.','Ср.','Чт.','Пт.','Сб.'];
		
 		public var aIsConfirm : Array = [ { "id" : "2", "label" : "-- Всички --" }, { "id" : "0", "label" : "Непотвърдени" }, { "id" : "1", "label" : "Потвърдени" }, { "id" : "3", "label" : "Неразрешени" } ];
 		public var aAvailableActions : Array = [ { "id" : "0", "label" : "-- Изберете --" }, { "id" : "1", "label" : "Избери Всички" }, { "id" : "2", "label" : "Изчисти Избор" }, { "id" : "0", "label" : "---" }, { "id" : "3", "label" : "Одобри Избраните" } ];
 		//End Globals
 		
		private function init() : void
		{
			amfService.addEventListener( "onResponse", onResponse );
			ExternalInterface.addCallback( "load", load );
		}
		
		private function load() : void
		{
			amfService.init();
		}
		
		private function onResponse( e : Event ) : void
		{
			for( var i : int = 0; i < aData.length; i++ )
			{
				if( i == 0 )
				{
					aData[i]._id = ( ( aPaging.current_page - 1 ) * aPaging.page_size ) + 1;
				}
				else
				{
					aData[i]._id = aData[i-1]._id + 1;
				}
			}
			
			if( aDates.hasOwnProperty( 'sDateFrom' ) && aDates.hasOwnProperty( 'sDateTo' ) )
			{
				sDateFrom.selectedDate = getDate( aDates.sDateFrom );
				sDateTo.selectedDate = getDate( aDates.sDateTo );
			}
			
			//Paging
			oPaging.currentPage = aPaging.current_page;
			oPaging.pageSize = aPaging.page_size;
			oPaging.maxPage = aPaging.max_pages;
			oPaging.maxRows = aPaging.max_rows;
			//End Paging
		}
		
		private function onChangePage() : void
		{
			aPaging.current_page = oPaging.currentPage;
			amfService.init( new FlexVar( "pagingandsorting", aPaging ), true );
		}
		
		public function onSort( eMyEvent : DataGridEvent ) : void
		{
			eMyEvent.preventDefault();
			
			if( !aPaging.hasOwnProperty( "sortType" ) )aPaging.sortType = 0;
			if( !aPaging.hasOwnProperty( "sortCol" ) )aPaging.sortCol = 0;
			
			var nSortCol : int = eMyEvent.columnIndex - 2;
			var nSortType : int;
			if( nSortCol != aPaging.sortCol )nSortType = 0;
			else nSortType = aPaging.sortType == 0 ? 1 : 0;
			
			//Sorting
			aPaging.sortCol = nSortCol;
			aPaging.sortType = nSortType;
			//End Sorting
			
			amfService.init( new FlexVar( "pagingandsorting", aPaging ), true );
			
			return;
		}
		
		private function calcRowColor( item : Object, rowIndex : int, dataIndex : int, color : uint ) : uint
		{
			if( item.state_salary == 1 )
			{
				return 0xE6E6FF;
			}
			else
			{
				return color;
			}
		}
		
		private function getDateBack( d : String ) : String
		{
			return String( d.substr( 6, 4 ) ) + "-" + String( d.substr( 3, 2 ) ) + "-" + String( d.substr( 0, 2 ) );
		}
		
		private function getDate( d : String ) : Date
		{
			return new Date(
				int( d.substr( 0, 4 ) ), 		// year
				int( d.substr( 5, 2 ) ) - 1,	// month
				int( d.substr( 8, 2 ) )			// day
			);
		}
		
		private function onExport( ExportWhat : String ) : void
		{
			var sWhatToCall : String;
			
			sWhatToCall = "" + 
					"window.open( 'api/api_general.php?" + 
					"action_script=api/api_view_person_leaves.php" + 
					"&api_action=export_to_" + ExportWhat + 
					"&nSortCol=" + ( aPaging.hasOwnProperty( "sortCol" ) ? aPaging.sortCol : 0 ) + 
					"&nSortType=" + ( aPaging.hasOwnProperty( "sortType" ) ? aPaging.sortType : 0 ) + 
					"&nIDFirm=" + ( nIDFirm.selectedItem.hasOwnProperty( "id" ) ? nIDFirm.selectedItem.id : 0 ) + 
					"&nIDOffice=" + ( nIDOffice.selectedItem.hasOwnProperty( "id" ) ? nIDOffice.selectedItem.id : 0 ) + 
					"&nIsConfirm=" + ( nIsConfirm.selectedItem.hasOwnProperty( "id" ) ? nIsConfirm.selectedItem.id : 0 ) + 
					"&sDateFrom=" + mysqlDateFormatter.format( sDateFrom.selectedDate ) + 
					"&sDateTo=" + mysqlDateFormatter.format( sDateTo.selectedDate ) + 
					"&nIDFilter=" + ( nIDFilter.selectedItem.hasOwnProperty( "id" ) ? nIDFilter.selectedItem.id : 0 ) + 
					"&rpc_version=2', 'mywindow' )";
			
			ExternalInterface.call( sWhatToCall, '' );
		}
		
		private function selectChecks( flag : int ) : void
		{
			for( var i : int = 0; i < aData.length; i++ )
			{
				aData[i].is_to_confirm = flag;
				//aData.itemUpdated(aData[i]);
			}
			
			aData.refresh();
		}
		
		private function executeAction() : void
		{
			switch( nActionToTake.selectedItem.id )
			{
				case "1":
					selectChecks( 1 );
					break;
				case "2":
					selectChecks( 0 );
					break;
				case "3":
					amfService.groupConfirm();
					break;
				default:
					break;
			}
		}
		
		private function openFilter( nID : int ) : void
		{
			var sWhatToCall : String;
			sWhatToCall = "dialogViewPersonLeavesFilter( " + nID + " )";
			
			ExternalInterface.call( sWhatToCall, '' );
		}
	]]>
	</mx:Script>
	
	<mx:DateFormatter id="mysqlDateFormatter" formatString="YYYY-MM-DD" />
	
	<mx:Canvas x="0" y="0" width="100%" height="30" cornerRadius="6" backgroundColor="#617cb3" borderStyle="solid">
		<mx:Label id="window_title" fontSize="15" verticalCenter="0" left="5" color="#FFFFFF" fontWeight="bold"  text="Молби за Отпуск"/>
	</mx:Canvas>
	
	<mx:Label x="10" y="38" text="Фирма :"/>
	<mx:ComboBox x="69" y="34" width="200" id="nIDFirm" dataProvider="{aFirms}" change="{amfService.getOffices();}"></mx:ComboBox>
	<mx:Label x="420" y="36" text="Регион :"/>
	<mx:ComboBox x="490" y="34" width="200" id="nIDOffice" dataProvider="{aOffices}" change="{amfService.getObjects();}"></mx:ComboBox>
	<mx:Label x="10" y="68" text="Обект :"/>
	<mx:ComboBox x="69" y="64" width="330" id="nIDObject" dataProvider="{aObjects}"></mx:ComboBox>
	<mx:Label x="420" y="68" text="Служител :"/>
	<mx:TextInput x="490" y="64" width="200" id="sPersonName"/>
	<mx:Label x="10" y="98" text="Статус :"/>
	<mx:ComboBox x="69" y="94" width="200" id="nIsConfirm" dataProvider="{aIsConfirm}" selectedIndex="1"></mx:ComboBox>
	<mx:Label x="277" y="98" text="От :"/>
	<mx:Label x="413" y="98" text="До :"/>
	<mx:DateField x="313" y="94" id="sDateFrom" showToday="true" formatString="DD.MM.YYYY" styleName="picker" dayNames="{dnamesshort}" monthNames="{mnameslong}" firstDayOfWeek="1"/>
	<mx:DateField x="449" y="94" id="sDateTo" showToday="true" formatString="DD.MM.YYYY" styleName="picker" dayNames="{dnamesshort}" monthNames="{mnameslong}" firstDayOfWeek="1"/>
	<mx:Button label="Търси" width="70" height="20" fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#A8DDFF, #77CAFF]" id="btnSearch" click="{amfService.init();}" x="620" y="95"/>
	
	<mx:Canvas x="698" y="40" width="220" height="83" clipContent="false" styleName="holder">
		<mx:Canvas y="-10" width="66" height="22" left="10" backgroundColor="#F2F2F2" id="oCanvasFilter" horizontalScrollPolicy="off">
			<mx:Label text="Филтър" fontSize="12" verticalCenter="0" width="54" left="5"/>
		</mx:Canvas>
		<mx:Button id="btnFilterAdd" width="25" height="22"  fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#B1FFAD, #72FF6B]" themeColor="#068100" icon="{imgAddClass}" y="23" x="10" click="{openFilter( 0 );}"/>
		<mx:Button id="btnFilterEdit" width="25" height="22"  fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#B1FFAD, #72FF6B]" themeColor="#068100" icon="{imgEditClass}" y="23" x="43" click="{if( nIDFilter.selectedItem.hasOwnProperty( 'id' ) )openFilter( nIDFilter.selectedItem.id );}"/>
		<mx:Button id="btnFilterDelete" width="25" height="22"  fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#B1FFAD, #72FF6B]" themeColor="#068100" icon="{imgDeleteClass}" y="23" x="76" click="{amfService.delFilter();}"/>
		<mx:ComboBox x="10" y="54" width="200" id="nIDFilter" dataProvider="{aFilters}"></mx:ComboBox>
	</mx:Canvas>
	
	<local:RowColorDataGrid
		editable="false"
		width="100%"
		id="result_data"
		dataProvider="{aData}"
		x="0"
		top="160"
		selectionColor="#EFEFC7"
		rollOverColor="#F5F5DC"
		horizontalScrollPolicy="{ScrollPolicy.AUTO}"
		allowMultipleSelection="true"
		allowDragSelection="true"
		draggableColumns="false"
		rowColorFunction="calcRowColor"
		headerRelease="onSort( event );"
	 	bottom="40"
	 >
		<local:columns>
			<mx:DataGridColumn
				dataField="_id"
				headerText="#"
				resizable="false"
				textAlign="left"
				sortable="false"
				width="40"
			/>
			
			<mx:DataGridColumn
				dataField="is_to_confirm"
				headerText=""
				resizable="false"
				textAlign="center"
				sortable="false"
				width="40"
				rendererIsEditor="true"
			>
				<mx:itemRenderer>
					<mx:Component>
						<mx:CheckBox selected="{data.is_to_confirm == 1}" click="{updateCheck();}">
							<mx:Script>
								<![CDATA[
	            					private function updateCheck() : void
	            					{
	            						data.is_to_confirm = this.selected ? 1 : 0;
	            					}
	        					]]>
							</mx:Script>
						</mx:CheckBox>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			
			<mx:DataGridColumn
				dataField="leave_num"
				headerText="Номер"
				resizable="false"
				textAlign="right"
				width="60"
			>
				<mx:itemRenderer>
					<mx:Component>
						<mx:LinkButton
							label="{data.leave_num}"
						    click="ExternalInterface.call( 'dialogSetupPersonLeave( ' + data.id + ', ' + data.id_person + ' )', '' )"
						/>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			
			<mx:DataGridColumn
				dataField="date"
				headerText="Дата"
				resizable="false"
				textAlign="center"
				width="80"
				visible="{aVisible.date == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="person_name"
				headerText="Служител"
				resizable="true"
				textAlign="left"
				width="200"
				visible="{aVisible.person_name == '1' ? true : false}"
			>
				<mx:itemRenderer>
					<mx:Component>
						<mx:LinkButton
							label="{data.person_name}"
						    click="ExternalInterface.call( 'dialogPersonLeave( ' + data.id_person + ' )', '' )"
						/>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			
			<mx:DataGridColumn
				dataField="person_position"
				headerText="Длъжност"
				resizable="true"
				textAlign="left"
				width="200"
				visible="{aVisible.person_position == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="firm"
				headerText="Фирма"
				resizable="true"
				textAlign="left"
				width="100"
				visible="{aVisible.firm == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="office"
				headerText="Регион"
				resizable="true"
				textAlign="left"
				width="100"
				visible="{aVisible.office == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="object"
				editable="false"
				headerText="Обект"
				resizable="true"
				textAlign="left"
				width="200"
				visible="{aVisible.object == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="leave_type"
				headerText="Тип"
				resizable="false"
				textAlign="left"
				width="70"
				visible="{aVisible.leave_type == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="leave_from"
				headerText="Дата От"
				resizable="false"
				textAlign="center"
				width="80"
				visible="{aVisible.leave_from == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="leave_to"
				headerText="Дата До"
				resizable="false"
				textAlign="center"
				width="80"
				visible="{aVisible.leave_to == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="application_days"
				headerText="Дни"
				resizable="false"
				textAlign="right"
				width="40"
				visible="{aVisible.application_days == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="code_leave_name"
				headerText="Чл. от КТ"
				resizable="true"
				textAlign="left"
				width="150"
				visible="{aVisible.code_leave_name == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="created_user"
				headerText="Въвел"
				resizable="true"
				textAlign="left"
				width="200"
				visible="{aVisible.created_user == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="status"
				headerText="Статус"
				resizable="false"
				textAlign="left"
				width="85"
				visible="{aVisible.status == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="time_confirm"
				headerText="Дата"
				resizable="false"
				textAlign="center"
				width="80"
				headerStyleName="headerGreen"
				visible="{aVisible.time_confirm == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="res_leave_from"
				headerText="Дата От"
				resizable="false"
				textAlign="center"
				width="80"
				headerStyleName="headerGreen"
				visible="{aVisible.res_leave_from == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="res_leave_to"
				headerText="Дата До"
				resizable="false"
				textAlign="center"
				width="80"
				headerStyleName="headerGreen"
				visible="{aVisible.res_leave_to == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="res_application_days"
				headerText="Дни"
				resizable="false"
				textAlign="right"
				width="40"
				headerStyleName="headerGreen"
				visible="{aVisible.res_application_days == '1' ? true : false}"
			/>
			
			<mx:DataGridColumn
				dataField="person_confirm"
				headerText="Потвърдил"
				resizable="false"
				textAlign="left"
				width="80"
				headerStyleName="headerGreen"
				visible="{aVisible.person_confirm == '1' ? true : false}"
			>
				<mx:itemRenderer>
					<mx:Component>
						<mx:Label textAlign="center" text="..." toolTip="{data.person_confirm}"></mx:Label>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</local:columns>
	</local:RowColorDataGrid>
	<local:Pager id="oPaging" x="0" y="126" changePage="onChangePage()">
	</local:Pager>
	
	<mx:Button label="Excel" right="20" id="btnXLS" width="80" height="25"  fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#B1FFAD, #72FF6B]" bottom="10" themeColor="#068100" icon="{imgExcelClass}" click="{onExport( 'xls' );}"/>
	<mx:Button label="PDF" right="110" id="btnPDF" width="80" height="25"  fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#B1FFAD, #72FF6B]" bottom="10" themeColor="#068100" icon="{imgPrintClass}" click="{onExport( 'pdf' );}"/>
	<mx:ComboBox width="200" id="nActionToTake" dataProvider="{aAvailableActions}" bottom="10" left="10"></mx:ComboBox>
	<mx:Button label="Изпълни" width="80" height="20" fillAlphas="[0.6, 0.6, 0.75, 0.75]" fillColors="[#A8DDFF, #77CAFF]" id="btnAction" click="{executeAction();}" bottom="10" left="220"/>
</app:FrameworkApplication>